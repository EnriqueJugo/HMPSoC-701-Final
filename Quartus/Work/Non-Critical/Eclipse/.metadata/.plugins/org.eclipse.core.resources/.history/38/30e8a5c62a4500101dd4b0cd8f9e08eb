/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include <unistd.h>                     // for usleep()
#include "system.h"
#include "alt_types.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_timestamp.h"
#include "sys/alt_irq.h"

/* Volatile variable to hold the value of the button PIO edge-capture register */
volatile int edge_capture = 0;

/* ISR for button PIO interrupts */
static void handle_buttons_interrupts(void* context) {
    volatile int* edge_capture_ptr = (volatile int*)context;

    /* Read and clear the edge-capture register */
    *edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(KEY_PIO_BASE);
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEY_PIO_BASE, 0);

    /* Dummy read to prevent spurious interrupts */
    (void)IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE);
}

/* Initialize button PIO for interrupts on KEY1 */
static void init_buttons_pio() {
    void* edge_capture_ptr = (void*)&edge_capture;

    /* Enable interrupt for KEY1 (bit 1) */
    IOWR_ALTERA_AVALON_PIO_IRQ_MASK(KEY_PIO_BASE, 0x2);
    /* Clear any pending captures */
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0x0);

    /* Register the ISR */
    alt_ic_isr_register(
        KEY_PIO_IRQ_INTERRUPT_CONTROLLER_ID,
        KEY_PIO_IRQ,
        handle_buttons_interrupts,
        edge_capture_ptr,
        0
    );
}

int main() {
    int number = 0xAA;  // 10101010

    printf("\n--- Button Interrupt Example ---\n");
    printf("Displaying 0x%X on LEDs\n", number);
    IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, number);

    init_buttons_pio();
    printf("Button PIO interrupt registered.\n");

    /* Main loop: show activity and handle button presses */
    while (1) {
        usleep(100000);
        printf("*");

        if (edge_capture != 0) {
            if (edge_capture == 0x2) {
                printf("\nDetected KEY1 press.\n");
                usleep(200000);
            }
            edge_capture = 0;
        }
    }

    return 0;
}

