
BFSK.elf:     file format elf32-littlenios2
BFSK.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04000230

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x0000fc14 memsz 0x0000fc14 flags r-x
    LOAD off    0x00010c34 vaddr 0x0400fc34 paddr 0x04011720 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001320c vaddr 0x0401320c paddr 0x0401320c align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f6a4  04000230  04000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000360  0400f8d4  0400f8d4  000108d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0400fc34  04011720  00010c34  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  0401320c  0401320c  0001320c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  04013374  04013374  00012720  2**0
                  CONTENTS
  7 .onchip_memory 00000000  08008000  08008000  00012720  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012720  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000eb0  00000000  00000000  00012748  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023316  00000000  00000000  000135f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008ed6  00000000  00000000  0003690e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b448  00000000  00000000  0003f7e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000203c  00000000  00000000  0004ac2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000389f  00000000  00000000  0004cc68  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001786c  00000000  00000000  00050507  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00067d74  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018d0  00000000  00000000  00067d88  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006c6bd  2**0
                  CONTENTS, READONLY
 19 .cpu          00000003  00000000  00000000  0006c6c0  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006c6c3  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006c6c4  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0006c6c5  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0006c6ce  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0006c6d7  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000e  00000000  00000000  0006c6e0  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000003b  00000000  00000000  0006c6ee  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0007459c  00000000  00000000  0006c729  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
04000230 l    d  .text	00000000 .text
0400f8d4 l    d  .rodata	00000000 .rodata
0400fc34 l    d  .rwdata	00000000 .rwdata
0401320c l    d  .bss	00000000 .bss
04013374 l    d  .sdram	00000000 .sdram
08008000 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../BFSK_bsp//obj/HAL/src/crt0.o
04000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0400f982 l     O .rodata	00000010 zeroes.4404
040027b8 l     F .text	000000bc __sbprintf
0400f992 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
040029c8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
04004520 l     F .text	00000008 __fp_unlock
04004534 l     F .text	0000019c __sinit.part.1
040046d0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0400fc34 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
04010078 l     O .rwdata	00000020 lc_ctype_charset
04010058 l     O .rwdata	00000020 lc_message_charset
04010098 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0400f9c4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
04007ba4 l     F .text	000000fc __sprint_r.part.0
0400fae8 l     O .rodata	00000010 zeroes.4349
040091e0 l     F .text	000000bc __sbprintf
0400faf8 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0400d228 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0400d33c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0400d368 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0400d45c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0400d544 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0400d630 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0400d80c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04011710 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0400da80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400dbbc l     F .text	00000034 alt_dev_reg
04010680 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400deac l     F .text	0000020c altera_avalon_jtag_uart_irq
0400e0b8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400e83c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400ec9c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400edfc l     F .text	0000003c alt_get_errno
0400ee38 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
04013248 g     O .bss	00000004 alt_instruction_exception_handler
040071e8 g     F .text	00000074 _mprec_log10
040072d4 g     F .text	0000008c __any_on
04009794 g     F .text	00000054 _isatty_r
0400f9d0 g     O .rodata	00000028 __mprec_tinytens
0400d748 g     F .text	0000007c alt_main
04000354 g     F .text	000000c0 _puts_r
04013274 g     O .bss	00000100 alt_irq
040097e8 g     F .text	00000060 _lseek_r
04011720 g       *ABS*	00000000 __flash_rwdata_start
0400bc00 g     F .text	00000088 .hidden __eqdf2
04013374 g       *ABS*	00000000 __alt_heap_start
04000318 g     F .text	0000003c printf
04009a00 g     F .text	0000009c _wcrtomb_r
04007a64 g     F .text	0000005c __sseek
04004880 g     F .text	00000010 __sinit
040098a8 g     F .text	00000140 __swbuf_r
04005354 g     F .text	0000007c _setlocale_r
040046d8 g     F .text	00000078 __sfmoreglue
0400d7e8 g     F .text	00000024 __malloc_unlock
04013238 g     O .bss	00000004 altera_avalon_timer_ts_freq
04006024 g     F .text	0000015c memmove
04004868 g     F .text	00000018 _cleanup
040062a8 g     F .text	000000a8 _Balloc
0400bc88 g     F .text	000000dc .hidden __gtdf2
0400f224 g     F .text	00000024 altera_nios2_gen2_irq_init
04000000 g     F .entry	0000000c __reset
04000020 g       *ABS*	00000000 __flash_exceptions_start
04009738 g     F .text	0000005c _fstat_r
04013224 g     O .bss	00000004 errno
040079e0 g     F .text	00000008 __seofread
0401322c g     O .bss	00000004 alt_argv
040196e0 g       *ABS*	00000000 _gp
04010500 g     O .rwdata	00000180 alt_fd_list
0400f248 g     F .text	00000090 alt_find_dev
04005edc g     F .text	00000148 memcpy
04004528 g     F .text	0000000c _cleanup_r
0400d040 g     F .text	000000dc .hidden __floatsidf
0400ed80 g     F .text	0000007c alt_io_redirect
0400bd64 g     F .text	000000f4 .hidden __ltdf2
0400f8d4 g       *ABS*	00000000 __DTOR_END__
04000414 g     F .text	00000014 puts
0400f4a4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
040078c4 g     F .text	00000074 __fpclassifyd
04007144 g     F .text	000000a4 __ratio
040091c4 g     F .text	0000001c __vfiprintf_internal
0400e2b0 g     F .text	0000021c altera_avalon_jtag_uart_read
040002e8 g     F .text	00000030 _printf_r
0400a8a0 g     F .text	00000064 .hidden __udivsi3
0400d498 g     F .text	000000ac isatty
0400fa20 g     O .rodata	000000c8 __mprec_tens
040053d0 g     F .text	0000000c __locale_charset
04013220 g     O .bss	00000004 __malloc_top_pad
040116e8 g     O .rwdata	00000004 __mb_cur_max
04005400 g     F .text	0000000c _localeconv_r
040066dc g     F .text	0000003c __i2b
04004d04 g     F .text	000004c8 __sfvwrite_r
04007938 g     F .text	00000054 _sbrk_r
04009848 g     F .text	00000060 _read_r
04011708 g     O .rwdata	00000004 alt_max_fd
0400942c g     F .text	000000f0 _fclose_r
040044f0 g     F .text	00000030 fflush
0401321c g     O .bss	00000004 __malloc_max_sbrked_mem
0400a984 g     F .text	000008ac .hidden __adddf3
04006eec g     F .text	0000010c __b2d
0400a1e4 g     F .text	000005c4 .hidden __umoddi3
0400d66c g     F .text	000000dc lseek
040116e0 g     O .rwdata	00000004 _global_impure_ptr
04007360 g     F .text	00000564 _realloc_r
04013374 g       *ABS*	00000000 __bss_end
0400ebac g     F .text	000000f0 alt_iic_isr_register
0400f11c g     F .text	00000108 alt_tick
04009be8 g     F .text	000005fc .hidden __udivdi3
04009694 g     F .text	00000024 _fputwc_r
0400f9f8 g     O .rodata	00000028 __mprec_bigtens
040064c0 g     F .text	00000104 __s2b
0400d11c g     F .text	000000a8 .hidden __floatunsidf
04006c2c g     F .text	00000060 __mcmp
040048a0 g     F .text	00000018 __fp_lock_all
0400eb60 g     F .text	0000004c alt_ic_irq_enabled
0400f080 g     F .text	0000009c alt_alarm_stop
0401323c g     O .bss	00000004 alt_irq_active
040000fc g     F .exceptions	000000d4 alt_irq_handler
040104d8 g     O .rwdata	00000028 alt_dev_null
0400e81c g     F .text	00000020 alt_dcache_flush_all
040065c4 g     F .text	00000068 __hi0bits
0400cfc0 g     F .text	00000080 .hidden __fixdfsi
04011720 g       *ABS*	00000000 __ram_rwdata_end
08008000 g       *ABS*	00000000 __alt_mem_onchip_memory
04011700 g     O .rwdata	00000008 alt_dev_list
0400dabc g     F .text	00000100 write
0400fc34 g       *ABS*	00000000 __ram_rodata_end
0400d3a4 g     F .text	000000b8 fstat
0400bd64 g     F .text	000000f4 .hidden __ledf2
040069a4 g     F .text	00000140 __pow5mult
04007cb8 g     F .text	0000150c ___vfiprintf_internal_r
04013214 g     O .bss	00000004 __nlocale_changed
0400a904 g     F .text	00000058 .hidden __umodsi3
04013374 g       *ABS*	00000000 end
0400ddec g     F .text	000000c0 altera_avalon_jtag_uart_init
040001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0400f8d4 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0400d1c4 g     F .text	00000064 .hidden __clzsi2
0400e4cc g     F .text	00000224 altera_avalon_jtag_uart_write
04004890 g     F .text	00000004 __sfp_lock_acquire
04005df8 g     F .text	000000e4 memchr
040004c0 g     F .text	000022dc ___vfprintf_internal_r
040049f4 g     F .text	00000310 _free_r
040053dc g     F .text	00000010 __locale_mb_cur_max
0400f720 g     F .text	00000180 __call_exitprocs
04013210 g     O .bss	00000004 __mlocale_changed
040116ec g     O .rwdata	00000004 __malloc_sbrk_base
04000230 g     F .text	0000003c _start
04013240 g     O .bss	00000004 _alt_tick_rate
04006ae4 g     F .text	00000148 __lshift
04013244 g     O .bss	00000004 _alt_nticks
0400d848 g     F .text	00000104 read
0400dc28 g     F .text	00000060 alt_sys_init
0400f608 g     F .text	00000118 __register_exitproc
04006718 g     F .text	0000028c __multiply
0400e158 g     F .text	00000068 altera_avalon_jtag_uart_close
0400a95c g     F .text	00000028 .hidden __mulsi3
0400fc34 g       *ABS*	00000000 __ram_rwdata_start
0400f8d4 g       *ABS*	00000000 __ram_rodata_start
0401324c g     O .bss	00000028 __malloc_current_mallinfo
04006ff8 g     F .text	0000014c __d2b
0400dc88 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0400f3e0 g     F .text	000000c4 alt_get_fd
040092fc g     F .text	00000054 _close_r
0400f58c g     F .text	0000007c memcmp
0400dd48 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
04013374 g       *ABS*	00000000 __alt_stack_base
0400dd98 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04002874 g     F .text	00000154 __swsetup_r
0400b230 g     F .text	000009d0 .hidden __divdf3
04004750 g     F .text	00000118 __sfp
0400725c g     F .text	00000078 __copybits
040100d0 g     O .rwdata	00000408 __malloc_av_
0400489c g     F .text	00000004 __sinit_lock_release
0400be58 g     F .text	0000086c .hidden __muldf3
0400798c g     F .text	00000054 __sread
0400f2d8 g     F .text	00000108 alt_find_file
0400e878 g     F .text	000000a4 alt_dev_llist_insert
0400d7c4 g     F .text	00000024 __malloc_lock
0400d9d0 g     F .text	000000b0 sbrk
04004494 g     F .text	0000005c _fflush_r
04009350 g     F .text	000000dc _calloc_r
0401320c g       *ABS*	00000000 __bss_start
04006180 g     F .text	00000128 memset
0400026c g     F .text	0000007c main
04013230 g     O .bss	00000004 alt_envp
04013218 g     O .bss	00000004 __malloc_max_total_mem
0400dce8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
040099e8 g     F .text	00000018 __swbuf
04007ac0 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0400951c g     F .text	00000014 fclose
04002bf0 g     F .text	00001688 _dtoa_r
040055ec g     F .text	0000080c _malloc_r
04009b5c g     F .text	00000030 __ascii_wctomb
0401170c g     O .rwdata	00000004 alt_errno
040051cc g     F .text	000000c4 _fwalk
0400a7a8 g     F .text	00000084 .hidden __divsi3
040048d0 g     F .text	00000124 _malloc_trim_r
0400f8d4 g       *ABS*	00000000 __CTOR_END__
04007ac8 g     F .text	000000dc strcmp
0400f8d4 g       *ABS*	00000000 __flash_rodata_start
0400f8d4 g       *ABS*	00000000 __DTOR_LIST__
0400bc00 g     F .text	00000088 .hidden __nedf2
0400dbf0 g     F .text	00000038 alt_irq_init
0400d94c g     F .text	00000084 alt_release_fd
0400fb08 g     O .rodata	00000100 .hidden __clz_tab
0401320c g     O .bss	00000004 _PathLocale
0400f540 g     F .text	00000014 atexit
0400929c g     F .text	00000060 _write_r
0400540c g     F .text	00000018 setlocale
040116e4 g     O .rwdata	00000004 _impure_ptr
04013228 g     O .bss	00000004 alt_argc
04004278 g     F .text	0000021c __sflush_r
04013234 g     O .bss	00000004 altera_avalon_timer_ts_base
0400e97c g     F .text	00000060 _do_dtors
040053f8 g     F .text	00000008 __locale_cjk_lang
04000020 g       .exceptions	00000000 alt_irq_entry
04006e88 g     F .text	00000064 __ulp
040048b8 g     F .text	00000018 __fp_unlock_all
040116f8 g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
04005424 g     F .text	0000000c localeconv
0400e9fc g     F .text	00000050 alt_ic_isr_register
04011720 g       *ABS*	00000000 _edata
04013374 g       *ABS*	00000000 _end
04009530 g     F .text	00000164 __fputwc
04000230 g       *ABS*	00000000 __ram_exceptions_end
0400e1c0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0400ead4 g     F .text	0000008c alt_ic_irq_disable
040079e8 g     F .text	0000007c __swrite
040116f0 g     O .rwdata	00000004 __malloc_trim_threshold
040053ec g     F .text	0000000c __locale_msgcharset
0400f554 g     F .text	00000038 exit
04005290 g     F .text	000000c4 _fwalk_reent
04006c8c g     F .text	000001fc __mdiff
0400a82c g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
04004894 g     F .text	00000004 __sfp_lock_release
04000000 g       *ABS*	00000000 __alt_mem_sdram
0400f8a0 g     F .text	00000034 _exit
0400e6f0 g     F .text	0000012c alt_alarm_start
04005430 g     F .text	000001bc __smakebuf_r
04000428 g     F .text	00000098 strlen
0400ef24 g     F .text	0000015c open
0400bc88 g     F .text	000000dc .hidden __gedf2
040116f4 g     O .rwdata	00000004 __wctomb
04007ca0 g     F .text	00000018 __sprint_r
0400e9dc g     F .text	00000020 alt_icache_flush_all
04011714 g     O .rwdata	00000004 alt_priority_mask
0400ea4c g     F .text	00000088 alt_ic_irq_enable
0400279c g     F .text	0000001c __vfprintf_internal
04009b8c g     F .text	0000005c _wctomb_r
0400c6c4 g     F .text	000008fc .hidden __subdf3
0400662c g     F .text	000000b0 __lo0bits
04011718 g     O .rwdata	00000008 alt_alarm_list
0400e91c g     F .text	00000060 _do_ctors
04009a9c g     F .text	000000c0 wcrtomb
0400d264 g     F .text	000000d8 close
0400d5ac g     F .text	00000084 alt_load
040096b8 g     F .text	00000080 fputwc
04004898 g     F .text	00000004 __sinit_lock_acquire
04006378 g     F .text	00000148 __multadd
04006350 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000000:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000004:	08408c14 	ori	at,at,560
    jmp r1
 4000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000fc0 	call	40000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000706 	br	40000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 400008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4000098:	40001d00 	call	40001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 400009c:	1000021e 	bne	r2,zero,40000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000f8:	ef80083a 	eret

040000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40000fc:	defff904 	addi	sp,sp,-28
 4000100:	dfc00615 	stw	ra,24(sp)
 4000104:	df000515 	stw	fp,20(sp)
 4000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 400010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4000110:	0005313a 	rdctl	r2,ipending
 4000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 400011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4000124:	00800044 	movi	r2,1
 4000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 400012c:	e0fffb17 	ldw	r3,-20(fp)
 4000130:	e0bffc17 	ldw	r2,-16(fp)
 4000134:	1884703a 	and	r2,r3,r2
 4000138:	10001426 	beq	r2,zero,400018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 400013c:	00810074 	movhi	r2,1025
 4000140:	108c9d04 	addi	r2,r2,12916
 4000144:	e0fffd17 	ldw	r3,-12(fp)
 4000148:	180690fa 	slli	r3,r3,3
 400014c:	10c5883a 	add	r2,r2,r3
 4000150:	10c00017 	ldw	r3,0(r2)
 4000154:	00810074 	movhi	r2,1025
 4000158:	108c9d04 	addi	r2,r2,12916
 400015c:	e13ffd17 	ldw	r4,-12(fp)
 4000160:	200890fa 	slli	r4,r4,3
 4000164:	1105883a 	add	r2,r2,r4
 4000168:	10800104 	addi	r2,r2,4
 400016c:	10800017 	ldw	r2,0(r2)
 4000170:	1009883a 	mov	r4,r2
 4000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 400017c:	0005313a 	rdctl	r2,ipending
 4000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4000184:	e0bfff17 	ldw	r2,-4(fp)
 4000188:	00000706 	br	40001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 400018c:	e0bffc17 	ldw	r2,-16(fp)
 4000190:	1085883a 	add	r2,r2,r2
 4000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4000198:	e0bffd17 	ldw	r2,-12(fp)
 400019c:	10800044 	addi	r2,r2,1
 40001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40001a4:	003fe106 	br	400012c <__alt_mem_onchip_memory+0xfbff812c>

    active = alt_irq_pending ();
 40001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40001ac:	e0bffb17 	ldw	r2,-20(fp)
 40001b0:	103fdb1e 	bne	r2,zero,4000120 <__alt_mem_onchip_memory+0xfbff8120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40001b4:	0001883a 	nop
}
 40001b8:	0001883a 	nop
 40001bc:	e037883a 	mov	sp,fp
 40001c0:	dfc00117 	ldw	ra,4(sp)
 40001c4:	df000017 	ldw	fp,0(sp)
 40001c8:	dec00204 	addi	sp,sp,8
 40001cc:	f800283a 	ret

040001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40001d0:	defffb04 	addi	sp,sp,-20
 40001d4:	dfc00415 	stw	ra,16(sp)
 40001d8:	df000315 	stw	fp,12(sp)
 40001dc:	df000304 	addi	fp,sp,12
 40001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 40001e4:	00bfffc4 	movi	r2,-1
 40001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 40001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40001f0:	d0a6da17 	ldw	r2,-25752(gp)
 40001f4:	10000726 	beq	r2,zero,4000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 40001f8:	d0a6da17 	ldw	r2,-25752(gp)
 40001fc:	e0fffd17 	ldw	r3,-12(fp)
 4000200:	e1bffe17 	ldw	r6,-8(fp)
 4000204:	e17fff17 	ldw	r5,-4(fp)
 4000208:	1809883a 	mov	r4,r3
 400020c:	103ee83a 	callr	r2
 4000210:	00000206 	br	400021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4000218:	0005883a 	mov	r2,zero
}
 400021c:	e037883a 	mov	sp,fp
 4000220:	dfc00117 	ldw	ra,4(sp)
 4000224:	df000017 	ldw	fp,0(sp)
 4000228:	dec00204 	addi	sp,sp,8
 400022c:	f800283a 	ret

Disassembly of section .text:

04000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4000230:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 4000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4000238:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 400023c:	d6a5b814 	ori	gp,gp,38624
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4000240:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 4000244:	108c8314 	ori	r2,r2,12812

    movhi r3, %hi(__bss_end)
 4000248:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 400024c:	18ccdd14 	ori	r3,r3,13172

    beq r2, r3, 1f
 4000250:	10c00326 	beq	r2,r3,4000260 <_start+0x30>

0:
    stw zero, (r2)
 4000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 400025c:	10fffd36 	bltu	r2,r3,4000254 <__alt_mem_onchip_memory+0xfbff8254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000260:	400d5ac0 	call	400d5ac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000264:	400d7480 	call	400d748 <alt_main>

04000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000268:	003fff06 	br	4000268 <__alt_mem_onchip_memory+0xfbff8268>

0400026c <main>:
#include "system.h"
#include <stdio.h>
#include <stdint.h>

int main()
{
 400026c:	defffc04 	addi	sp,sp,-16
 4000270:	dfc00315 	stw	ra,12(sp)
 4000274:	df000215 	stw	fp,8(sp)
 4000278:	df000204 	addi	fp,sp,8
  printf("Hello from Nios II!\n");
 400027c:	01010074 	movhi	r4,1025
 4000280:	213e3504 	addi	r4,r4,-1836
 4000284:	40004140 	call	4000414 <puts>
  printf("Going to use the custom instruction\n");
 4000288:	01010074 	movhi	r4,1025
 400028c:	213e3a04 	addi	r4,r4,-1816
 4000290:	40004140 	call	4000414 <puts>
  ALT_CI_ASP_CONFIG_0("10100000000000000000000000000000");
 4000294:	00810074 	movhi	r2,1025
 4000298:	10be4304 	addi	r2,r2,-1780
 400029c:	1005c032 	custom	0,r2,r2,zero

  printf("Done.\n");
 40002a0:	01010074 	movhi	r4,1025
 40002a4:	213e4c04 	addi	r4,r4,-1744
 40002a8:	40004140 	call	4000414 <puts>
  uint32_t put = 0x1111;
 40002ac:	00844444 	movi	r2,4369
 40002b0:	e0bffe15 	stw	r2,-8(fp)
  uint32_t result = ALT_CI_RECEIVE_DATA_0(put);
 40002b4:	e0bffe17 	ldw	r2,-8(fp)
 40002b8:	1005c072 	custom	1,r2,r2,zero
 40002bc:	e0bfff15 	stw	r2,-4(fp)
  printf("%d\n", result);
 40002c0:	e17fff17 	ldw	r5,-4(fp)
 40002c4:	01010074 	movhi	r4,1025
 40002c8:	213e4e04 	addi	r4,r4,-1736
 40002cc:	40003180 	call	4000318 <printf>

  return 0;
 40002d0:	0005883a 	mov	r2,zero
}
 40002d4:	e037883a 	mov	sp,fp
 40002d8:	dfc00117 	ldw	ra,4(sp)
 40002dc:	df000017 	ldw	fp,0(sp)
 40002e0:	dec00204 	addi	sp,sp,8
 40002e4:	f800283a 	ret

040002e8 <_printf_r>:
 40002e8:	defffd04 	addi	sp,sp,-12
 40002ec:	2805883a 	mov	r2,r5
 40002f0:	dfc00015 	stw	ra,0(sp)
 40002f4:	d9800115 	stw	r6,4(sp)
 40002f8:	d9c00215 	stw	r7,8(sp)
 40002fc:	21400217 	ldw	r5,8(r4)
 4000300:	d9c00104 	addi	r7,sp,4
 4000304:	100d883a 	mov	r6,r2
 4000308:	40004c00 	call	40004c0 <___vfprintf_internal_r>
 400030c:	dfc00017 	ldw	ra,0(sp)
 4000310:	dec00304 	addi	sp,sp,12
 4000314:	f800283a 	ret

04000318 <printf>:
 4000318:	defffc04 	addi	sp,sp,-16
 400031c:	dfc00015 	stw	ra,0(sp)
 4000320:	d9400115 	stw	r5,4(sp)
 4000324:	d9800215 	stw	r6,8(sp)
 4000328:	d9c00315 	stw	r7,12(sp)
 400032c:	00810074 	movhi	r2,1025
 4000330:	1085b904 	addi	r2,r2,5860
 4000334:	10800017 	ldw	r2,0(r2)
 4000338:	200b883a 	mov	r5,r4
 400033c:	d9800104 	addi	r6,sp,4
 4000340:	11000217 	ldw	r4,8(r2)
 4000344:	400279c0 	call	400279c <__vfprintf_internal>
 4000348:	dfc00017 	ldw	ra,0(sp)
 400034c:	dec00404 	addi	sp,sp,16
 4000350:	f800283a 	ret

04000354 <_puts_r>:
 4000354:	defff604 	addi	sp,sp,-40
 4000358:	dc000715 	stw	r16,28(sp)
 400035c:	2021883a 	mov	r16,r4
 4000360:	2809883a 	mov	r4,r5
 4000364:	dc400815 	stw	r17,32(sp)
 4000368:	dfc00915 	stw	ra,36(sp)
 400036c:	2823883a 	mov	r17,r5
 4000370:	40004280 	call	4000428 <strlen>
 4000374:	10c00044 	addi	r3,r2,1
 4000378:	d8800115 	stw	r2,4(sp)
 400037c:	00810074 	movhi	r2,1025
 4000380:	10be4f04 	addi	r2,r2,-1732
 4000384:	d8800215 	stw	r2,8(sp)
 4000388:	00800044 	movi	r2,1
 400038c:	d8800315 	stw	r2,12(sp)
 4000390:	00800084 	movi	r2,2
 4000394:	dc400015 	stw	r17,0(sp)
 4000398:	d8c00615 	stw	r3,24(sp)
 400039c:	dec00415 	stw	sp,16(sp)
 40003a0:	d8800515 	stw	r2,20(sp)
 40003a4:	80000226 	beq	r16,zero,40003b0 <_puts_r+0x5c>
 40003a8:	80800e17 	ldw	r2,56(r16)
 40003ac:	10001426 	beq	r2,zero,4000400 <_puts_r+0xac>
 40003b0:	81400217 	ldw	r5,8(r16)
 40003b4:	2880030b 	ldhu	r2,12(r5)
 40003b8:	10c8000c 	andi	r3,r2,8192
 40003bc:	1800061e 	bne	r3,zero,40003d8 <_puts_r+0x84>
 40003c0:	29001917 	ldw	r4,100(r5)
 40003c4:	00f7ffc4 	movi	r3,-8193
 40003c8:	10880014 	ori	r2,r2,8192
 40003cc:	20c6703a 	and	r3,r4,r3
 40003d0:	2880030d 	sth	r2,12(r5)
 40003d4:	28c01915 	stw	r3,100(r5)
 40003d8:	d9800404 	addi	r6,sp,16
 40003dc:	8009883a 	mov	r4,r16
 40003e0:	4004d040 	call	4004d04 <__sfvwrite_r>
 40003e4:	1000091e 	bne	r2,zero,400040c <_puts_r+0xb8>
 40003e8:	00800284 	movi	r2,10
 40003ec:	dfc00917 	ldw	ra,36(sp)
 40003f0:	dc400817 	ldw	r17,32(sp)
 40003f4:	dc000717 	ldw	r16,28(sp)
 40003f8:	dec00a04 	addi	sp,sp,40
 40003fc:	f800283a 	ret
 4000400:	8009883a 	mov	r4,r16
 4000404:	40048800 	call	4004880 <__sinit>
 4000408:	003fe906 	br	40003b0 <__alt_mem_onchip_memory+0xfbff83b0>
 400040c:	00bfffc4 	movi	r2,-1
 4000410:	003ff606 	br	40003ec <__alt_mem_onchip_memory+0xfbff83ec>

04000414 <puts>:
 4000414:	00810074 	movhi	r2,1025
 4000418:	1085b904 	addi	r2,r2,5860
 400041c:	200b883a 	mov	r5,r4
 4000420:	11000017 	ldw	r4,0(r2)
 4000424:	40003541 	jmpi	4000354 <_puts_r>

04000428 <strlen>:
 4000428:	208000cc 	andi	r2,r4,3
 400042c:	10002026 	beq	r2,zero,40004b0 <strlen+0x88>
 4000430:	20800007 	ldb	r2,0(r4)
 4000434:	10002026 	beq	r2,zero,40004b8 <strlen+0x90>
 4000438:	2005883a 	mov	r2,r4
 400043c:	00000206 	br	4000448 <strlen+0x20>
 4000440:	10c00007 	ldb	r3,0(r2)
 4000444:	18001826 	beq	r3,zero,40004a8 <strlen+0x80>
 4000448:	10800044 	addi	r2,r2,1
 400044c:	10c000cc 	andi	r3,r2,3
 4000450:	183ffb1e 	bne	r3,zero,4000440 <__alt_mem_onchip_memory+0xfbff8440>
 4000454:	10c00017 	ldw	r3,0(r2)
 4000458:	01ffbff4 	movhi	r7,65279
 400045c:	39ffbfc4 	addi	r7,r7,-257
 4000460:	00ca303a 	nor	r5,zero,r3
 4000464:	01a02074 	movhi	r6,32897
 4000468:	19c7883a 	add	r3,r3,r7
 400046c:	31a02004 	addi	r6,r6,-32640
 4000470:	1946703a 	and	r3,r3,r5
 4000474:	1986703a 	and	r3,r3,r6
 4000478:	1800091e 	bne	r3,zero,40004a0 <strlen+0x78>
 400047c:	10800104 	addi	r2,r2,4
 4000480:	10c00017 	ldw	r3,0(r2)
 4000484:	19cb883a 	add	r5,r3,r7
 4000488:	00c6303a 	nor	r3,zero,r3
 400048c:	28c6703a 	and	r3,r5,r3
 4000490:	1986703a 	and	r3,r3,r6
 4000494:	183ff926 	beq	r3,zero,400047c <__alt_mem_onchip_memory+0xfbff847c>
 4000498:	00000106 	br	40004a0 <strlen+0x78>
 400049c:	10800044 	addi	r2,r2,1
 40004a0:	10c00007 	ldb	r3,0(r2)
 40004a4:	183ffd1e 	bne	r3,zero,400049c <__alt_mem_onchip_memory+0xfbff849c>
 40004a8:	1105c83a 	sub	r2,r2,r4
 40004ac:	f800283a 	ret
 40004b0:	2005883a 	mov	r2,r4
 40004b4:	003fe706 	br	4000454 <__alt_mem_onchip_memory+0xfbff8454>
 40004b8:	0005883a 	mov	r2,zero
 40004bc:	f800283a 	ret

040004c0 <___vfprintf_internal_r>:
 40004c0:	deffb804 	addi	sp,sp,-288
 40004c4:	dfc04715 	stw	ra,284(sp)
 40004c8:	ddc04515 	stw	r23,276(sp)
 40004cc:	dd404315 	stw	r21,268(sp)
 40004d0:	d9002d15 	stw	r4,180(sp)
 40004d4:	282f883a 	mov	r23,r5
 40004d8:	302b883a 	mov	r21,r6
 40004dc:	d9c02e15 	stw	r7,184(sp)
 40004e0:	df004615 	stw	fp,280(sp)
 40004e4:	dd804415 	stw	r22,272(sp)
 40004e8:	dd004215 	stw	r20,264(sp)
 40004ec:	dcc04115 	stw	r19,260(sp)
 40004f0:	dc804015 	stw	r18,256(sp)
 40004f4:	dc403f15 	stw	r17,252(sp)
 40004f8:	dc003e15 	stw	r16,248(sp)
 40004fc:	40054000 	call	4005400 <_localeconv_r>
 4000500:	10800017 	ldw	r2,0(r2)
 4000504:	1009883a 	mov	r4,r2
 4000508:	d8803415 	stw	r2,208(sp)
 400050c:	40004280 	call	4000428 <strlen>
 4000510:	d8803715 	stw	r2,220(sp)
 4000514:	d8802d17 	ldw	r2,180(sp)
 4000518:	10000226 	beq	r2,zero,4000524 <___vfprintf_internal_r+0x64>
 400051c:	10800e17 	ldw	r2,56(r2)
 4000520:	1000fb26 	beq	r2,zero,4000910 <___vfprintf_internal_r+0x450>
 4000524:	b880030b 	ldhu	r2,12(r23)
 4000528:	10c8000c 	andi	r3,r2,8192
 400052c:	1800061e 	bne	r3,zero,4000548 <___vfprintf_internal_r+0x88>
 4000530:	b9001917 	ldw	r4,100(r23)
 4000534:	00f7ffc4 	movi	r3,-8193
 4000538:	10880014 	ori	r2,r2,8192
 400053c:	20c6703a 	and	r3,r4,r3
 4000540:	b880030d 	sth	r2,12(r23)
 4000544:	b8c01915 	stw	r3,100(r23)
 4000548:	10c0020c 	andi	r3,r2,8
 400054c:	1800c326 	beq	r3,zero,400085c <___vfprintf_internal_r+0x39c>
 4000550:	b8c00417 	ldw	r3,16(r23)
 4000554:	1800c126 	beq	r3,zero,400085c <___vfprintf_internal_r+0x39c>
 4000558:	1080068c 	andi	r2,r2,26
 400055c:	00c00284 	movi	r3,10
 4000560:	10c0c626 	beq	r2,r3,400087c <___vfprintf_internal_r+0x3bc>
 4000564:	d8c00404 	addi	r3,sp,16
 4000568:	05010074 	movhi	r20,1025
 400056c:	d9001e04 	addi	r4,sp,120
 4000570:	a53e6084 	addi	r20,r20,-1662
 4000574:	d8c01e15 	stw	r3,120(sp)
 4000578:	d8002015 	stw	zero,128(sp)
 400057c:	d8001f15 	stw	zero,124(sp)
 4000580:	d8003315 	stw	zero,204(sp)
 4000584:	d8003615 	stw	zero,216(sp)
 4000588:	d8003815 	stw	zero,224(sp)
 400058c:	1811883a 	mov	r8,r3
 4000590:	d8003915 	stw	zero,228(sp)
 4000594:	d8003a15 	stw	zero,232(sp)
 4000598:	d8002f15 	stw	zero,188(sp)
 400059c:	d9002815 	stw	r4,160(sp)
 40005a0:	a8800007 	ldb	r2,0(r21)
 40005a4:	10028b26 	beq	r2,zero,4000fd4 <___vfprintf_internal_r+0xb14>
 40005a8:	00c00944 	movi	r3,37
 40005ac:	a823883a 	mov	r17,r21
 40005b0:	10c0021e 	bne	r2,r3,40005bc <___vfprintf_internal_r+0xfc>
 40005b4:	00001406 	br	4000608 <___vfprintf_internal_r+0x148>
 40005b8:	10c00326 	beq	r2,r3,40005c8 <___vfprintf_internal_r+0x108>
 40005bc:	8c400044 	addi	r17,r17,1
 40005c0:	88800007 	ldb	r2,0(r17)
 40005c4:	103ffc1e 	bne	r2,zero,40005b8 <__alt_mem_onchip_memory+0xfbff85b8>
 40005c8:	8d61c83a 	sub	r16,r17,r21
 40005cc:	80000e26 	beq	r16,zero,4000608 <___vfprintf_internal_r+0x148>
 40005d0:	d8c02017 	ldw	r3,128(sp)
 40005d4:	d8801f17 	ldw	r2,124(sp)
 40005d8:	45400015 	stw	r21,0(r8)
 40005dc:	1c07883a 	add	r3,r3,r16
 40005e0:	10800044 	addi	r2,r2,1
 40005e4:	d8c02015 	stw	r3,128(sp)
 40005e8:	44000115 	stw	r16,4(r8)
 40005ec:	d8801f15 	stw	r2,124(sp)
 40005f0:	00c001c4 	movi	r3,7
 40005f4:	1880a916 	blt	r3,r2,400089c <___vfprintf_internal_r+0x3dc>
 40005f8:	42000204 	addi	r8,r8,8
 40005fc:	d9402f17 	ldw	r5,188(sp)
 4000600:	2c0b883a 	add	r5,r5,r16
 4000604:	d9402f15 	stw	r5,188(sp)
 4000608:	88800007 	ldb	r2,0(r17)
 400060c:	1000aa26 	beq	r2,zero,40008b8 <___vfprintf_internal_r+0x3f8>
 4000610:	8d400044 	addi	r21,r17,1
 4000614:	8c400047 	ldb	r17,1(r17)
 4000618:	0021883a 	mov	r16,zero
 400061c:	00bfffc4 	movi	r2,-1
 4000620:	0025883a 	mov	r18,zero
 4000624:	dc002905 	stb	r16,164(sp)
 4000628:	d8002785 	stb	zero,158(sp)
 400062c:	d8002b05 	stb	zero,172(sp)
 4000630:	d8802a15 	stw	r2,168(sp)
 4000634:	d8003115 	stw	zero,196(sp)
 4000638:	04c01604 	movi	r19,88
 400063c:	05800244 	movi	r22,9
 4000640:	9021883a 	mov	r16,r18
 4000644:	4039883a 	mov	fp,r8
 4000648:	ad400044 	addi	r21,r21,1
 400064c:	88bff804 	addi	r2,r17,-32
 4000650:	98833236 	bltu	r19,r2,400131c <___vfprintf_internal_r+0xe5c>
 4000654:	100490ba 	slli	r2,r2,2
 4000658:	00c10034 	movhi	r3,1024
 400065c:	18c19b04 	addi	r3,r3,1644
 4000660:	10c5883a 	add	r2,r2,r3
 4000664:	10800017 	ldw	r2,0(r2)
 4000668:	1000683a 	jmp	r2
 400066c:	04001214 	movui	r16,72
 4000670:	0400131c 	xori	r16,zero,76
 4000674:	0400131c 	xori	r16,zero,76
 4000678:	04001234 	movhi	r16,72
 400067c:	0400131c 	xori	r16,zero,76
 4000680:	0400131c 	xori	r16,zero,76
 4000684:	0400131c 	xori	r16,zero,76
 4000688:	0400131c 	xori	r16,zero,76
 400068c:	0400131c 	xori	r16,zero,76
 4000690:	0400131c 	xori	r16,zero,76
 4000694:	0400091c 	xori	r16,zero,36
 4000698:	04001124 	muli	r16,zero,68
 400069c:	0400131c 	xori	r16,zero,76
 40006a0:	040007e0 	cmpeqi	r16,zero,31
 40006a4:	04000940 	call	400094 <__alt_mem_sdram-0x3bfff6c>
 40006a8:	0400131c 	xori	r16,zero,76
 40006ac:	04000990 	cmplti	r16,zero,38
 40006b0:	0400099c 	xori	r16,zero,38
 40006b4:	0400099c 	xori	r16,zero,38
 40006b8:	0400099c 	xori	r16,zero,38
 40006bc:	0400099c 	xori	r16,zero,38
 40006c0:	0400099c 	xori	r16,zero,38
 40006c4:	0400099c 	xori	r16,zero,38
 40006c8:	0400099c 	xori	r16,zero,38
 40006cc:	0400099c 	xori	r16,zero,38
 40006d0:	0400099c 	xori	r16,zero,38
 40006d4:	0400131c 	xori	r16,zero,76
 40006d8:	0400131c 	xori	r16,zero,76
 40006dc:	0400131c 	xori	r16,zero,76
 40006e0:	0400131c 	xori	r16,zero,76
 40006e4:	0400131c 	xori	r16,zero,76
 40006e8:	0400131c 	xori	r16,zero,76
 40006ec:	0400131c 	xori	r16,zero,76
 40006f0:	0400131c 	xori	r16,zero,76
 40006f4:	0400131c 	xori	r16,zero,76
 40006f8:	0400131c 	xori	r16,zero,76
 40006fc:	040009d8 	cmpnei	r16,zero,39
 4000700:	04000aa0 	cmpeqi	r16,zero,42
 4000704:	0400131c 	xori	r16,zero,76
 4000708:	04000aa0 	cmpeqi	r16,zero,42
 400070c:	0400131c 	xori	r16,zero,76
 4000710:	0400131c 	xori	r16,zero,76
 4000714:	0400131c 	xori	r16,zero,76
 4000718:	0400131c 	xori	r16,zero,76
 400071c:	04000b4c 	andi	r16,zero,45
 4000720:	0400131c 	xori	r16,zero,76
 4000724:	0400131c 	xori	r16,zero,76
 4000728:	04000b58 	cmpnei	r16,zero,45
 400072c:	0400131c 	xori	r16,zero,76
 4000730:	0400131c 	xori	r16,zero,76
 4000734:	0400131c 	xori	r16,zero,76
 4000738:	0400131c 	xori	r16,zero,76
 400073c:	0400131c 	xori	r16,zero,76
 4000740:	04000fdc 	xori	r16,zero,63
 4000744:	0400131c 	xori	r16,zero,76
 4000748:	0400131c 	xori	r16,zero,76
 400074c:	04001048 	cmpgei	r16,zero,65
 4000750:	0400131c 	xori	r16,zero,76
 4000754:	0400131c 	xori	r16,zero,76
 4000758:	0400131c 	xori	r16,zero,76
 400075c:	0400131c 	xori	r16,zero,76
 4000760:	0400131c 	xori	r16,zero,76
 4000764:	0400131c 	xori	r16,zero,76
 4000768:	0400131c 	xori	r16,zero,76
 400076c:	0400131c 	xori	r16,zero,76
 4000770:	0400131c 	xori	r16,zero,76
 4000774:	0400131c 	xori	r16,zero,76
 4000778:	040012c0 	call	40012c <__alt_mem_sdram-0x3bffed4>
 400077c:	04001240 	call	400124 <__alt_mem_sdram-0x3bffedc>
 4000780:	04000aa0 	cmpeqi	r16,zero,42
 4000784:	04000aa0 	cmpeqi	r16,zero,42
 4000788:	04000aa0 	cmpeqi	r16,zero,42
 400078c:	04001260 	cmpeqi	r16,zero,73
 4000790:	04001240 	call	400124 <__alt_mem_sdram-0x3bffedc>
 4000794:	0400131c 	xori	r16,zero,76
 4000798:	0400131c 	xori	r16,zero,76
 400079c:	0400126c 	andhi	r16,zero,73
 40007a0:	0400131c 	xori	r16,zero,76
 40007a4:	04001280 	call	400128 <__alt_mem_sdram-0x3bffed8>
 40007a8:	04001104 	movi	r16,68
 40007ac:	040007ec 	andhi	r16,zero,31
 40007b0:	0400113c 	xorhi	r16,zero,68
 40007b4:	0400131c 	xori	r16,zero,76
 40007b8:	04001148 	cmpgei	r16,zero,69
 40007bc:	0400131c 	xori	r16,zero,76
 40007c0:	040011ac 	andhi	r16,zero,70
 40007c4:	0400131c 	xori	r16,zero,76
 40007c8:	0400131c 	xori	r16,zero,76
 40007cc:	040011cc 	andi	r16,zero,71
 40007d0:	d8c03117 	ldw	r3,196(sp)
 40007d4:	d8802e15 	stw	r2,184(sp)
 40007d8:	00c7c83a 	sub	r3,zero,r3
 40007dc:	d8c03115 	stw	r3,196(sp)
 40007e0:	84000114 	ori	r16,r16,4
 40007e4:	ac400007 	ldb	r17,0(r21)
 40007e8:	003f9706 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 40007ec:	00800c04 	movi	r2,48
 40007f0:	d8802705 	stb	r2,156(sp)
 40007f4:	00801e04 	movi	r2,120
 40007f8:	d8802745 	stb	r2,157(sp)
 40007fc:	d9002a17 	ldw	r4,168(sp)
 4000800:	d8802e17 	ldw	r2,184(sp)
 4000804:	d8002785 	stb	zero,158(sp)
 4000808:	e011883a 	mov	r8,fp
 400080c:	10c00104 	addi	r3,r2,4
 4000810:	14c00017 	ldw	r19,0(r2)
 4000814:	002d883a 	mov	r22,zero
 4000818:	80800094 	ori	r2,r16,2
 400081c:	2002ca16 	blt	r4,zero,4001348 <___vfprintf_internal_r+0xe88>
 4000820:	00bfdfc4 	movi	r2,-129
 4000824:	80a4703a 	and	r18,r16,r2
 4000828:	d8c02e15 	stw	r3,184(sp)
 400082c:	94800094 	ori	r18,r18,2
 4000830:	9802b41e 	bne	r19,zero,4001304 <___vfprintf_internal_r+0xe44>
 4000834:	01410074 	movhi	r5,1025
 4000838:	297e5904 	addi	r5,r5,-1692
 400083c:	d9403915 	stw	r5,228(sp)
 4000840:	04401e04 	movi	r17,120
 4000844:	d8802a17 	ldw	r2,168(sp)
 4000848:	0039883a 	mov	fp,zero
 400084c:	1001fa26 	beq	r2,zero,4001038 <___vfprintf_internal_r+0xb78>
 4000850:	0027883a 	mov	r19,zero
 4000854:	002d883a 	mov	r22,zero
 4000858:	00021906 	br	40010c0 <___vfprintf_internal_r+0xc00>
 400085c:	d9002d17 	ldw	r4,180(sp)
 4000860:	b80b883a 	mov	r5,r23
 4000864:	40028740 	call	4002874 <__swsetup_r>
 4000868:	1005dc1e 	bne	r2,zero,4001fdc <___vfprintf_internal_r+0x1b1c>
 400086c:	b880030b 	ldhu	r2,12(r23)
 4000870:	00c00284 	movi	r3,10
 4000874:	1080068c 	andi	r2,r2,26
 4000878:	10ff3a1e 	bne	r2,r3,4000564 <__alt_mem_onchip_memory+0xfbff8564>
 400087c:	b880038f 	ldh	r2,14(r23)
 4000880:	103f3816 	blt	r2,zero,4000564 <__alt_mem_onchip_memory+0xfbff8564>
 4000884:	d9c02e17 	ldw	r7,184(sp)
 4000888:	d9002d17 	ldw	r4,180(sp)
 400088c:	a80d883a 	mov	r6,r21
 4000890:	b80b883a 	mov	r5,r23
 4000894:	40027b80 	call	40027b8 <__sbprintf>
 4000898:	00001106 	br	40008e0 <___vfprintf_internal_r+0x420>
 400089c:	d9002d17 	ldw	r4,180(sp)
 40008a0:	d9801e04 	addi	r6,sp,120
 40008a4:	b80b883a 	mov	r5,r23
 40008a8:	4007ca00 	call	4007ca0 <__sprint_r>
 40008ac:	1000081e 	bne	r2,zero,40008d0 <___vfprintf_internal_r+0x410>
 40008b0:	da000404 	addi	r8,sp,16
 40008b4:	003f5106 	br	40005fc <__alt_mem_onchip_memory+0xfbff85fc>
 40008b8:	d8802017 	ldw	r2,128(sp)
 40008bc:	10000426 	beq	r2,zero,40008d0 <___vfprintf_internal_r+0x410>
 40008c0:	d9002d17 	ldw	r4,180(sp)
 40008c4:	d9801e04 	addi	r6,sp,120
 40008c8:	b80b883a 	mov	r5,r23
 40008cc:	4007ca00 	call	4007ca0 <__sprint_r>
 40008d0:	b880030b 	ldhu	r2,12(r23)
 40008d4:	1080100c 	andi	r2,r2,64
 40008d8:	1005c01e 	bne	r2,zero,4001fdc <___vfprintf_internal_r+0x1b1c>
 40008dc:	d8802f17 	ldw	r2,188(sp)
 40008e0:	dfc04717 	ldw	ra,284(sp)
 40008e4:	df004617 	ldw	fp,280(sp)
 40008e8:	ddc04517 	ldw	r23,276(sp)
 40008ec:	dd804417 	ldw	r22,272(sp)
 40008f0:	dd404317 	ldw	r21,268(sp)
 40008f4:	dd004217 	ldw	r20,264(sp)
 40008f8:	dcc04117 	ldw	r19,260(sp)
 40008fc:	dc804017 	ldw	r18,256(sp)
 4000900:	dc403f17 	ldw	r17,252(sp)
 4000904:	dc003e17 	ldw	r16,248(sp)
 4000908:	dec04804 	addi	sp,sp,288
 400090c:	f800283a 	ret
 4000910:	d9002d17 	ldw	r4,180(sp)
 4000914:	40048800 	call	4004880 <__sinit>
 4000918:	003f0206 	br	4000524 <__alt_mem_onchip_memory+0xfbff8524>
 400091c:	d9002e17 	ldw	r4,184(sp)
 4000920:	d9402e17 	ldw	r5,184(sp)
 4000924:	21000017 	ldw	r4,0(r4)
 4000928:	28800104 	addi	r2,r5,4
 400092c:	d9003115 	stw	r4,196(sp)
 4000930:	203fa716 	blt	r4,zero,40007d0 <__alt_mem_onchip_memory+0xfbff87d0>
 4000934:	d8802e15 	stw	r2,184(sp)
 4000938:	ac400007 	ldb	r17,0(r21)
 400093c:	003f4206 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4000940:	ac400007 	ldb	r17,0(r21)
 4000944:	01000a84 	movi	r4,42
 4000948:	a8c00044 	addi	r3,r21,1
 400094c:	89075826 	beq	r17,r4,40026b0 <___vfprintf_internal_r+0x21f0>
 4000950:	8cbff404 	addi	r18,r17,-48
 4000954:	b486ae36 	bltu	r22,r18,4002410 <___vfprintf_internal_r+0x1f50>
 4000958:	0009883a 	mov	r4,zero
 400095c:	1823883a 	mov	r17,r3
 4000960:	01400284 	movi	r5,10
 4000964:	400a95c0 	call	400a95c <__mulsi3>
 4000968:	88c00007 	ldb	r3,0(r17)
 400096c:	1489883a 	add	r4,r2,r18
 4000970:	8d400044 	addi	r21,r17,1
 4000974:	1cbff404 	addi	r18,r3,-48
 4000978:	a823883a 	mov	r17,r21
 400097c:	b4bff82e 	bgeu	r22,r18,4000960 <__alt_mem_onchip_memory+0xfbff8960>
 4000980:	1823883a 	mov	r17,r3
 4000984:	2005f616 	blt	r4,zero,4002160 <___vfprintf_internal_r+0x1ca0>
 4000988:	d9002a15 	stw	r4,168(sp)
 400098c:	003f2f06 	br	400064c <__alt_mem_onchip_memory+0xfbff864c>
 4000990:	84002014 	ori	r16,r16,128
 4000994:	ac400007 	ldb	r17,0(r21)
 4000998:	003f2b06 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 400099c:	8cbff404 	addi	r18,r17,-48
 40009a0:	d8003115 	stw	zero,196(sp)
 40009a4:	0009883a 	mov	r4,zero
 40009a8:	a823883a 	mov	r17,r21
 40009ac:	01400284 	movi	r5,10
 40009b0:	400a95c0 	call	400a95c <__mulsi3>
 40009b4:	88c00007 	ldb	r3,0(r17)
 40009b8:	9089883a 	add	r4,r18,r2
 40009bc:	ad400044 	addi	r21,r21,1
 40009c0:	1cbff404 	addi	r18,r3,-48
 40009c4:	a823883a 	mov	r17,r21
 40009c8:	b4bff82e 	bgeu	r22,r18,40009ac <__alt_mem_onchip_memory+0xfbff89ac>
 40009cc:	1823883a 	mov	r17,r3
 40009d0:	d9003115 	stw	r4,196(sp)
 40009d4:	003f1d06 	br	400064c <__alt_mem_onchip_memory+0xfbff864c>
 40009d8:	8025883a 	mov	r18,r16
 40009dc:	dc002903 	ldbu	r16,164(sp)
 40009e0:	e011883a 	mov	r8,fp
 40009e4:	84003fcc 	andi	r16,r16,255
 40009e8:	8007531e 	bne	r16,zero,4002738 <___vfprintf_internal_r+0x2278>
 40009ec:	94800414 	ori	r18,r18,16
 40009f0:	9080080c 	andi	r2,r18,32
 40009f4:	1003a326 	beq	r2,zero,4001884 <___vfprintf_internal_r+0x13c4>
 40009f8:	d9002e17 	ldw	r4,184(sp)
 40009fc:	20800117 	ldw	r2,4(r4)
 4000a00:	24c00017 	ldw	r19,0(r4)
 4000a04:	21000204 	addi	r4,r4,8
 4000a08:	d9002e15 	stw	r4,184(sp)
 4000a0c:	102d883a 	mov	r22,r2
 4000a10:	10047316 	blt	r2,zero,4001be0 <___vfprintf_internal_r+0x1720>
 4000a14:	d9002a17 	ldw	r4,168(sp)
 4000a18:	df002783 	ldbu	fp,158(sp)
 4000a1c:	2003e416 	blt	r4,zero,40019b0 <___vfprintf_internal_r+0x14f0>
 4000a20:	00ffdfc4 	movi	r3,-129
 4000a24:	9d84b03a 	or	r2,r19,r22
 4000a28:	90e4703a 	and	r18,r18,r3
 4000a2c:	10018026 	beq	r2,zero,4001030 <___vfprintf_internal_r+0xb70>
 4000a30:	b003ab26 	beq	r22,zero,40018e0 <___vfprintf_internal_r+0x1420>
 4000a34:	dc402915 	stw	r17,164(sp)
 4000a38:	dc001e04 	addi	r16,sp,120
 4000a3c:	b023883a 	mov	r17,r22
 4000a40:	402d883a 	mov	r22,r8
 4000a44:	9809883a 	mov	r4,r19
 4000a48:	880b883a 	mov	r5,r17
 4000a4c:	01800284 	movi	r6,10
 4000a50:	000f883a 	mov	r7,zero
 4000a54:	400a1e40 	call	400a1e4 <__umoddi3>
 4000a58:	10800c04 	addi	r2,r2,48
 4000a5c:	843fffc4 	addi	r16,r16,-1
 4000a60:	9809883a 	mov	r4,r19
 4000a64:	880b883a 	mov	r5,r17
 4000a68:	80800005 	stb	r2,0(r16)
 4000a6c:	01800284 	movi	r6,10
 4000a70:	000f883a 	mov	r7,zero
 4000a74:	4009be80 	call	4009be8 <__udivdi3>
 4000a78:	1027883a 	mov	r19,r2
 4000a7c:	10c4b03a 	or	r2,r2,r3
 4000a80:	1823883a 	mov	r17,r3
 4000a84:	103fef1e 	bne	r2,zero,4000a44 <__alt_mem_onchip_memory+0xfbff8a44>
 4000a88:	d8c02817 	ldw	r3,160(sp)
 4000a8c:	dc402917 	ldw	r17,164(sp)
 4000a90:	b011883a 	mov	r8,r22
 4000a94:	1c07c83a 	sub	r3,r3,r16
 4000a98:	d8c02b15 	stw	r3,172(sp)
 4000a9c:	00005f06 	br	4000c1c <___vfprintf_internal_r+0x75c>
 4000aa0:	8025883a 	mov	r18,r16
 4000aa4:	dc002903 	ldbu	r16,164(sp)
 4000aa8:	e011883a 	mov	r8,fp
 4000aac:	84003fcc 	andi	r16,r16,255
 4000ab0:	80071e1e 	bne	r16,zero,400272c <___vfprintf_internal_r+0x226c>
 4000ab4:	9080020c 	andi	r2,r18,8
 4000ab8:	1004af26 	beq	r2,zero,4001d78 <___vfprintf_internal_r+0x18b8>
 4000abc:	d9002e17 	ldw	r4,184(sp)
 4000ac0:	d9402e17 	ldw	r5,184(sp)
 4000ac4:	d8802e17 	ldw	r2,184(sp)
 4000ac8:	21000017 	ldw	r4,0(r4)
 4000acc:	29400117 	ldw	r5,4(r5)
 4000ad0:	10800204 	addi	r2,r2,8
 4000ad4:	d9003615 	stw	r4,216(sp)
 4000ad8:	d9403815 	stw	r5,224(sp)
 4000adc:	d8802e15 	stw	r2,184(sp)
 4000ae0:	d9003617 	ldw	r4,216(sp)
 4000ae4:	d9403817 	ldw	r5,224(sp)
 4000ae8:	da003d15 	stw	r8,244(sp)
 4000aec:	04000044 	movi	r16,1
 4000af0:	40078c40 	call	40078c4 <__fpclassifyd>
 4000af4:	da003d17 	ldw	r8,244(sp)
 4000af8:	1404441e 	bne	r2,r16,4001c0c <___vfprintf_internal_r+0x174c>
 4000afc:	d9003617 	ldw	r4,216(sp)
 4000b00:	d9403817 	ldw	r5,224(sp)
 4000b04:	000d883a 	mov	r6,zero
 4000b08:	000f883a 	mov	r7,zero
 4000b0c:	400bd640 	call	400bd64 <__ledf2>
 4000b10:	da003d17 	ldw	r8,244(sp)
 4000b14:	1005e316 	blt	r2,zero,40022a4 <___vfprintf_internal_r+0x1de4>
 4000b18:	df002783 	ldbu	fp,158(sp)
 4000b1c:	008011c4 	movi	r2,71
 4000b20:	1445580e 	bge	r2,r17,4002084 <___vfprintf_internal_r+0x1bc4>
 4000b24:	04010074 	movhi	r16,1025
 4000b28:	843e5104 	addi	r16,r16,-1724
 4000b2c:	00c000c4 	movi	r3,3
 4000b30:	00bfdfc4 	movi	r2,-129
 4000b34:	d8c02915 	stw	r3,164(sp)
 4000b38:	90a4703a 	and	r18,r18,r2
 4000b3c:	d8c02b15 	stw	r3,172(sp)
 4000b40:	d8002a15 	stw	zero,168(sp)
 4000b44:	d8003215 	stw	zero,200(sp)
 4000b48:	00003a06 	br	4000c34 <___vfprintf_internal_r+0x774>
 4000b4c:	84000214 	ori	r16,r16,8
 4000b50:	ac400007 	ldb	r17,0(r21)
 4000b54:	003ebc06 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4000b58:	8025883a 	mov	r18,r16
 4000b5c:	dc002903 	ldbu	r16,164(sp)
 4000b60:	e011883a 	mov	r8,fp
 4000b64:	84003fcc 	andi	r16,r16,255
 4000b68:	8007001e 	bne	r16,zero,400276c <___vfprintf_internal_r+0x22ac>
 4000b6c:	94800414 	ori	r18,r18,16
 4000b70:	9080080c 	andi	r2,r18,32
 4000b74:	1002fa26 	beq	r2,zero,4001760 <___vfprintf_internal_r+0x12a0>
 4000b78:	d9002e17 	ldw	r4,184(sp)
 4000b7c:	d9402a17 	ldw	r5,168(sp)
 4000b80:	d8002785 	stb	zero,158(sp)
 4000b84:	20800204 	addi	r2,r4,8
 4000b88:	24c00017 	ldw	r19,0(r4)
 4000b8c:	25800117 	ldw	r22,4(r4)
 4000b90:	2804b116 	blt	r5,zero,4001e58 <___vfprintf_internal_r+0x1998>
 4000b94:	013fdfc4 	movi	r4,-129
 4000b98:	9d86b03a 	or	r3,r19,r22
 4000b9c:	d8802e15 	stw	r2,184(sp)
 4000ba0:	9124703a 	and	r18,r18,r4
 4000ba4:	1802fb1e 	bne	r3,zero,4001794 <___vfprintf_internal_r+0x12d4>
 4000ba8:	d8c02a17 	ldw	r3,168(sp)
 4000bac:	0039883a 	mov	fp,zero
 4000bb0:	1805e526 	beq	r3,zero,4002348 <___vfprintf_internal_r+0x1e88>
 4000bb4:	0027883a 	mov	r19,zero
 4000bb8:	002d883a 	mov	r22,zero
 4000bbc:	dc001e04 	addi	r16,sp,120
 4000bc0:	9806d0fa 	srli	r3,r19,3
 4000bc4:	b008977a 	slli	r4,r22,29
 4000bc8:	b02cd0fa 	srli	r22,r22,3
 4000bcc:	9cc001cc 	andi	r19,r19,7
 4000bd0:	98800c04 	addi	r2,r19,48
 4000bd4:	843fffc4 	addi	r16,r16,-1
 4000bd8:	20e6b03a 	or	r19,r4,r3
 4000bdc:	80800005 	stb	r2,0(r16)
 4000be0:	9d86b03a 	or	r3,r19,r22
 4000be4:	183ff61e 	bne	r3,zero,4000bc0 <__alt_mem_onchip_memory+0xfbff8bc0>
 4000be8:	90c0004c 	andi	r3,r18,1
 4000bec:	18014126 	beq	r3,zero,40010f4 <___vfprintf_internal_r+0xc34>
 4000bf0:	10803fcc 	andi	r2,r2,255
 4000bf4:	1080201c 	xori	r2,r2,128
 4000bf8:	10bfe004 	addi	r2,r2,-128
 4000bfc:	00c00c04 	movi	r3,48
 4000c00:	10c13c26 	beq	r2,r3,40010f4 <___vfprintf_internal_r+0xc34>
 4000c04:	80ffffc5 	stb	r3,-1(r16)
 4000c08:	d8c02817 	ldw	r3,160(sp)
 4000c0c:	80bfffc4 	addi	r2,r16,-1
 4000c10:	1021883a 	mov	r16,r2
 4000c14:	1887c83a 	sub	r3,r3,r2
 4000c18:	d8c02b15 	stw	r3,172(sp)
 4000c1c:	d8802b17 	ldw	r2,172(sp)
 4000c20:	d9002a17 	ldw	r4,168(sp)
 4000c24:	1100010e 	bge	r2,r4,4000c2c <___vfprintf_internal_r+0x76c>
 4000c28:	2005883a 	mov	r2,r4
 4000c2c:	d8802915 	stw	r2,164(sp)
 4000c30:	d8003215 	stw	zero,200(sp)
 4000c34:	e7003fcc 	andi	fp,fp,255
 4000c38:	e700201c 	xori	fp,fp,128
 4000c3c:	e73fe004 	addi	fp,fp,-128
 4000c40:	e0000326 	beq	fp,zero,4000c50 <___vfprintf_internal_r+0x790>
 4000c44:	d8c02917 	ldw	r3,164(sp)
 4000c48:	18c00044 	addi	r3,r3,1
 4000c4c:	d8c02915 	stw	r3,164(sp)
 4000c50:	90c0008c 	andi	r3,r18,2
 4000c54:	d8c02c15 	stw	r3,176(sp)
 4000c58:	18000326 	beq	r3,zero,4000c68 <___vfprintf_internal_r+0x7a8>
 4000c5c:	d8c02917 	ldw	r3,164(sp)
 4000c60:	18c00084 	addi	r3,r3,2
 4000c64:	d8c02915 	stw	r3,164(sp)
 4000c68:	90c0210c 	andi	r3,r18,132
 4000c6c:	d8c03015 	stw	r3,192(sp)
 4000c70:	1801c51e 	bne	r3,zero,4001388 <___vfprintf_internal_r+0xec8>
 4000c74:	d9003117 	ldw	r4,196(sp)
 4000c78:	d8c02917 	ldw	r3,164(sp)
 4000c7c:	20e7c83a 	sub	r19,r4,r3
 4000c80:	04c1c10e 	bge	zero,r19,4001388 <___vfprintf_internal_r+0xec8>
 4000c84:	02400404 	movi	r9,16
 4000c88:	d8c02017 	ldw	r3,128(sp)
 4000c8c:	d8801f17 	ldw	r2,124(sp)
 4000c90:	4cc52f0e 	bge	r9,r19,4002150 <___vfprintf_internal_r+0x1c90>
 4000c94:	01410074 	movhi	r5,1025
 4000c98:	297e6484 	addi	r5,r5,-1646
 4000c9c:	dc403b15 	stw	r17,236(sp)
 4000ca0:	d9403515 	stw	r5,212(sp)
 4000ca4:	9823883a 	mov	r17,r19
 4000ca8:	482d883a 	mov	r22,r9
 4000cac:	9027883a 	mov	r19,r18
 4000cb0:	070001c4 	movi	fp,7
 4000cb4:	8025883a 	mov	r18,r16
 4000cb8:	dc002d17 	ldw	r16,180(sp)
 4000cbc:	00000306 	br	4000ccc <___vfprintf_internal_r+0x80c>
 4000cc0:	8c7ffc04 	addi	r17,r17,-16
 4000cc4:	42000204 	addi	r8,r8,8
 4000cc8:	b440130e 	bge	r22,r17,4000d18 <___vfprintf_internal_r+0x858>
 4000ccc:	01010074 	movhi	r4,1025
 4000cd0:	18c00404 	addi	r3,r3,16
 4000cd4:	10800044 	addi	r2,r2,1
 4000cd8:	213e6484 	addi	r4,r4,-1646
 4000cdc:	41000015 	stw	r4,0(r8)
 4000ce0:	45800115 	stw	r22,4(r8)
 4000ce4:	d8c02015 	stw	r3,128(sp)
 4000ce8:	d8801f15 	stw	r2,124(sp)
 4000cec:	e0bff40e 	bge	fp,r2,4000cc0 <__alt_mem_onchip_memory+0xfbff8cc0>
 4000cf0:	d9801e04 	addi	r6,sp,120
 4000cf4:	b80b883a 	mov	r5,r23
 4000cf8:	8009883a 	mov	r4,r16
 4000cfc:	4007ca00 	call	4007ca0 <__sprint_r>
 4000d00:	103ef31e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4000d04:	8c7ffc04 	addi	r17,r17,-16
 4000d08:	d8c02017 	ldw	r3,128(sp)
 4000d0c:	d8801f17 	ldw	r2,124(sp)
 4000d10:	da000404 	addi	r8,sp,16
 4000d14:	b47fed16 	blt	r22,r17,4000ccc <__alt_mem_onchip_memory+0xfbff8ccc>
 4000d18:	9021883a 	mov	r16,r18
 4000d1c:	9825883a 	mov	r18,r19
 4000d20:	8827883a 	mov	r19,r17
 4000d24:	dc403b17 	ldw	r17,236(sp)
 4000d28:	d9403517 	ldw	r5,212(sp)
 4000d2c:	98c7883a 	add	r3,r19,r3
 4000d30:	10800044 	addi	r2,r2,1
 4000d34:	41400015 	stw	r5,0(r8)
 4000d38:	44c00115 	stw	r19,4(r8)
 4000d3c:	d8c02015 	stw	r3,128(sp)
 4000d40:	d8801f15 	stw	r2,124(sp)
 4000d44:	010001c4 	movi	r4,7
 4000d48:	2082c516 	blt	r4,r2,4001860 <___vfprintf_internal_r+0x13a0>
 4000d4c:	df002787 	ldb	fp,158(sp)
 4000d50:	42000204 	addi	r8,r8,8
 4000d54:	e0000c26 	beq	fp,zero,4000d88 <___vfprintf_internal_r+0x8c8>
 4000d58:	d8801f17 	ldw	r2,124(sp)
 4000d5c:	d9002784 	addi	r4,sp,158
 4000d60:	18c00044 	addi	r3,r3,1
 4000d64:	10800044 	addi	r2,r2,1
 4000d68:	41000015 	stw	r4,0(r8)
 4000d6c:	01000044 	movi	r4,1
 4000d70:	41000115 	stw	r4,4(r8)
 4000d74:	d8c02015 	stw	r3,128(sp)
 4000d78:	d8801f15 	stw	r2,124(sp)
 4000d7c:	010001c4 	movi	r4,7
 4000d80:	20825e16 	blt	r4,r2,40016fc <___vfprintf_internal_r+0x123c>
 4000d84:	42000204 	addi	r8,r8,8
 4000d88:	d8802c17 	ldw	r2,176(sp)
 4000d8c:	10000c26 	beq	r2,zero,4000dc0 <___vfprintf_internal_r+0x900>
 4000d90:	d8801f17 	ldw	r2,124(sp)
 4000d94:	d9002704 	addi	r4,sp,156
 4000d98:	18c00084 	addi	r3,r3,2
 4000d9c:	10800044 	addi	r2,r2,1
 4000da0:	41000015 	stw	r4,0(r8)
 4000da4:	01000084 	movi	r4,2
 4000da8:	41000115 	stw	r4,4(r8)
 4000dac:	d8c02015 	stw	r3,128(sp)
 4000db0:	d8801f15 	stw	r2,124(sp)
 4000db4:	010001c4 	movi	r4,7
 4000db8:	20825816 	blt	r4,r2,400171c <___vfprintf_internal_r+0x125c>
 4000dbc:	42000204 	addi	r8,r8,8
 4000dc0:	d9003017 	ldw	r4,192(sp)
 4000dc4:	00802004 	movi	r2,128
 4000dc8:	2081bb26 	beq	r4,r2,40014b8 <___vfprintf_internal_r+0xff8>
 4000dcc:	d9402a17 	ldw	r5,168(sp)
 4000dd0:	d8802b17 	ldw	r2,172(sp)
 4000dd4:	28adc83a 	sub	r22,r5,r2
 4000dd8:	0580310e 	bge	zero,r22,4000ea0 <___vfprintf_internal_r+0x9e0>
 4000ddc:	07000404 	movi	fp,16
 4000de0:	d8801f17 	ldw	r2,124(sp)
 4000de4:	e584360e 	bge	fp,r22,4001ec0 <___vfprintf_internal_r+0x1a00>
 4000de8:	01410074 	movhi	r5,1025
 4000dec:	297e6084 	addi	r5,r5,-1662
 4000df0:	dc402a15 	stw	r17,168(sp)
 4000df4:	d9402c15 	stw	r5,176(sp)
 4000df8:	b023883a 	mov	r17,r22
 4000dfc:	04c001c4 	movi	r19,7
 4000e00:	a82d883a 	mov	r22,r21
 4000e04:	902b883a 	mov	r21,r18
 4000e08:	8025883a 	mov	r18,r16
 4000e0c:	dc002d17 	ldw	r16,180(sp)
 4000e10:	00000306 	br	4000e20 <___vfprintf_internal_r+0x960>
 4000e14:	8c7ffc04 	addi	r17,r17,-16
 4000e18:	42000204 	addi	r8,r8,8
 4000e1c:	e440110e 	bge	fp,r17,4000e64 <___vfprintf_internal_r+0x9a4>
 4000e20:	18c00404 	addi	r3,r3,16
 4000e24:	10800044 	addi	r2,r2,1
 4000e28:	45000015 	stw	r20,0(r8)
 4000e2c:	47000115 	stw	fp,4(r8)
 4000e30:	d8c02015 	stw	r3,128(sp)
 4000e34:	d8801f15 	stw	r2,124(sp)
 4000e38:	98bff60e 	bge	r19,r2,4000e14 <__alt_mem_onchip_memory+0xfbff8e14>
 4000e3c:	d9801e04 	addi	r6,sp,120
 4000e40:	b80b883a 	mov	r5,r23
 4000e44:	8009883a 	mov	r4,r16
 4000e48:	4007ca00 	call	4007ca0 <__sprint_r>
 4000e4c:	103ea01e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4000e50:	8c7ffc04 	addi	r17,r17,-16
 4000e54:	d8c02017 	ldw	r3,128(sp)
 4000e58:	d8801f17 	ldw	r2,124(sp)
 4000e5c:	da000404 	addi	r8,sp,16
 4000e60:	e47fef16 	blt	fp,r17,4000e20 <__alt_mem_onchip_memory+0xfbff8e20>
 4000e64:	9021883a 	mov	r16,r18
 4000e68:	a825883a 	mov	r18,r21
 4000e6c:	b02b883a 	mov	r21,r22
 4000e70:	882d883a 	mov	r22,r17
 4000e74:	dc402a17 	ldw	r17,168(sp)
 4000e78:	d9002c17 	ldw	r4,176(sp)
 4000e7c:	1d87883a 	add	r3,r3,r22
 4000e80:	10800044 	addi	r2,r2,1
 4000e84:	41000015 	stw	r4,0(r8)
 4000e88:	45800115 	stw	r22,4(r8)
 4000e8c:	d8c02015 	stw	r3,128(sp)
 4000e90:	d8801f15 	stw	r2,124(sp)
 4000e94:	010001c4 	movi	r4,7
 4000e98:	20821016 	blt	r4,r2,40016dc <___vfprintf_internal_r+0x121c>
 4000e9c:	42000204 	addi	r8,r8,8
 4000ea0:	9080400c 	andi	r2,r18,256
 4000ea4:	10013a1e 	bne	r2,zero,4001390 <___vfprintf_internal_r+0xed0>
 4000ea8:	d9402b17 	ldw	r5,172(sp)
 4000eac:	d8801f17 	ldw	r2,124(sp)
 4000eb0:	44000015 	stw	r16,0(r8)
 4000eb4:	1947883a 	add	r3,r3,r5
 4000eb8:	10800044 	addi	r2,r2,1
 4000ebc:	41400115 	stw	r5,4(r8)
 4000ec0:	d8c02015 	stw	r3,128(sp)
 4000ec4:	d8801f15 	stw	r2,124(sp)
 4000ec8:	010001c4 	movi	r4,7
 4000ecc:	2081f516 	blt	r4,r2,40016a4 <___vfprintf_internal_r+0x11e4>
 4000ed0:	42000204 	addi	r8,r8,8
 4000ed4:	9480010c 	andi	r18,r18,4
 4000ed8:	90003226 	beq	r18,zero,4000fa4 <___vfprintf_internal_r+0xae4>
 4000edc:	d9403117 	ldw	r5,196(sp)
 4000ee0:	d8802917 	ldw	r2,164(sp)
 4000ee4:	28a1c83a 	sub	r16,r5,r2
 4000ee8:	04002e0e 	bge	zero,r16,4000fa4 <___vfprintf_internal_r+0xae4>
 4000eec:	04400404 	movi	r17,16
 4000ef0:	d8801f17 	ldw	r2,124(sp)
 4000ef4:	8c04c40e 	bge	r17,r16,4002208 <___vfprintf_internal_r+0x1d48>
 4000ef8:	01410074 	movhi	r5,1025
 4000efc:	297e6484 	addi	r5,r5,-1646
 4000f00:	d9403515 	stw	r5,212(sp)
 4000f04:	048001c4 	movi	r18,7
 4000f08:	dcc02d17 	ldw	r19,180(sp)
 4000f0c:	00000306 	br	4000f1c <___vfprintf_internal_r+0xa5c>
 4000f10:	843ffc04 	addi	r16,r16,-16
 4000f14:	42000204 	addi	r8,r8,8
 4000f18:	8c00130e 	bge	r17,r16,4000f68 <___vfprintf_internal_r+0xaa8>
 4000f1c:	01010074 	movhi	r4,1025
 4000f20:	18c00404 	addi	r3,r3,16
 4000f24:	10800044 	addi	r2,r2,1
 4000f28:	213e6484 	addi	r4,r4,-1646
 4000f2c:	41000015 	stw	r4,0(r8)
 4000f30:	44400115 	stw	r17,4(r8)
 4000f34:	d8c02015 	stw	r3,128(sp)
 4000f38:	d8801f15 	stw	r2,124(sp)
 4000f3c:	90bff40e 	bge	r18,r2,4000f10 <__alt_mem_onchip_memory+0xfbff8f10>
 4000f40:	d9801e04 	addi	r6,sp,120
 4000f44:	b80b883a 	mov	r5,r23
 4000f48:	9809883a 	mov	r4,r19
 4000f4c:	4007ca00 	call	4007ca0 <__sprint_r>
 4000f50:	103e5f1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4000f54:	843ffc04 	addi	r16,r16,-16
 4000f58:	d8c02017 	ldw	r3,128(sp)
 4000f5c:	d8801f17 	ldw	r2,124(sp)
 4000f60:	da000404 	addi	r8,sp,16
 4000f64:	8c3fed16 	blt	r17,r16,4000f1c <__alt_mem_onchip_memory+0xfbff8f1c>
 4000f68:	d9403517 	ldw	r5,212(sp)
 4000f6c:	1c07883a 	add	r3,r3,r16
 4000f70:	10800044 	addi	r2,r2,1
 4000f74:	41400015 	stw	r5,0(r8)
 4000f78:	44000115 	stw	r16,4(r8)
 4000f7c:	d8c02015 	stw	r3,128(sp)
 4000f80:	d8801f15 	stw	r2,124(sp)
 4000f84:	010001c4 	movi	r4,7
 4000f88:	2080060e 	bge	r4,r2,4000fa4 <___vfprintf_internal_r+0xae4>
 4000f8c:	d9002d17 	ldw	r4,180(sp)
 4000f90:	d9801e04 	addi	r6,sp,120
 4000f94:	b80b883a 	mov	r5,r23
 4000f98:	4007ca00 	call	4007ca0 <__sprint_r>
 4000f9c:	103e4c1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4000fa0:	d8c02017 	ldw	r3,128(sp)
 4000fa4:	d8803117 	ldw	r2,196(sp)
 4000fa8:	d9002917 	ldw	r4,164(sp)
 4000fac:	1100010e 	bge	r2,r4,4000fb4 <___vfprintf_internal_r+0xaf4>
 4000fb0:	2005883a 	mov	r2,r4
 4000fb4:	d9402f17 	ldw	r5,188(sp)
 4000fb8:	288b883a 	add	r5,r5,r2
 4000fbc:	d9402f15 	stw	r5,188(sp)
 4000fc0:	1801c01e 	bne	r3,zero,40016c4 <___vfprintf_internal_r+0x1204>
 4000fc4:	a8800007 	ldb	r2,0(r21)
 4000fc8:	d8001f15 	stw	zero,124(sp)
 4000fcc:	da000404 	addi	r8,sp,16
 4000fd0:	103d751e 	bne	r2,zero,40005a8 <__alt_mem_onchip_memory+0xfbff85a8>
 4000fd4:	a823883a 	mov	r17,r21
 4000fd8:	003d8b06 	br	4000608 <__alt_mem_onchip_memory+0xfbff8608>
 4000fdc:	8025883a 	mov	r18,r16
 4000fe0:	dc002903 	ldbu	r16,164(sp)
 4000fe4:	e011883a 	mov	r8,fp
 4000fe8:	84003fcc 	andi	r16,r16,255
 4000fec:	8005e51e 	bne	r16,zero,4002784 <___vfprintf_internal_r+0x22c4>
 4000ff0:	94800414 	ori	r18,r18,16
 4000ff4:	9080080c 	andi	r2,r18,32
 4000ff8:	10022b26 	beq	r2,zero,40018a8 <___vfprintf_internal_r+0x13e8>
 4000ffc:	d9002e17 	ldw	r4,184(sp)
 4001000:	d9402a17 	ldw	r5,168(sp)
 4001004:	d8002785 	stb	zero,158(sp)
 4001008:	20c00204 	addi	r3,r4,8
 400100c:	24c00017 	ldw	r19,0(r4)
 4001010:	25800117 	ldw	r22,4(r4)
 4001014:	28042e16 	blt	r5,zero,40020d0 <___vfprintf_internal_r+0x1c10>
 4001018:	013fdfc4 	movi	r4,-129
 400101c:	9d84b03a 	or	r2,r19,r22
 4001020:	d8c02e15 	stw	r3,184(sp)
 4001024:	9124703a 	and	r18,r18,r4
 4001028:	0039883a 	mov	fp,zero
 400102c:	103e801e 	bne	r2,zero,4000a30 <__alt_mem_onchip_memory+0xfbff8a30>
 4001030:	d9002a17 	ldw	r4,168(sp)
 4001034:	2002e01e 	bne	r4,zero,4001bb8 <___vfprintf_internal_r+0x16f8>
 4001038:	d8002a15 	stw	zero,168(sp)
 400103c:	d8002b15 	stw	zero,172(sp)
 4001040:	dc001e04 	addi	r16,sp,120
 4001044:	003ef506 	br	4000c1c <__alt_mem_onchip_memory+0xfbff8c1c>
 4001048:	8025883a 	mov	r18,r16
 400104c:	dc002903 	ldbu	r16,164(sp)
 4001050:	e011883a 	mov	r8,fp
 4001054:	84003fcc 	andi	r16,r16,255
 4001058:	8005ba1e 	bne	r16,zero,4002744 <___vfprintf_internal_r+0x2284>
 400105c:	01010074 	movhi	r4,1025
 4001060:	213e5404 	addi	r4,r4,-1712
 4001064:	d9003915 	stw	r4,228(sp)
 4001068:	9080080c 	andi	r2,r18,32
 400106c:	10006126 	beq	r2,zero,40011f4 <___vfprintf_internal_r+0xd34>
 4001070:	d9402e17 	ldw	r5,184(sp)
 4001074:	2cc00017 	ldw	r19,0(r5)
 4001078:	2d800117 	ldw	r22,4(r5)
 400107c:	29400204 	addi	r5,r5,8
 4001080:	d9402e15 	stw	r5,184(sp)
 4001084:	9080004c 	andi	r2,r18,1
 4001088:	1001ac26 	beq	r2,zero,400173c <___vfprintf_internal_r+0x127c>
 400108c:	9d84b03a 	or	r2,r19,r22
 4001090:	10038526 	beq	r2,zero,4001ea8 <___vfprintf_internal_r+0x19e8>
 4001094:	d8c02a17 	ldw	r3,168(sp)
 4001098:	00800c04 	movi	r2,48
 400109c:	d8802705 	stb	r2,156(sp)
 40010a0:	dc402745 	stb	r17,157(sp)
 40010a4:	d8002785 	stb	zero,158(sp)
 40010a8:	90800094 	ori	r2,r18,2
 40010ac:	18047916 	blt	r3,zero,4002294 <___vfprintf_internal_r+0x1dd4>
 40010b0:	00bfdfc4 	movi	r2,-129
 40010b4:	90a4703a 	and	r18,r18,r2
 40010b8:	94800094 	ori	r18,r18,2
 40010bc:	0039883a 	mov	fp,zero
 40010c0:	d9003917 	ldw	r4,228(sp)
 40010c4:	dc001e04 	addi	r16,sp,120
 40010c8:	988003cc 	andi	r2,r19,15
 40010cc:	b006973a 	slli	r3,r22,28
 40010d0:	2085883a 	add	r2,r4,r2
 40010d4:	9826d13a 	srli	r19,r19,4
 40010d8:	10800003 	ldbu	r2,0(r2)
 40010dc:	b02cd13a 	srli	r22,r22,4
 40010e0:	843fffc4 	addi	r16,r16,-1
 40010e4:	1ce6b03a 	or	r19,r3,r19
 40010e8:	80800005 	stb	r2,0(r16)
 40010ec:	9d84b03a 	or	r2,r19,r22
 40010f0:	103ff51e 	bne	r2,zero,40010c8 <__alt_mem_onchip_memory+0xfbff90c8>
 40010f4:	d8c02817 	ldw	r3,160(sp)
 40010f8:	1c07c83a 	sub	r3,r3,r16
 40010fc:	d8c02b15 	stw	r3,172(sp)
 4001100:	003ec606 	br	4000c1c <__alt_mem_onchip_memory+0xfbff8c1c>
 4001104:	8025883a 	mov	r18,r16
 4001108:	dc002903 	ldbu	r16,164(sp)
 400110c:	e011883a 	mov	r8,fp
 4001110:	84003fcc 	andi	r16,r16,255
 4001114:	803e9626 	beq	r16,zero,4000b70 <__alt_mem_onchip_memory+0xfbff8b70>
 4001118:	d8c02b03 	ldbu	r3,172(sp)
 400111c:	d8c02785 	stb	r3,158(sp)
 4001120:	003e9306 	br	4000b70 <__alt_mem_onchip_memory+0xfbff8b70>
 4001124:	00c00044 	movi	r3,1
 4001128:	d8c02905 	stb	r3,164(sp)
 400112c:	00c00ac4 	movi	r3,43
 4001130:	d8c02b05 	stb	r3,172(sp)
 4001134:	ac400007 	ldb	r17,0(r21)
 4001138:	003d4306 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 400113c:	84000814 	ori	r16,r16,32
 4001140:	ac400007 	ldb	r17,0(r21)
 4001144:	003d4006 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4001148:	d8802e17 	ldw	r2,184(sp)
 400114c:	8025883a 	mov	r18,r16
 4001150:	d8002785 	stb	zero,158(sp)
 4001154:	14000017 	ldw	r16,0(r2)
 4001158:	e011883a 	mov	r8,fp
 400115c:	14c00104 	addi	r19,r2,4
 4001160:	80042d26 	beq	r16,zero,4002218 <___vfprintf_internal_r+0x1d58>
 4001164:	d8c02a17 	ldw	r3,168(sp)
 4001168:	1803e416 	blt	r3,zero,40020fc <___vfprintf_internal_r+0x1c3c>
 400116c:	180d883a 	mov	r6,r3
 4001170:	000b883a 	mov	r5,zero
 4001174:	8009883a 	mov	r4,r16
 4001178:	df003d15 	stw	fp,244(sp)
 400117c:	4005df80 	call	4005df8 <memchr>
 4001180:	da003d17 	ldw	r8,244(sp)
 4001184:	10046826 	beq	r2,zero,4002328 <___vfprintf_internal_r+0x1e68>
 4001188:	1405c83a 	sub	r2,r2,r16
 400118c:	d8802b15 	stw	r2,172(sp)
 4001190:	1003e016 	blt	r2,zero,4002114 <___vfprintf_internal_r+0x1c54>
 4001194:	df002783 	ldbu	fp,158(sp)
 4001198:	d8802915 	stw	r2,164(sp)
 400119c:	dcc02e15 	stw	r19,184(sp)
 40011a0:	d8002a15 	stw	zero,168(sp)
 40011a4:	d8003215 	stw	zero,200(sp)
 40011a8:	003ea206 	br	4000c34 <__alt_mem_onchip_memory+0xfbff8c34>
 40011ac:	8025883a 	mov	r18,r16
 40011b0:	dc002903 	ldbu	r16,164(sp)
 40011b4:	e011883a 	mov	r8,fp
 40011b8:	84003fcc 	andi	r16,r16,255
 40011bc:	803f8d26 	beq	r16,zero,4000ff4 <__alt_mem_onchip_memory+0xfbff8ff4>
 40011c0:	d8c02b03 	ldbu	r3,172(sp)
 40011c4:	d8c02785 	stb	r3,158(sp)
 40011c8:	003f8a06 	br	4000ff4 <__alt_mem_onchip_memory+0xfbff8ff4>
 40011cc:	8025883a 	mov	r18,r16
 40011d0:	dc002903 	ldbu	r16,164(sp)
 40011d4:	e011883a 	mov	r8,fp
 40011d8:	84003fcc 	andi	r16,r16,255
 40011dc:	8005661e 	bne	r16,zero,4002778 <___vfprintf_internal_r+0x22b8>
 40011e0:	01010074 	movhi	r4,1025
 40011e4:	213e5904 	addi	r4,r4,-1692
 40011e8:	d9003915 	stw	r4,228(sp)
 40011ec:	9080080c 	andi	r2,r18,32
 40011f0:	103f9f1e 	bne	r2,zero,4001070 <__alt_mem_onchip_memory+0xfbff9070>
 40011f4:	9080040c 	andi	r2,r18,16
 40011f8:	1002eb26 	beq	r2,zero,4001da8 <___vfprintf_internal_r+0x18e8>
 40011fc:	d8802e17 	ldw	r2,184(sp)
 4001200:	002d883a 	mov	r22,zero
 4001204:	14c00017 	ldw	r19,0(r2)
 4001208:	10800104 	addi	r2,r2,4
 400120c:	d8802e15 	stw	r2,184(sp)
 4001210:	003f9c06 	br	4001084 <__alt_mem_onchip_memory+0xfbff9084>
 4001214:	d8802b07 	ldb	r2,172(sp)
 4001218:	1002e11e 	bne	r2,zero,4001da0 <___vfprintf_internal_r+0x18e0>
 400121c:	00c00044 	movi	r3,1
 4001220:	d8c02905 	stb	r3,164(sp)
 4001224:	00c00804 	movi	r3,32
 4001228:	d8c02b05 	stb	r3,172(sp)
 400122c:	ac400007 	ldb	r17,0(r21)
 4001230:	003d0506 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4001234:	84000054 	ori	r16,r16,1
 4001238:	ac400007 	ldb	r17,0(r21)
 400123c:	003d0206 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4001240:	8025883a 	mov	r18,r16
 4001244:	dc002903 	ldbu	r16,164(sp)
 4001248:	e011883a 	mov	r8,fp
 400124c:	84003fcc 	andi	r16,r16,255
 4001250:	803de726 	beq	r16,zero,40009f0 <__alt_mem_onchip_memory+0xfbff89f0>
 4001254:	d8c02b03 	ldbu	r3,172(sp)
 4001258:	d8c02785 	stb	r3,158(sp)
 400125c:	003de406 	br	40009f0 <__alt_mem_onchip_memory+0xfbff89f0>
 4001260:	84001014 	ori	r16,r16,64
 4001264:	ac400007 	ldb	r17,0(r21)
 4001268:	003cf706 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 400126c:	ac400007 	ldb	r17,0(r21)
 4001270:	00801b04 	movi	r2,108
 4001274:	88838f26 	beq	r17,r2,40020b4 <___vfprintf_internal_r+0x1bf4>
 4001278:	84000414 	ori	r16,r16,16
 400127c:	003cf206 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4001280:	8025883a 	mov	r18,r16
 4001284:	dc002903 	ldbu	r16,164(sp)
 4001288:	e011883a 	mov	r8,fp
 400128c:	84003fcc 	andi	r16,r16,255
 4001290:	80053f1e 	bne	r16,zero,4002790 <___vfprintf_internal_r+0x22d0>
 4001294:	9080080c 	andi	r2,r18,32
 4001298:	1002d226 	beq	r2,zero,4001de4 <___vfprintf_internal_r+0x1924>
 400129c:	d9002e17 	ldw	r4,184(sp)
 40012a0:	d9402f17 	ldw	r5,188(sp)
 40012a4:	20800017 	ldw	r2,0(r4)
 40012a8:	2807d7fa 	srai	r3,r5,31
 40012ac:	21000104 	addi	r4,r4,4
 40012b0:	d9002e15 	stw	r4,184(sp)
 40012b4:	11400015 	stw	r5,0(r2)
 40012b8:	10c00115 	stw	r3,4(r2)
 40012bc:	003cb806 	br	40005a0 <__alt_mem_onchip_memory+0xfbff85a0>
 40012c0:	d8c02e17 	ldw	r3,184(sp)
 40012c4:	d9002e17 	ldw	r4,184(sp)
 40012c8:	8025883a 	mov	r18,r16
 40012cc:	18800017 	ldw	r2,0(r3)
 40012d0:	21000104 	addi	r4,r4,4
 40012d4:	00c00044 	movi	r3,1
 40012d8:	e011883a 	mov	r8,fp
 40012dc:	d8c02915 	stw	r3,164(sp)
 40012e0:	d8002785 	stb	zero,158(sp)
 40012e4:	d8801405 	stb	r2,80(sp)
 40012e8:	d9002e15 	stw	r4,184(sp)
 40012ec:	d8c02b15 	stw	r3,172(sp)
 40012f0:	d8002a15 	stw	zero,168(sp)
 40012f4:	d8003215 	stw	zero,200(sp)
 40012f8:	dc001404 	addi	r16,sp,80
 40012fc:	0039883a 	mov	fp,zero
 4001300:	003e5306 	br	4000c50 <__alt_mem_onchip_memory+0xfbff8c50>
 4001304:	01010074 	movhi	r4,1025
 4001308:	213e5904 	addi	r4,r4,-1692
 400130c:	0039883a 	mov	fp,zero
 4001310:	d9003915 	stw	r4,228(sp)
 4001314:	04401e04 	movi	r17,120
 4001318:	003f6906 	br	40010c0 <__alt_mem_onchip_memory+0xfbff90c0>
 400131c:	8025883a 	mov	r18,r16
 4001320:	dc002903 	ldbu	r16,164(sp)
 4001324:	e011883a 	mov	r8,fp
 4001328:	84003fcc 	andi	r16,r16,255
 400132c:	8005081e 	bne	r16,zero,4002750 <___vfprintf_internal_r+0x2290>
 4001330:	883d6126 	beq	r17,zero,40008b8 <__alt_mem_onchip_memory+0xfbff88b8>
 4001334:	00c00044 	movi	r3,1
 4001338:	d8c02915 	stw	r3,164(sp)
 400133c:	dc401405 	stb	r17,80(sp)
 4001340:	d8002785 	stb	zero,158(sp)
 4001344:	003fe906 	br	40012ec <__alt_mem_onchip_memory+0xfbff92ec>
 4001348:	01410074 	movhi	r5,1025
 400134c:	297e5904 	addi	r5,r5,-1692
 4001350:	d9403915 	stw	r5,228(sp)
 4001354:	d8c02e15 	stw	r3,184(sp)
 4001358:	1025883a 	mov	r18,r2
 400135c:	04401e04 	movi	r17,120
 4001360:	9d84b03a 	or	r2,r19,r22
 4001364:	1000fc1e 	bne	r2,zero,4001758 <___vfprintf_internal_r+0x1298>
 4001368:	0039883a 	mov	fp,zero
 400136c:	00800084 	movi	r2,2
 4001370:	10803fcc 	andi	r2,r2,255
 4001374:	00c00044 	movi	r3,1
 4001378:	10c20f26 	beq	r2,r3,4001bb8 <___vfprintf_internal_r+0x16f8>
 400137c:	00c00084 	movi	r3,2
 4001380:	10fd3326 	beq	r2,r3,4000850 <__alt_mem_onchip_memory+0xfbff8850>
 4001384:	003e0b06 	br	4000bb4 <__alt_mem_onchip_memory+0xfbff8bb4>
 4001388:	d8c02017 	ldw	r3,128(sp)
 400138c:	003e7106 	br	4000d54 <__alt_mem_onchip_memory+0xfbff8d54>
 4001390:	00801944 	movi	r2,101
 4001394:	14407e0e 	bge	r2,r17,4001590 <___vfprintf_internal_r+0x10d0>
 4001398:	d9003617 	ldw	r4,216(sp)
 400139c:	d9403817 	ldw	r5,224(sp)
 40013a0:	000d883a 	mov	r6,zero
 40013a4:	000f883a 	mov	r7,zero
 40013a8:	d8c03c15 	stw	r3,240(sp)
 40013ac:	da003d15 	stw	r8,244(sp)
 40013b0:	400bc000 	call	400bc00 <__eqdf2>
 40013b4:	d8c03c17 	ldw	r3,240(sp)
 40013b8:	da003d17 	ldw	r8,244(sp)
 40013bc:	1000f71e 	bne	r2,zero,400179c <___vfprintf_internal_r+0x12dc>
 40013c0:	d8801f17 	ldw	r2,124(sp)
 40013c4:	01010074 	movhi	r4,1025
 40013c8:	213e6004 	addi	r4,r4,-1664
 40013cc:	18c00044 	addi	r3,r3,1
 40013d0:	10800044 	addi	r2,r2,1
 40013d4:	41000015 	stw	r4,0(r8)
 40013d8:	01000044 	movi	r4,1
 40013dc:	41000115 	stw	r4,4(r8)
 40013e0:	d8c02015 	stw	r3,128(sp)
 40013e4:	d8801f15 	stw	r2,124(sp)
 40013e8:	010001c4 	movi	r4,7
 40013ec:	2082b816 	blt	r4,r2,4001ed0 <___vfprintf_internal_r+0x1a10>
 40013f0:	42000204 	addi	r8,r8,8
 40013f4:	d8802617 	ldw	r2,152(sp)
 40013f8:	d9403317 	ldw	r5,204(sp)
 40013fc:	11400216 	blt	r2,r5,4001408 <___vfprintf_internal_r+0xf48>
 4001400:	9080004c 	andi	r2,r18,1
 4001404:	103eb326 	beq	r2,zero,4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 4001408:	d8803717 	ldw	r2,220(sp)
 400140c:	d9003417 	ldw	r4,208(sp)
 4001410:	d9403717 	ldw	r5,220(sp)
 4001414:	1887883a 	add	r3,r3,r2
 4001418:	d8801f17 	ldw	r2,124(sp)
 400141c:	41000015 	stw	r4,0(r8)
 4001420:	41400115 	stw	r5,4(r8)
 4001424:	10800044 	addi	r2,r2,1
 4001428:	d8c02015 	stw	r3,128(sp)
 400142c:	d8801f15 	stw	r2,124(sp)
 4001430:	010001c4 	movi	r4,7
 4001434:	20832916 	blt	r4,r2,40020dc <___vfprintf_internal_r+0x1c1c>
 4001438:	42000204 	addi	r8,r8,8
 400143c:	d8803317 	ldw	r2,204(sp)
 4001440:	143fffc4 	addi	r16,r2,-1
 4001444:	043ea30e 	bge	zero,r16,4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 4001448:	04400404 	movi	r17,16
 400144c:	d8801f17 	ldw	r2,124(sp)
 4001450:	8c00880e 	bge	r17,r16,4001674 <___vfprintf_internal_r+0x11b4>
 4001454:	01410074 	movhi	r5,1025
 4001458:	297e6084 	addi	r5,r5,-1662
 400145c:	d9402c15 	stw	r5,176(sp)
 4001460:	058001c4 	movi	r22,7
 4001464:	dcc02d17 	ldw	r19,180(sp)
 4001468:	00000306 	br	4001478 <___vfprintf_internal_r+0xfb8>
 400146c:	42000204 	addi	r8,r8,8
 4001470:	843ffc04 	addi	r16,r16,-16
 4001474:	8c00820e 	bge	r17,r16,4001680 <___vfprintf_internal_r+0x11c0>
 4001478:	18c00404 	addi	r3,r3,16
 400147c:	10800044 	addi	r2,r2,1
 4001480:	45000015 	stw	r20,0(r8)
 4001484:	44400115 	stw	r17,4(r8)
 4001488:	d8c02015 	stw	r3,128(sp)
 400148c:	d8801f15 	stw	r2,124(sp)
 4001490:	b0bff60e 	bge	r22,r2,400146c <__alt_mem_onchip_memory+0xfbff946c>
 4001494:	d9801e04 	addi	r6,sp,120
 4001498:	b80b883a 	mov	r5,r23
 400149c:	9809883a 	mov	r4,r19
 40014a0:	4007ca00 	call	4007ca0 <__sprint_r>
 40014a4:	103d0a1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40014a8:	d8c02017 	ldw	r3,128(sp)
 40014ac:	d8801f17 	ldw	r2,124(sp)
 40014b0:	da000404 	addi	r8,sp,16
 40014b4:	003fee06 	br	4001470 <__alt_mem_onchip_memory+0xfbff9470>
 40014b8:	d9403117 	ldw	r5,196(sp)
 40014bc:	d8802917 	ldw	r2,164(sp)
 40014c0:	28adc83a 	sub	r22,r5,r2
 40014c4:	05be410e 	bge	zero,r22,4000dcc <__alt_mem_onchip_memory+0xfbff8dcc>
 40014c8:	07000404 	movi	fp,16
 40014cc:	d8801f17 	ldw	r2,124(sp)
 40014d0:	e5838f0e 	bge	fp,r22,4002310 <___vfprintf_internal_r+0x1e50>
 40014d4:	01410074 	movhi	r5,1025
 40014d8:	297e6084 	addi	r5,r5,-1662
 40014dc:	dc403015 	stw	r17,192(sp)
 40014e0:	d9402c15 	stw	r5,176(sp)
 40014e4:	b023883a 	mov	r17,r22
 40014e8:	04c001c4 	movi	r19,7
 40014ec:	a82d883a 	mov	r22,r21
 40014f0:	902b883a 	mov	r21,r18
 40014f4:	8025883a 	mov	r18,r16
 40014f8:	dc002d17 	ldw	r16,180(sp)
 40014fc:	00000306 	br	400150c <___vfprintf_internal_r+0x104c>
 4001500:	8c7ffc04 	addi	r17,r17,-16
 4001504:	42000204 	addi	r8,r8,8
 4001508:	e440110e 	bge	fp,r17,4001550 <___vfprintf_internal_r+0x1090>
 400150c:	18c00404 	addi	r3,r3,16
 4001510:	10800044 	addi	r2,r2,1
 4001514:	45000015 	stw	r20,0(r8)
 4001518:	47000115 	stw	fp,4(r8)
 400151c:	d8c02015 	stw	r3,128(sp)
 4001520:	d8801f15 	stw	r2,124(sp)
 4001524:	98bff60e 	bge	r19,r2,4001500 <__alt_mem_onchip_memory+0xfbff9500>
 4001528:	d9801e04 	addi	r6,sp,120
 400152c:	b80b883a 	mov	r5,r23
 4001530:	8009883a 	mov	r4,r16
 4001534:	4007ca00 	call	4007ca0 <__sprint_r>
 4001538:	103ce51e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 400153c:	8c7ffc04 	addi	r17,r17,-16
 4001540:	d8c02017 	ldw	r3,128(sp)
 4001544:	d8801f17 	ldw	r2,124(sp)
 4001548:	da000404 	addi	r8,sp,16
 400154c:	e47fef16 	blt	fp,r17,400150c <__alt_mem_onchip_memory+0xfbff950c>
 4001550:	9021883a 	mov	r16,r18
 4001554:	a825883a 	mov	r18,r21
 4001558:	b02b883a 	mov	r21,r22
 400155c:	882d883a 	mov	r22,r17
 4001560:	dc403017 	ldw	r17,192(sp)
 4001564:	d9002c17 	ldw	r4,176(sp)
 4001568:	1d87883a 	add	r3,r3,r22
 400156c:	10800044 	addi	r2,r2,1
 4001570:	41000015 	stw	r4,0(r8)
 4001574:	45800115 	stw	r22,4(r8)
 4001578:	d8c02015 	stw	r3,128(sp)
 400157c:	d8801f15 	stw	r2,124(sp)
 4001580:	010001c4 	movi	r4,7
 4001584:	20818e16 	blt	r4,r2,4001bc0 <___vfprintf_internal_r+0x1700>
 4001588:	42000204 	addi	r8,r8,8
 400158c:	003e0f06 	br	4000dcc <__alt_mem_onchip_memory+0xfbff8dcc>
 4001590:	d9403317 	ldw	r5,204(sp)
 4001594:	00800044 	movi	r2,1
 4001598:	18c00044 	addi	r3,r3,1
 400159c:	1141530e 	bge	r2,r5,4001aec <___vfprintf_internal_r+0x162c>
 40015a0:	dc401f17 	ldw	r17,124(sp)
 40015a4:	00800044 	movi	r2,1
 40015a8:	40800115 	stw	r2,4(r8)
 40015ac:	8c400044 	addi	r17,r17,1
 40015b0:	44000015 	stw	r16,0(r8)
 40015b4:	d8c02015 	stw	r3,128(sp)
 40015b8:	dc401f15 	stw	r17,124(sp)
 40015bc:	008001c4 	movi	r2,7
 40015c0:	14416b16 	blt	r2,r17,4001b70 <___vfprintf_internal_r+0x16b0>
 40015c4:	42000204 	addi	r8,r8,8
 40015c8:	d8803717 	ldw	r2,220(sp)
 40015cc:	d9003417 	ldw	r4,208(sp)
 40015d0:	8c400044 	addi	r17,r17,1
 40015d4:	10c7883a 	add	r3,r2,r3
 40015d8:	40800115 	stw	r2,4(r8)
 40015dc:	41000015 	stw	r4,0(r8)
 40015e0:	d8c02015 	stw	r3,128(sp)
 40015e4:	dc401f15 	stw	r17,124(sp)
 40015e8:	008001c4 	movi	r2,7
 40015ec:	14416916 	blt	r2,r17,4001b94 <___vfprintf_internal_r+0x16d4>
 40015f0:	45800204 	addi	r22,r8,8
 40015f4:	d9003617 	ldw	r4,216(sp)
 40015f8:	d9403817 	ldw	r5,224(sp)
 40015fc:	000d883a 	mov	r6,zero
 4001600:	000f883a 	mov	r7,zero
 4001604:	d8c03c15 	stw	r3,240(sp)
 4001608:	400bc000 	call	400bc00 <__eqdf2>
 400160c:	d8c03c17 	ldw	r3,240(sp)
 4001610:	1000bc26 	beq	r2,zero,4001904 <___vfprintf_internal_r+0x1444>
 4001614:	d9403317 	ldw	r5,204(sp)
 4001618:	84000044 	addi	r16,r16,1
 400161c:	8c400044 	addi	r17,r17,1
 4001620:	28bfffc4 	addi	r2,r5,-1
 4001624:	1887883a 	add	r3,r3,r2
 4001628:	b0800115 	stw	r2,4(r22)
 400162c:	b4000015 	stw	r16,0(r22)
 4001630:	d8c02015 	stw	r3,128(sp)
 4001634:	dc401f15 	stw	r17,124(sp)
 4001638:	008001c4 	movi	r2,7
 400163c:	14414316 	blt	r2,r17,4001b4c <___vfprintf_internal_r+0x168c>
 4001640:	b5800204 	addi	r22,r22,8
 4001644:	d9003a17 	ldw	r4,232(sp)
 4001648:	df0022c4 	addi	fp,sp,139
 400164c:	8c400044 	addi	r17,r17,1
 4001650:	20c7883a 	add	r3,r4,r3
 4001654:	b7000015 	stw	fp,0(r22)
 4001658:	b1000115 	stw	r4,4(r22)
 400165c:	d8c02015 	stw	r3,128(sp)
 4001660:	dc401f15 	stw	r17,124(sp)
 4001664:	008001c4 	movi	r2,7
 4001668:	14400e16 	blt	r2,r17,40016a4 <___vfprintf_internal_r+0x11e4>
 400166c:	b2000204 	addi	r8,r22,8
 4001670:	003e1806 	br	4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 4001674:	01010074 	movhi	r4,1025
 4001678:	213e6084 	addi	r4,r4,-1662
 400167c:	d9002c15 	stw	r4,176(sp)
 4001680:	d9002c17 	ldw	r4,176(sp)
 4001684:	1c07883a 	add	r3,r3,r16
 4001688:	44000115 	stw	r16,4(r8)
 400168c:	41000015 	stw	r4,0(r8)
 4001690:	10800044 	addi	r2,r2,1
 4001694:	d8c02015 	stw	r3,128(sp)
 4001698:	d8801f15 	stw	r2,124(sp)
 400169c:	010001c4 	movi	r4,7
 40016a0:	20be0b0e 	bge	r4,r2,4000ed0 <__alt_mem_onchip_memory+0xfbff8ed0>
 40016a4:	d9002d17 	ldw	r4,180(sp)
 40016a8:	d9801e04 	addi	r6,sp,120
 40016ac:	b80b883a 	mov	r5,r23
 40016b0:	4007ca00 	call	4007ca0 <__sprint_r>
 40016b4:	103c861e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40016b8:	d8c02017 	ldw	r3,128(sp)
 40016bc:	da000404 	addi	r8,sp,16
 40016c0:	003e0406 	br	4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 40016c4:	d9002d17 	ldw	r4,180(sp)
 40016c8:	d9801e04 	addi	r6,sp,120
 40016cc:	b80b883a 	mov	r5,r23
 40016d0:	4007ca00 	call	4007ca0 <__sprint_r>
 40016d4:	103e3b26 	beq	r2,zero,4000fc4 <__alt_mem_onchip_memory+0xfbff8fc4>
 40016d8:	003c7d06 	br	40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40016dc:	d9002d17 	ldw	r4,180(sp)
 40016e0:	d9801e04 	addi	r6,sp,120
 40016e4:	b80b883a 	mov	r5,r23
 40016e8:	4007ca00 	call	4007ca0 <__sprint_r>
 40016ec:	103c781e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40016f0:	d8c02017 	ldw	r3,128(sp)
 40016f4:	da000404 	addi	r8,sp,16
 40016f8:	003de906 	br	4000ea0 <__alt_mem_onchip_memory+0xfbff8ea0>
 40016fc:	d9002d17 	ldw	r4,180(sp)
 4001700:	d9801e04 	addi	r6,sp,120
 4001704:	b80b883a 	mov	r5,r23
 4001708:	4007ca00 	call	4007ca0 <__sprint_r>
 400170c:	103c701e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001710:	d8c02017 	ldw	r3,128(sp)
 4001714:	da000404 	addi	r8,sp,16
 4001718:	003d9b06 	br	4000d88 <__alt_mem_onchip_memory+0xfbff8d88>
 400171c:	d9002d17 	ldw	r4,180(sp)
 4001720:	d9801e04 	addi	r6,sp,120
 4001724:	b80b883a 	mov	r5,r23
 4001728:	4007ca00 	call	4007ca0 <__sprint_r>
 400172c:	103c681e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001730:	d8c02017 	ldw	r3,128(sp)
 4001734:	da000404 	addi	r8,sp,16
 4001738:	003da106 	br	4000dc0 <__alt_mem_onchip_memory+0xfbff8dc0>
 400173c:	d9402a17 	ldw	r5,168(sp)
 4001740:	d8002785 	stb	zero,158(sp)
 4001744:	283f0616 	blt	r5,zero,4001360 <__alt_mem_onchip_memory+0xfbff9360>
 4001748:	00ffdfc4 	movi	r3,-129
 400174c:	9d84b03a 	or	r2,r19,r22
 4001750:	90e4703a 	and	r18,r18,r3
 4001754:	103c3b26 	beq	r2,zero,4000844 <__alt_mem_onchip_memory+0xfbff8844>
 4001758:	0039883a 	mov	fp,zero
 400175c:	003e5806 	br	40010c0 <__alt_mem_onchip_memory+0xfbff90c0>
 4001760:	9080040c 	andi	r2,r18,16
 4001764:	1001b326 	beq	r2,zero,4001e34 <___vfprintf_internal_r+0x1974>
 4001768:	d8c02e17 	ldw	r3,184(sp)
 400176c:	d9002a17 	ldw	r4,168(sp)
 4001770:	d8002785 	stb	zero,158(sp)
 4001774:	18800104 	addi	r2,r3,4
 4001778:	1cc00017 	ldw	r19,0(r3)
 400177c:	002d883a 	mov	r22,zero
 4001780:	2001b516 	blt	r4,zero,4001e58 <___vfprintf_internal_r+0x1998>
 4001784:	00ffdfc4 	movi	r3,-129
 4001788:	d8802e15 	stw	r2,184(sp)
 400178c:	90e4703a 	and	r18,r18,r3
 4001790:	983d0526 	beq	r19,zero,4000ba8 <__alt_mem_onchip_memory+0xfbff8ba8>
 4001794:	0039883a 	mov	fp,zero
 4001798:	003d0806 	br	4000bbc <__alt_mem_onchip_memory+0xfbff8bbc>
 400179c:	dc402617 	ldw	r17,152(sp)
 40017a0:	0441d30e 	bge	zero,r17,4001ef0 <___vfprintf_internal_r+0x1a30>
 40017a4:	dc403217 	ldw	r17,200(sp)
 40017a8:	d8803317 	ldw	r2,204(sp)
 40017ac:	1440010e 	bge	r2,r17,40017b4 <___vfprintf_internal_r+0x12f4>
 40017b0:	1023883a 	mov	r17,r2
 40017b4:	04400a0e 	bge	zero,r17,40017e0 <___vfprintf_internal_r+0x1320>
 40017b8:	d8801f17 	ldw	r2,124(sp)
 40017bc:	1c47883a 	add	r3,r3,r17
 40017c0:	44000015 	stw	r16,0(r8)
 40017c4:	10800044 	addi	r2,r2,1
 40017c8:	44400115 	stw	r17,4(r8)
 40017cc:	d8c02015 	stw	r3,128(sp)
 40017d0:	d8801f15 	stw	r2,124(sp)
 40017d4:	010001c4 	movi	r4,7
 40017d8:	20826516 	blt	r4,r2,4002170 <___vfprintf_internal_r+0x1cb0>
 40017dc:	42000204 	addi	r8,r8,8
 40017e0:	88026116 	blt	r17,zero,4002168 <___vfprintf_internal_r+0x1ca8>
 40017e4:	d9003217 	ldw	r4,200(sp)
 40017e8:	2463c83a 	sub	r17,r4,r17
 40017ec:	04407b0e 	bge	zero,r17,40019dc <___vfprintf_internal_r+0x151c>
 40017f0:	05800404 	movi	r22,16
 40017f4:	d8801f17 	ldw	r2,124(sp)
 40017f8:	b4419d0e 	bge	r22,r17,4001e70 <___vfprintf_internal_r+0x19b0>
 40017fc:	01010074 	movhi	r4,1025
 4001800:	213e6084 	addi	r4,r4,-1662
 4001804:	d9002c15 	stw	r4,176(sp)
 4001808:	070001c4 	movi	fp,7
 400180c:	dcc02d17 	ldw	r19,180(sp)
 4001810:	00000306 	br	4001820 <___vfprintf_internal_r+0x1360>
 4001814:	42000204 	addi	r8,r8,8
 4001818:	8c7ffc04 	addi	r17,r17,-16
 400181c:	b441970e 	bge	r22,r17,4001e7c <___vfprintf_internal_r+0x19bc>
 4001820:	18c00404 	addi	r3,r3,16
 4001824:	10800044 	addi	r2,r2,1
 4001828:	45000015 	stw	r20,0(r8)
 400182c:	45800115 	stw	r22,4(r8)
 4001830:	d8c02015 	stw	r3,128(sp)
 4001834:	d8801f15 	stw	r2,124(sp)
 4001838:	e0bff60e 	bge	fp,r2,4001814 <__alt_mem_onchip_memory+0xfbff9814>
 400183c:	d9801e04 	addi	r6,sp,120
 4001840:	b80b883a 	mov	r5,r23
 4001844:	9809883a 	mov	r4,r19
 4001848:	4007ca00 	call	4007ca0 <__sprint_r>
 400184c:	103c201e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001850:	d8c02017 	ldw	r3,128(sp)
 4001854:	d8801f17 	ldw	r2,124(sp)
 4001858:	da000404 	addi	r8,sp,16
 400185c:	003fee06 	br	4001818 <__alt_mem_onchip_memory+0xfbff9818>
 4001860:	d9002d17 	ldw	r4,180(sp)
 4001864:	d9801e04 	addi	r6,sp,120
 4001868:	b80b883a 	mov	r5,r23
 400186c:	4007ca00 	call	4007ca0 <__sprint_r>
 4001870:	103c171e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001874:	d8c02017 	ldw	r3,128(sp)
 4001878:	df002787 	ldb	fp,158(sp)
 400187c:	da000404 	addi	r8,sp,16
 4001880:	003d3406 	br	4000d54 <__alt_mem_onchip_memory+0xfbff8d54>
 4001884:	9080040c 	andi	r2,r18,16
 4001888:	10016126 	beq	r2,zero,4001e10 <___vfprintf_internal_r+0x1950>
 400188c:	d9402e17 	ldw	r5,184(sp)
 4001890:	2cc00017 	ldw	r19,0(r5)
 4001894:	29400104 	addi	r5,r5,4
 4001898:	d9402e15 	stw	r5,184(sp)
 400189c:	982dd7fa 	srai	r22,r19,31
 40018a0:	b005883a 	mov	r2,r22
 40018a4:	003c5a06 	br	4000a10 <__alt_mem_onchip_memory+0xfbff8a10>
 40018a8:	9080040c 	andi	r2,r18,16
 40018ac:	10003526 	beq	r2,zero,4001984 <___vfprintf_internal_r+0x14c4>
 40018b0:	d8c02e17 	ldw	r3,184(sp)
 40018b4:	d9002a17 	ldw	r4,168(sp)
 40018b8:	d8002785 	stb	zero,158(sp)
 40018bc:	18800104 	addi	r2,r3,4
 40018c0:	1cc00017 	ldw	r19,0(r3)
 40018c4:	002d883a 	mov	r22,zero
 40018c8:	20003716 	blt	r4,zero,40019a8 <___vfprintf_internal_r+0x14e8>
 40018cc:	00ffdfc4 	movi	r3,-129
 40018d0:	d8802e15 	stw	r2,184(sp)
 40018d4:	90e4703a 	and	r18,r18,r3
 40018d8:	0039883a 	mov	fp,zero
 40018dc:	983dd426 	beq	r19,zero,4001030 <__alt_mem_onchip_memory+0xfbff9030>
 40018e0:	00800244 	movi	r2,9
 40018e4:	14fc5336 	bltu	r2,r19,4000a34 <__alt_mem_onchip_memory+0xfbff8a34>
 40018e8:	d8c02817 	ldw	r3,160(sp)
 40018ec:	dc001dc4 	addi	r16,sp,119
 40018f0:	9cc00c04 	addi	r19,r19,48
 40018f4:	1c07c83a 	sub	r3,r3,r16
 40018f8:	dcc01dc5 	stb	r19,119(sp)
 40018fc:	d8c02b15 	stw	r3,172(sp)
 4001900:	003cc606 	br	4000c1c <__alt_mem_onchip_memory+0xfbff8c1c>
 4001904:	d8803317 	ldw	r2,204(sp)
 4001908:	143fffc4 	addi	r16,r2,-1
 400190c:	043f4d0e 	bge	zero,r16,4001644 <__alt_mem_onchip_memory+0xfbff9644>
 4001910:	07000404 	movi	fp,16
 4001914:	e400810e 	bge	fp,r16,4001b1c <___vfprintf_internal_r+0x165c>
 4001918:	01410074 	movhi	r5,1025
 400191c:	297e6084 	addi	r5,r5,-1662
 4001920:	d9402c15 	stw	r5,176(sp)
 4001924:	01c001c4 	movi	r7,7
 4001928:	dcc02d17 	ldw	r19,180(sp)
 400192c:	00000306 	br	400193c <___vfprintf_internal_r+0x147c>
 4001930:	b5800204 	addi	r22,r22,8
 4001934:	843ffc04 	addi	r16,r16,-16
 4001938:	e4007b0e 	bge	fp,r16,4001b28 <___vfprintf_internal_r+0x1668>
 400193c:	18c00404 	addi	r3,r3,16
 4001940:	8c400044 	addi	r17,r17,1
 4001944:	b5000015 	stw	r20,0(r22)
 4001948:	b7000115 	stw	fp,4(r22)
 400194c:	d8c02015 	stw	r3,128(sp)
 4001950:	dc401f15 	stw	r17,124(sp)
 4001954:	3c7ff60e 	bge	r7,r17,4001930 <__alt_mem_onchip_memory+0xfbff9930>
 4001958:	d9801e04 	addi	r6,sp,120
 400195c:	b80b883a 	mov	r5,r23
 4001960:	9809883a 	mov	r4,r19
 4001964:	d9c03c15 	stw	r7,240(sp)
 4001968:	4007ca00 	call	4007ca0 <__sprint_r>
 400196c:	d9c03c17 	ldw	r7,240(sp)
 4001970:	103bd71e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001974:	d8c02017 	ldw	r3,128(sp)
 4001978:	dc401f17 	ldw	r17,124(sp)
 400197c:	dd800404 	addi	r22,sp,16
 4001980:	003fec06 	br	4001934 <__alt_mem_onchip_memory+0xfbff9934>
 4001984:	9080100c 	andi	r2,r18,64
 4001988:	d8002785 	stb	zero,158(sp)
 400198c:	10010e26 	beq	r2,zero,4001dc8 <___vfprintf_internal_r+0x1908>
 4001990:	d9402e17 	ldw	r5,184(sp)
 4001994:	d8c02a17 	ldw	r3,168(sp)
 4001998:	002d883a 	mov	r22,zero
 400199c:	28800104 	addi	r2,r5,4
 40019a0:	2cc0000b 	ldhu	r19,0(r5)
 40019a4:	183fc90e 	bge	r3,zero,40018cc <__alt_mem_onchip_memory+0xfbff98cc>
 40019a8:	d8802e15 	stw	r2,184(sp)
 40019ac:	0039883a 	mov	fp,zero
 40019b0:	9d84b03a 	or	r2,r19,r22
 40019b4:	103c1e1e 	bne	r2,zero,4000a30 <__alt_mem_onchip_memory+0xfbff8a30>
 40019b8:	00800044 	movi	r2,1
 40019bc:	003e6c06 	br	4001370 <__alt_mem_onchip_memory+0xfbff9370>
 40019c0:	d9002d17 	ldw	r4,180(sp)
 40019c4:	d9801e04 	addi	r6,sp,120
 40019c8:	b80b883a 	mov	r5,r23
 40019cc:	4007ca00 	call	4007ca0 <__sprint_r>
 40019d0:	103bbf1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40019d4:	d8c02017 	ldw	r3,128(sp)
 40019d8:	da000404 	addi	r8,sp,16
 40019dc:	d9003217 	ldw	r4,200(sp)
 40019e0:	d8802617 	ldw	r2,152(sp)
 40019e4:	d9403317 	ldw	r5,204(sp)
 40019e8:	8123883a 	add	r17,r16,r4
 40019ec:	11400216 	blt	r2,r5,40019f8 <___vfprintf_internal_r+0x1538>
 40019f0:	9100004c 	andi	r4,r18,1
 40019f4:	20000d26 	beq	r4,zero,4001a2c <___vfprintf_internal_r+0x156c>
 40019f8:	d9003717 	ldw	r4,220(sp)
 40019fc:	d9403417 	ldw	r5,208(sp)
 4001a00:	1907883a 	add	r3,r3,r4
 4001a04:	d9001f17 	ldw	r4,124(sp)
 4001a08:	41400015 	stw	r5,0(r8)
 4001a0c:	d9403717 	ldw	r5,220(sp)
 4001a10:	21000044 	addi	r4,r4,1
 4001a14:	d8c02015 	stw	r3,128(sp)
 4001a18:	41400115 	stw	r5,4(r8)
 4001a1c:	d9001f15 	stw	r4,124(sp)
 4001a20:	014001c4 	movi	r5,7
 4001a24:	2901e816 	blt	r5,r4,40021c8 <___vfprintf_internal_r+0x1d08>
 4001a28:	42000204 	addi	r8,r8,8
 4001a2c:	d9003317 	ldw	r4,204(sp)
 4001a30:	8121883a 	add	r16,r16,r4
 4001a34:	2085c83a 	sub	r2,r4,r2
 4001a38:	8461c83a 	sub	r16,r16,r17
 4001a3c:	1400010e 	bge	r2,r16,4001a44 <___vfprintf_internal_r+0x1584>
 4001a40:	1021883a 	mov	r16,r2
 4001a44:	04000a0e 	bge	zero,r16,4001a70 <___vfprintf_internal_r+0x15b0>
 4001a48:	d9001f17 	ldw	r4,124(sp)
 4001a4c:	1c07883a 	add	r3,r3,r16
 4001a50:	44400015 	stw	r17,0(r8)
 4001a54:	21000044 	addi	r4,r4,1
 4001a58:	44000115 	stw	r16,4(r8)
 4001a5c:	d8c02015 	stw	r3,128(sp)
 4001a60:	d9001f15 	stw	r4,124(sp)
 4001a64:	014001c4 	movi	r5,7
 4001a68:	2901fb16 	blt	r5,r4,4002258 <___vfprintf_internal_r+0x1d98>
 4001a6c:	42000204 	addi	r8,r8,8
 4001a70:	8001f716 	blt	r16,zero,4002250 <___vfprintf_internal_r+0x1d90>
 4001a74:	1421c83a 	sub	r16,r2,r16
 4001a78:	043d160e 	bge	zero,r16,4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 4001a7c:	04400404 	movi	r17,16
 4001a80:	d8801f17 	ldw	r2,124(sp)
 4001a84:	8c3efb0e 	bge	r17,r16,4001674 <__alt_mem_onchip_memory+0xfbff9674>
 4001a88:	01410074 	movhi	r5,1025
 4001a8c:	297e6084 	addi	r5,r5,-1662
 4001a90:	d9402c15 	stw	r5,176(sp)
 4001a94:	058001c4 	movi	r22,7
 4001a98:	dcc02d17 	ldw	r19,180(sp)
 4001a9c:	00000306 	br	4001aac <___vfprintf_internal_r+0x15ec>
 4001aa0:	42000204 	addi	r8,r8,8
 4001aa4:	843ffc04 	addi	r16,r16,-16
 4001aa8:	8c3ef50e 	bge	r17,r16,4001680 <__alt_mem_onchip_memory+0xfbff9680>
 4001aac:	18c00404 	addi	r3,r3,16
 4001ab0:	10800044 	addi	r2,r2,1
 4001ab4:	45000015 	stw	r20,0(r8)
 4001ab8:	44400115 	stw	r17,4(r8)
 4001abc:	d8c02015 	stw	r3,128(sp)
 4001ac0:	d8801f15 	stw	r2,124(sp)
 4001ac4:	b0bff60e 	bge	r22,r2,4001aa0 <__alt_mem_onchip_memory+0xfbff9aa0>
 4001ac8:	d9801e04 	addi	r6,sp,120
 4001acc:	b80b883a 	mov	r5,r23
 4001ad0:	9809883a 	mov	r4,r19
 4001ad4:	4007ca00 	call	4007ca0 <__sprint_r>
 4001ad8:	103b7d1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001adc:	d8c02017 	ldw	r3,128(sp)
 4001ae0:	d8801f17 	ldw	r2,124(sp)
 4001ae4:	da000404 	addi	r8,sp,16
 4001ae8:	003fee06 	br	4001aa4 <__alt_mem_onchip_memory+0xfbff9aa4>
 4001aec:	9088703a 	and	r4,r18,r2
 4001af0:	203eab1e 	bne	r4,zero,40015a0 <__alt_mem_onchip_memory+0xfbff95a0>
 4001af4:	dc401f17 	ldw	r17,124(sp)
 4001af8:	40800115 	stw	r2,4(r8)
 4001afc:	44000015 	stw	r16,0(r8)
 4001b00:	8c400044 	addi	r17,r17,1
 4001b04:	d8c02015 	stw	r3,128(sp)
 4001b08:	dc401f15 	stw	r17,124(sp)
 4001b0c:	008001c4 	movi	r2,7
 4001b10:	14400e16 	blt	r2,r17,4001b4c <___vfprintf_internal_r+0x168c>
 4001b14:	45800204 	addi	r22,r8,8
 4001b18:	003eca06 	br	4001644 <__alt_mem_onchip_memory+0xfbff9644>
 4001b1c:	01010074 	movhi	r4,1025
 4001b20:	213e6084 	addi	r4,r4,-1662
 4001b24:	d9002c15 	stw	r4,176(sp)
 4001b28:	d8802c17 	ldw	r2,176(sp)
 4001b2c:	1c07883a 	add	r3,r3,r16
 4001b30:	8c400044 	addi	r17,r17,1
 4001b34:	b0800015 	stw	r2,0(r22)
 4001b38:	b4000115 	stw	r16,4(r22)
 4001b3c:	d8c02015 	stw	r3,128(sp)
 4001b40:	dc401f15 	stw	r17,124(sp)
 4001b44:	008001c4 	movi	r2,7
 4001b48:	147ebd0e 	bge	r2,r17,4001640 <__alt_mem_onchip_memory+0xfbff9640>
 4001b4c:	d9002d17 	ldw	r4,180(sp)
 4001b50:	d9801e04 	addi	r6,sp,120
 4001b54:	b80b883a 	mov	r5,r23
 4001b58:	4007ca00 	call	4007ca0 <__sprint_r>
 4001b5c:	103b5c1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001b60:	d8c02017 	ldw	r3,128(sp)
 4001b64:	dc401f17 	ldw	r17,124(sp)
 4001b68:	dd800404 	addi	r22,sp,16
 4001b6c:	003eb506 	br	4001644 <__alt_mem_onchip_memory+0xfbff9644>
 4001b70:	d9002d17 	ldw	r4,180(sp)
 4001b74:	d9801e04 	addi	r6,sp,120
 4001b78:	b80b883a 	mov	r5,r23
 4001b7c:	4007ca00 	call	4007ca0 <__sprint_r>
 4001b80:	103b531e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001b84:	d8c02017 	ldw	r3,128(sp)
 4001b88:	dc401f17 	ldw	r17,124(sp)
 4001b8c:	da000404 	addi	r8,sp,16
 4001b90:	003e8d06 	br	40015c8 <__alt_mem_onchip_memory+0xfbff95c8>
 4001b94:	d9002d17 	ldw	r4,180(sp)
 4001b98:	d9801e04 	addi	r6,sp,120
 4001b9c:	b80b883a 	mov	r5,r23
 4001ba0:	4007ca00 	call	4007ca0 <__sprint_r>
 4001ba4:	103b4a1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001ba8:	d8c02017 	ldw	r3,128(sp)
 4001bac:	dc401f17 	ldw	r17,124(sp)
 4001bb0:	dd800404 	addi	r22,sp,16
 4001bb4:	003e8f06 	br	40015f4 <__alt_mem_onchip_memory+0xfbff95f4>
 4001bb8:	0027883a 	mov	r19,zero
 4001bbc:	003f4a06 	br	40018e8 <__alt_mem_onchip_memory+0xfbff98e8>
 4001bc0:	d9002d17 	ldw	r4,180(sp)
 4001bc4:	d9801e04 	addi	r6,sp,120
 4001bc8:	b80b883a 	mov	r5,r23
 4001bcc:	4007ca00 	call	4007ca0 <__sprint_r>
 4001bd0:	103b3f1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001bd4:	d8c02017 	ldw	r3,128(sp)
 4001bd8:	da000404 	addi	r8,sp,16
 4001bdc:	003c7b06 	br	4000dcc <__alt_mem_onchip_memory+0xfbff8dcc>
 4001be0:	d9402a17 	ldw	r5,168(sp)
 4001be4:	04e7c83a 	sub	r19,zero,r19
 4001be8:	07000b44 	movi	fp,45
 4001bec:	9804c03a 	cmpne	r2,r19,zero
 4001bf0:	05adc83a 	sub	r22,zero,r22
 4001bf4:	df002785 	stb	fp,158(sp)
 4001bf8:	b0adc83a 	sub	r22,r22,r2
 4001bfc:	28017b16 	blt	r5,zero,40021ec <___vfprintf_internal_r+0x1d2c>
 4001c00:	00bfdfc4 	movi	r2,-129
 4001c04:	90a4703a 	and	r18,r18,r2
 4001c08:	003b8906 	br	4000a30 <__alt_mem_onchip_memory+0xfbff8a30>
 4001c0c:	d9003617 	ldw	r4,216(sp)
 4001c10:	d9403817 	ldw	r5,224(sp)
 4001c14:	da003d15 	stw	r8,244(sp)
 4001c18:	40078c40 	call	40078c4 <__fpclassifyd>
 4001c1c:	da003d17 	ldw	r8,244(sp)
 4001c20:	1000f026 	beq	r2,zero,4001fe4 <___vfprintf_internal_r+0x1b24>
 4001c24:	d9002a17 	ldw	r4,168(sp)
 4001c28:	05bff7c4 	movi	r22,-33
 4001c2c:	00bfffc4 	movi	r2,-1
 4001c30:	8dac703a 	and	r22,r17,r22
 4001c34:	20820026 	beq	r4,r2,4002438 <___vfprintf_internal_r+0x1f78>
 4001c38:	008011c4 	movi	r2,71
 4001c3c:	b081f726 	beq	r22,r2,400241c <___vfprintf_internal_r+0x1f5c>
 4001c40:	d9003817 	ldw	r4,224(sp)
 4001c44:	90c04014 	ori	r3,r18,256
 4001c48:	d8c02c15 	stw	r3,176(sp)
 4001c4c:	20021516 	blt	r4,zero,40024a4 <___vfprintf_internal_r+0x1fe4>
 4001c50:	dcc03817 	ldw	r19,224(sp)
 4001c54:	d8002905 	stb	zero,164(sp)
 4001c58:	00801984 	movi	r2,102
 4001c5c:	8881f926 	beq	r17,r2,4002444 <___vfprintf_internal_r+0x1f84>
 4001c60:	00801184 	movi	r2,70
 4001c64:	88821c26 	beq	r17,r2,40024d8 <___vfprintf_internal_r+0x2018>
 4001c68:	00801144 	movi	r2,69
 4001c6c:	b081ef26 	beq	r22,r2,400242c <___vfprintf_internal_r+0x1f6c>
 4001c70:	d8c02a17 	ldw	r3,168(sp)
 4001c74:	d8802104 	addi	r2,sp,132
 4001c78:	d8800315 	stw	r2,12(sp)
 4001c7c:	d9403617 	ldw	r5,216(sp)
 4001c80:	d8802504 	addi	r2,sp,148
 4001c84:	d9002d17 	ldw	r4,180(sp)
 4001c88:	d8800215 	stw	r2,8(sp)
 4001c8c:	d8802604 	addi	r2,sp,152
 4001c90:	d8c00015 	stw	r3,0(sp)
 4001c94:	d8800115 	stw	r2,4(sp)
 4001c98:	01c00084 	movi	r7,2
 4001c9c:	980d883a 	mov	r6,r19
 4001ca0:	d8c03c15 	stw	r3,240(sp)
 4001ca4:	da003d15 	stw	r8,244(sp)
 4001ca8:	4002bf00 	call	4002bf0 <_dtoa_r>
 4001cac:	1021883a 	mov	r16,r2
 4001cb0:	008019c4 	movi	r2,103
 4001cb4:	d8c03c17 	ldw	r3,240(sp)
 4001cb8:	da003d17 	ldw	r8,244(sp)
 4001cbc:	88817126 	beq	r17,r2,4002284 <___vfprintf_internal_r+0x1dc4>
 4001cc0:	008011c4 	movi	r2,71
 4001cc4:	88829126 	beq	r17,r2,400270c <___vfprintf_internal_r+0x224c>
 4001cc8:	80f9883a 	add	fp,r16,r3
 4001ccc:	d9003617 	ldw	r4,216(sp)
 4001cd0:	000d883a 	mov	r6,zero
 4001cd4:	000f883a 	mov	r7,zero
 4001cd8:	980b883a 	mov	r5,r19
 4001cdc:	da003d15 	stw	r8,244(sp)
 4001ce0:	400bc000 	call	400bc00 <__eqdf2>
 4001ce4:	da003d17 	ldw	r8,244(sp)
 4001ce8:	10018d26 	beq	r2,zero,4002320 <___vfprintf_internal_r+0x1e60>
 4001cec:	d8802117 	ldw	r2,132(sp)
 4001cf0:	1700062e 	bgeu	r2,fp,4001d0c <___vfprintf_internal_r+0x184c>
 4001cf4:	01000c04 	movi	r4,48
 4001cf8:	10c00044 	addi	r3,r2,1
 4001cfc:	d8c02115 	stw	r3,132(sp)
 4001d00:	11000005 	stb	r4,0(r2)
 4001d04:	d8802117 	ldw	r2,132(sp)
 4001d08:	173ffb36 	bltu	r2,fp,4001cf8 <__alt_mem_onchip_memory+0xfbff9cf8>
 4001d0c:	1405c83a 	sub	r2,r2,r16
 4001d10:	d8803315 	stw	r2,204(sp)
 4001d14:	008011c4 	movi	r2,71
 4001d18:	b0817626 	beq	r22,r2,40022f4 <___vfprintf_internal_r+0x1e34>
 4001d1c:	00801944 	movi	r2,101
 4001d20:	1442800e 	bge	r2,r17,4002724 <___vfprintf_internal_r+0x2264>
 4001d24:	d8c02617 	ldw	r3,152(sp)
 4001d28:	00801984 	movi	r2,102
 4001d2c:	d8c03215 	stw	r3,200(sp)
 4001d30:	8881fe26 	beq	r17,r2,400252c <___vfprintf_internal_r+0x206c>
 4001d34:	d8c03217 	ldw	r3,200(sp)
 4001d38:	d9003317 	ldw	r4,204(sp)
 4001d3c:	1901dd16 	blt	r3,r4,40024b4 <___vfprintf_internal_r+0x1ff4>
 4001d40:	9480004c 	andi	r18,r18,1
 4001d44:	90022b1e 	bne	r18,zero,40025f4 <___vfprintf_internal_r+0x2134>
 4001d48:	1805883a 	mov	r2,r3
 4001d4c:	18028316 	blt	r3,zero,400275c <___vfprintf_internal_r+0x229c>
 4001d50:	d8c03217 	ldw	r3,200(sp)
 4001d54:	044019c4 	movi	r17,103
 4001d58:	d8c02b15 	stw	r3,172(sp)
 4001d5c:	df002907 	ldb	fp,164(sp)
 4001d60:	e001531e 	bne	fp,zero,40022b0 <___vfprintf_internal_r+0x1df0>
 4001d64:	df002783 	ldbu	fp,158(sp)
 4001d68:	d8802915 	stw	r2,164(sp)
 4001d6c:	dc802c17 	ldw	r18,176(sp)
 4001d70:	d8002a15 	stw	zero,168(sp)
 4001d74:	003baf06 	br	4000c34 <__alt_mem_onchip_memory+0xfbff8c34>
 4001d78:	d8c02e17 	ldw	r3,184(sp)
 4001d7c:	d9002e17 	ldw	r4,184(sp)
 4001d80:	d9402e17 	ldw	r5,184(sp)
 4001d84:	18c00017 	ldw	r3,0(r3)
 4001d88:	21000117 	ldw	r4,4(r4)
 4001d8c:	29400204 	addi	r5,r5,8
 4001d90:	d8c03615 	stw	r3,216(sp)
 4001d94:	d9003815 	stw	r4,224(sp)
 4001d98:	d9402e15 	stw	r5,184(sp)
 4001d9c:	003b5006 	br	4000ae0 <__alt_mem_onchip_memory+0xfbff8ae0>
 4001da0:	ac400007 	ldb	r17,0(r21)
 4001da4:	003a2806 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 4001da8:	9080100c 	andi	r2,r18,64
 4001dac:	1000a826 	beq	r2,zero,4002050 <___vfprintf_internal_r+0x1b90>
 4001db0:	d8c02e17 	ldw	r3,184(sp)
 4001db4:	002d883a 	mov	r22,zero
 4001db8:	1cc0000b 	ldhu	r19,0(r3)
 4001dbc:	18c00104 	addi	r3,r3,4
 4001dc0:	d8c02e15 	stw	r3,184(sp)
 4001dc4:	003caf06 	br	4001084 <__alt_mem_onchip_memory+0xfbff9084>
 4001dc8:	d9002e17 	ldw	r4,184(sp)
 4001dcc:	d9402a17 	ldw	r5,168(sp)
 4001dd0:	002d883a 	mov	r22,zero
 4001dd4:	20800104 	addi	r2,r4,4
 4001dd8:	24c00017 	ldw	r19,0(r4)
 4001ddc:	283ebb0e 	bge	r5,zero,40018cc <__alt_mem_onchip_memory+0xfbff98cc>
 4001de0:	003ef106 	br	40019a8 <__alt_mem_onchip_memory+0xfbff99a8>
 4001de4:	9080040c 	andi	r2,r18,16
 4001de8:	1000921e 	bne	r2,zero,4002034 <___vfprintf_internal_r+0x1b74>
 4001dec:	9480100c 	andi	r18,r18,64
 4001df0:	90013926 	beq	r18,zero,40022d8 <___vfprintf_internal_r+0x1e18>
 4001df4:	d9402e17 	ldw	r5,184(sp)
 4001df8:	d8c02f17 	ldw	r3,188(sp)
 4001dfc:	28800017 	ldw	r2,0(r5)
 4001e00:	29400104 	addi	r5,r5,4
 4001e04:	d9402e15 	stw	r5,184(sp)
 4001e08:	10c0000d 	sth	r3,0(r2)
 4001e0c:	0039e406 	br	40005a0 <__alt_mem_onchip_memory+0xfbff85a0>
 4001e10:	9080100c 	andi	r2,r18,64
 4001e14:	10008026 	beq	r2,zero,4002018 <___vfprintf_internal_r+0x1b58>
 4001e18:	d8802e17 	ldw	r2,184(sp)
 4001e1c:	14c0000f 	ldh	r19,0(r2)
 4001e20:	10800104 	addi	r2,r2,4
 4001e24:	d8802e15 	stw	r2,184(sp)
 4001e28:	982dd7fa 	srai	r22,r19,31
 4001e2c:	b005883a 	mov	r2,r22
 4001e30:	003af706 	br	4000a10 <__alt_mem_onchip_memory+0xfbff8a10>
 4001e34:	9080100c 	andi	r2,r18,64
 4001e38:	d8002785 	stb	zero,158(sp)
 4001e3c:	10008a1e 	bne	r2,zero,4002068 <___vfprintf_internal_r+0x1ba8>
 4001e40:	d9002e17 	ldw	r4,184(sp)
 4001e44:	d9402a17 	ldw	r5,168(sp)
 4001e48:	002d883a 	mov	r22,zero
 4001e4c:	20800104 	addi	r2,r4,4
 4001e50:	24c00017 	ldw	r19,0(r4)
 4001e54:	283e4b0e 	bge	r5,zero,4001784 <__alt_mem_onchip_memory+0xfbff9784>
 4001e58:	9d86b03a 	or	r3,r19,r22
 4001e5c:	d8802e15 	stw	r2,184(sp)
 4001e60:	183e4c1e 	bne	r3,zero,4001794 <__alt_mem_onchip_memory+0xfbff9794>
 4001e64:	0039883a 	mov	fp,zero
 4001e68:	0005883a 	mov	r2,zero
 4001e6c:	003d4006 	br	4001370 <__alt_mem_onchip_memory+0xfbff9370>
 4001e70:	01410074 	movhi	r5,1025
 4001e74:	297e6084 	addi	r5,r5,-1662
 4001e78:	d9402c15 	stw	r5,176(sp)
 4001e7c:	d9402c17 	ldw	r5,176(sp)
 4001e80:	1c47883a 	add	r3,r3,r17
 4001e84:	10800044 	addi	r2,r2,1
 4001e88:	41400015 	stw	r5,0(r8)
 4001e8c:	44400115 	stw	r17,4(r8)
 4001e90:	d8c02015 	stw	r3,128(sp)
 4001e94:	d8801f15 	stw	r2,124(sp)
 4001e98:	010001c4 	movi	r4,7
 4001e9c:	20bec816 	blt	r4,r2,40019c0 <__alt_mem_onchip_memory+0xfbff99c0>
 4001ea0:	42000204 	addi	r8,r8,8
 4001ea4:	003ecd06 	br	40019dc <__alt_mem_onchip_memory+0xfbff99dc>
 4001ea8:	d9002a17 	ldw	r4,168(sp)
 4001eac:	d8002785 	stb	zero,158(sp)
 4001eb0:	203d2d16 	blt	r4,zero,4001368 <__alt_mem_onchip_memory+0xfbff9368>
 4001eb4:	00bfdfc4 	movi	r2,-129
 4001eb8:	90a4703a 	and	r18,r18,r2
 4001ebc:	003a6106 	br	4000844 <__alt_mem_onchip_memory+0xfbff8844>
 4001ec0:	01010074 	movhi	r4,1025
 4001ec4:	213e6084 	addi	r4,r4,-1662
 4001ec8:	d9002c15 	stw	r4,176(sp)
 4001ecc:	003bea06 	br	4000e78 <__alt_mem_onchip_memory+0xfbff8e78>
 4001ed0:	d9002d17 	ldw	r4,180(sp)
 4001ed4:	d9801e04 	addi	r6,sp,120
 4001ed8:	b80b883a 	mov	r5,r23
 4001edc:	4007ca00 	call	4007ca0 <__sprint_r>
 4001ee0:	103a7b1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001ee4:	d8c02017 	ldw	r3,128(sp)
 4001ee8:	da000404 	addi	r8,sp,16
 4001eec:	003d4106 	br	40013f4 <__alt_mem_onchip_memory+0xfbff93f4>
 4001ef0:	d8801f17 	ldw	r2,124(sp)
 4001ef4:	01410074 	movhi	r5,1025
 4001ef8:	01000044 	movi	r4,1
 4001efc:	18c00044 	addi	r3,r3,1
 4001f00:	10800044 	addi	r2,r2,1
 4001f04:	297e6004 	addi	r5,r5,-1664
 4001f08:	41000115 	stw	r4,4(r8)
 4001f0c:	41400015 	stw	r5,0(r8)
 4001f10:	d8c02015 	stw	r3,128(sp)
 4001f14:	d8801f15 	stw	r2,124(sp)
 4001f18:	010001c4 	movi	r4,7
 4001f1c:	20805c16 	blt	r4,r2,4002090 <___vfprintf_internal_r+0x1bd0>
 4001f20:	42000204 	addi	r8,r8,8
 4001f24:	8800041e 	bne	r17,zero,4001f38 <___vfprintf_internal_r+0x1a78>
 4001f28:	d8803317 	ldw	r2,204(sp)
 4001f2c:	1000021e 	bne	r2,zero,4001f38 <___vfprintf_internal_r+0x1a78>
 4001f30:	9080004c 	andi	r2,r18,1
 4001f34:	103be726 	beq	r2,zero,4000ed4 <__alt_mem_onchip_memory+0xfbff8ed4>
 4001f38:	d9003717 	ldw	r4,220(sp)
 4001f3c:	d8801f17 	ldw	r2,124(sp)
 4001f40:	d9403417 	ldw	r5,208(sp)
 4001f44:	20c7883a 	add	r3,r4,r3
 4001f48:	10800044 	addi	r2,r2,1
 4001f4c:	41000115 	stw	r4,4(r8)
 4001f50:	41400015 	stw	r5,0(r8)
 4001f54:	d8c02015 	stw	r3,128(sp)
 4001f58:	d8801f15 	stw	r2,124(sp)
 4001f5c:	010001c4 	movi	r4,7
 4001f60:	20812116 	blt	r4,r2,40023e8 <___vfprintf_internal_r+0x1f28>
 4001f64:	42000204 	addi	r8,r8,8
 4001f68:	0463c83a 	sub	r17,zero,r17
 4001f6c:	0440730e 	bge	zero,r17,400213c <___vfprintf_internal_r+0x1c7c>
 4001f70:	05800404 	movi	r22,16
 4001f74:	b440860e 	bge	r22,r17,4002190 <___vfprintf_internal_r+0x1cd0>
 4001f78:	01410074 	movhi	r5,1025
 4001f7c:	297e6084 	addi	r5,r5,-1662
 4001f80:	d9402c15 	stw	r5,176(sp)
 4001f84:	070001c4 	movi	fp,7
 4001f88:	dcc02d17 	ldw	r19,180(sp)
 4001f8c:	00000306 	br	4001f9c <___vfprintf_internal_r+0x1adc>
 4001f90:	42000204 	addi	r8,r8,8
 4001f94:	8c7ffc04 	addi	r17,r17,-16
 4001f98:	b440800e 	bge	r22,r17,400219c <___vfprintf_internal_r+0x1cdc>
 4001f9c:	18c00404 	addi	r3,r3,16
 4001fa0:	10800044 	addi	r2,r2,1
 4001fa4:	45000015 	stw	r20,0(r8)
 4001fa8:	45800115 	stw	r22,4(r8)
 4001fac:	d8c02015 	stw	r3,128(sp)
 4001fb0:	d8801f15 	stw	r2,124(sp)
 4001fb4:	e0bff60e 	bge	fp,r2,4001f90 <__alt_mem_onchip_memory+0xfbff9f90>
 4001fb8:	d9801e04 	addi	r6,sp,120
 4001fbc:	b80b883a 	mov	r5,r23
 4001fc0:	9809883a 	mov	r4,r19
 4001fc4:	4007ca00 	call	4007ca0 <__sprint_r>
 4001fc8:	103a411e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4001fcc:	d8c02017 	ldw	r3,128(sp)
 4001fd0:	d8801f17 	ldw	r2,124(sp)
 4001fd4:	da000404 	addi	r8,sp,16
 4001fd8:	003fee06 	br	4001f94 <__alt_mem_onchip_memory+0xfbff9f94>
 4001fdc:	00bfffc4 	movi	r2,-1
 4001fe0:	003a3f06 	br	40008e0 <__alt_mem_onchip_memory+0xfbff88e0>
 4001fe4:	008011c4 	movi	r2,71
 4001fe8:	1440b816 	blt	r2,r17,40022cc <___vfprintf_internal_r+0x1e0c>
 4001fec:	04010074 	movhi	r16,1025
 4001ff0:	843e5204 	addi	r16,r16,-1720
 4001ff4:	00c000c4 	movi	r3,3
 4001ff8:	00bfdfc4 	movi	r2,-129
 4001ffc:	d8c02915 	stw	r3,164(sp)
 4002000:	90a4703a 	and	r18,r18,r2
 4002004:	df002783 	ldbu	fp,158(sp)
 4002008:	d8c02b15 	stw	r3,172(sp)
 400200c:	d8002a15 	stw	zero,168(sp)
 4002010:	d8003215 	stw	zero,200(sp)
 4002014:	003b0706 	br	4000c34 <__alt_mem_onchip_memory+0xfbff8c34>
 4002018:	d8c02e17 	ldw	r3,184(sp)
 400201c:	1cc00017 	ldw	r19,0(r3)
 4002020:	18c00104 	addi	r3,r3,4
 4002024:	d8c02e15 	stw	r3,184(sp)
 4002028:	982dd7fa 	srai	r22,r19,31
 400202c:	b005883a 	mov	r2,r22
 4002030:	003a7706 	br	4000a10 <__alt_mem_onchip_memory+0xfbff8a10>
 4002034:	d8c02e17 	ldw	r3,184(sp)
 4002038:	d9002f17 	ldw	r4,188(sp)
 400203c:	18800017 	ldw	r2,0(r3)
 4002040:	18c00104 	addi	r3,r3,4
 4002044:	d8c02e15 	stw	r3,184(sp)
 4002048:	11000015 	stw	r4,0(r2)
 400204c:	00395406 	br	40005a0 <__alt_mem_onchip_memory+0xfbff85a0>
 4002050:	d9002e17 	ldw	r4,184(sp)
 4002054:	002d883a 	mov	r22,zero
 4002058:	24c00017 	ldw	r19,0(r4)
 400205c:	21000104 	addi	r4,r4,4
 4002060:	d9002e15 	stw	r4,184(sp)
 4002064:	003c0706 	br	4001084 <__alt_mem_onchip_memory+0xfbff9084>
 4002068:	d9402e17 	ldw	r5,184(sp)
 400206c:	d8c02a17 	ldw	r3,168(sp)
 4002070:	002d883a 	mov	r22,zero
 4002074:	28800104 	addi	r2,r5,4
 4002078:	2cc0000b 	ldhu	r19,0(r5)
 400207c:	183dc10e 	bge	r3,zero,4001784 <__alt_mem_onchip_memory+0xfbff9784>
 4002080:	003f7506 	br	4001e58 <__alt_mem_onchip_memory+0xfbff9e58>
 4002084:	04010074 	movhi	r16,1025
 4002088:	843e5004 	addi	r16,r16,-1728
 400208c:	003aa706 	br	4000b2c <__alt_mem_onchip_memory+0xfbff8b2c>
 4002090:	d9002d17 	ldw	r4,180(sp)
 4002094:	d9801e04 	addi	r6,sp,120
 4002098:	b80b883a 	mov	r5,r23
 400209c:	4007ca00 	call	4007ca0 <__sprint_r>
 40020a0:	103a0b1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40020a4:	dc402617 	ldw	r17,152(sp)
 40020a8:	d8c02017 	ldw	r3,128(sp)
 40020ac:	da000404 	addi	r8,sp,16
 40020b0:	003f9c06 	br	4001f24 <__alt_mem_onchip_memory+0xfbff9f24>
 40020b4:	ac400043 	ldbu	r17,1(r21)
 40020b8:	84000814 	ori	r16,r16,32
 40020bc:	ad400044 	addi	r21,r21,1
 40020c0:	8c403fcc 	andi	r17,r17,255
 40020c4:	8c40201c 	xori	r17,r17,128
 40020c8:	8c7fe004 	addi	r17,r17,-128
 40020cc:	00395e06 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 40020d0:	d8c02e15 	stw	r3,184(sp)
 40020d4:	0039883a 	mov	fp,zero
 40020d8:	003e3506 	br	40019b0 <__alt_mem_onchip_memory+0xfbff99b0>
 40020dc:	d9002d17 	ldw	r4,180(sp)
 40020e0:	d9801e04 	addi	r6,sp,120
 40020e4:	b80b883a 	mov	r5,r23
 40020e8:	4007ca00 	call	4007ca0 <__sprint_r>
 40020ec:	1039f81e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40020f0:	d8c02017 	ldw	r3,128(sp)
 40020f4:	da000404 	addi	r8,sp,16
 40020f8:	003cd006 	br	400143c <__alt_mem_onchip_memory+0xfbff943c>
 40020fc:	8009883a 	mov	r4,r16
 4002100:	df003d15 	stw	fp,244(sp)
 4002104:	40004280 	call	4000428 <strlen>
 4002108:	d8802b15 	stw	r2,172(sp)
 400210c:	da003d17 	ldw	r8,244(sp)
 4002110:	103c200e 	bge	r2,zero,4001194 <__alt_mem_onchip_memory+0xfbff9194>
 4002114:	0005883a 	mov	r2,zero
 4002118:	003c1e06 	br	4001194 <__alt_mem_onchip_memory+0xfbff9194>
 400211c:	d9002d17 	ldw	r4,180(sp)
 4002120:	d9801e04 	addi	r6,sp,120
 4002124:	b80b883a 	mov	r5,r23
 4002128:	4007ca00 	call	4007ca0 <__sprint_r>
 400212c:	1039e81e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4002130:	d8c02017 	ldw	r3,128(sp)
 4002134:	d8801f17 	ldw	r2,124(sp)
 4002138:	da000404 	addi	r8,sp,16
 400213c:	d9403317 	ldw	r5,204(sp)
 4002140:	10800044 	addi	r2,r2,1
 4002144:	44000015 	stw	r16,0(r8)
 4002148:	28c7883a 	add	r3,r5,r3
 400214c:	003b5b06 	br	4000ebc <__alt_mem_onchip_memory+0xfbff8ebc>
 4002150:	01010074 	movhi	r4,1025
 4002154:	213e6484 	addi	r4,r4,-1646
 4002158:	d9003515 	stw	r4,212(sp)
 400215c:	003af206 	br	4000d28 <__alt_mem_onchip_memory+0xfbff8d28>
 4002160:	013fffc4 	movi	r4,-1
 4002164:	003a0806 	br	4000988 <__alt_mem_onchip_memory+0xfbff8988>
 4002168:	0023883a 	mov	r17,zero
 400216c:	003d9d06 	br	40017e4 <__alt_mem_onchip_memory+0xfbff97e4>
 4002170:	d9002d17 	ldw	r4,180(sp)
 4002174:	d9801e04 	addi	r6,sp,120
 4002178:	b80b883a 	mov	r5,r23
 400217c:	4007ca00 	call	4007ca0 <__sprint_r>
 4002180:	1039d31e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 4002184:	d8c02017 	ldw	r3,128(sp)
 4002188:	da000404 	addi	r8,sp,16
 400218c:	003d9406 	br	40017e0 <__alt_mem_onchip_memory+0xfbff97e0>
 4002190:	01010074 	movhi	r4,1025
 4002194:	213e6084 	addi	r4,r4,-1662
 4002198:	d9002c15 	stw	r4,176(sp)
 400219c:	d9002c17 	ldw	r4,176(sp)
 40021a0:	1c47883a 	add	r3,r3,r17
 40021a4:	10800044 	addi	r2,r2,1
 40021a8:	41000015 	stw	r4,0(r8)
 40021ac:	44400115 	stw	r17,4(r8)
 40021b0:	d8c02015 	stw	r3,128(sp)
 40021b4:	d8801f15 	stw	r2,124(sp)
 40021b8:	010001c4 	movi	r4,7
 40021bc:	20bfd716 	blt	r4,r2,400211c <__alt_mem_onchip_memory+0xfbffa11c>
 40021c0:	42000204 	addi	r8,r8,8
 40021c4:	003fdd06 	br	400213c <__alt_mem_onchip_memory+0xfbffa13c>
 40021c8:	d9002d17 	ldw	r4,180(sp)
 40021cc:	d9801e04 	addi	r6,sp,120
 40021d0:	b80b883a 	mov	r5,r23
 40021d4:	4007ca00 	call	4007ca0 <__sprint_r>
 40021d8:	1039bd1e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40021dc:	d8802617 	ldw	r2,152(sp)
 40021e0:	d8c02017 	ldw	r3,128(sp)
 40021e4:	da000404 	addi	r8,sp,16
 40021e8:	003e1006 	br	4001a2c <__alt_mem_onchip_memory+0xfbff9a2c>
 40021ec:	00800044 	movi	r2,1
 40021f0:	10803fcc 	andi	r2,r2,255
 40021f4:	00c00044 	movi	r3,1
 40021f8:	10fa0d26 	beq	r2,r3,4000a30 <__alt_mem_onchip_memory+0xfbff8a30>
 40021fc:	00c00084 	movi	r3,2
 4002200:	10fbaf26 	beq	r2,r3,40010c0 <__alt_mem_onchip_memory+0xfbff90c0>
 4002204:	003a6d06 	br	4000bbc <__alt_mem_onchip_memory+0xfbff8bbc>
 4002208:	01010074 	movhi	r4,1025
 400220c:	213e6484 	addi	r4,r4,-1646
 4002210:	d9003515 	stw	r4,212(sp)
 4002214:	003b5406 	br	4000f68 <__alt_mem_onchip_memory+0xfbff8f68>
 4002218:	d8802a17 	ldw	r2,168(sp)
 400221c:	00c00184 	movi	r3,6
 4002220:	1880012e 	bgeu	r3,r2,4002228 <___vfprintf_internal_r+0x1d68>
 4002224:	1805883a 	mov	r2,r3
 4002228:	d8802b15 	stw	r2,172(sp)
 400222c:	1000ef16 	blt	r2,zero,40025ec <___vfprintf_internal_r+0x212c>
 4002230:	04010074 	movhi	r16,1025
 4002234:	d8802915 	stw	r2,164(sp)
 4002238:	dcc02e15 	stw	r19,184(sp)
 400223c:	d8002a15 	stw	zero,168(sp)
 4002240:	d8003215 	stw	zero,200(sp)
 4002244:	843e5e04 	addi	r16,r16,-1672
 4002248:	0039883a 	mov	fp,zero
 400224c:	003a8006 	br	4000c50 <__alt_mem_onchip_memory+0xfbff8c50>
 4002250:	0021883a 	mov	r16,zero
 4002254:	003e0706 	br	4001a74 <__alt_mem_onchip_memory+0xfbff9a74>
 4002258:	d9002d17 	ldw	r4,180(sp)
 400225c:	d9801e04 	addi	r6,sp,120
 4002260:	b80b883a 	mov	r5,r23
 4002264:	4007ca00 	call	4007ca0 <__sprint_r>
 4002268:	1039991e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 400226c:	d8802617 	ldw	r2,152(sp)
 4002270:	d9403317 	ldw	r5,204(sp)
 4002274:	d8c02017 	ldw	r3,128(sp)
 4002278:	da000404 	addi	r8,sp,16
 400227c:	2885c83a 	sub	r2,r5,r2
 4002280:	003dfb06 	br	4001a70 <__alt_mem_onchip_memory+0xfbff9a70>
 4002284:	9080004c 	andi	r2,r18,1
 4002288:	103e8f1e 	bne	r2,zero,4001cc8 <__alt_mem_onchip_memory+0xfbff9cc8>
 400228c:	d8802117 	ldw	r2,132(sp)
 4002290:	003e9e06 	br	4001d0c <__alt_mem_onchip_memory+0xfbff9d0c>
 4002294:	1025883a 	mov	r18,r2
 4002298:	0039883a 	mov	fp,zero
 400229c:	00800084 	movi	r2,2
 40022a0:	003fd306 	br	40021f0 <__alt_mem_onchip_memory+0xfbffa1f0>
 40022a4:	07000b44 	movi	fp,45
 40022a8:	df002785 	stb	fp,158(sp)
 40022ac:	003a1b06 	br	4000b1c <__alt_mem_onchip_memory+0xfbff8b1c>
 40022b0:	00c00b44 	movi	r3,45
 40022b4:	d8c02785 	stb	r3,158(sp)
 40022b8:	d8802915 	stw	r2,164(sp)
 40022bc:	dc802c17 	ldw	r18,176(sp)
 40022c0:	d8002a15 	stw	zero,168(sp)
 40022c4:	07000b44 	movi	fp,45
 40022c8:	003a5e06 	br	4000c44 <__alt_mem_onchip_memory+0xfbff8c44>
 40022cc:	04010074 	movhi	r16,1025
 40022d0:	843e5304 	addi	r16,r16,-1716
 40022d4:	003f4706 	br	4001ff4 <__alt_mem_onchip_memory+0xfbff9ff4>
 40022d8:	d9002e17 	ldw	r4,184(sp)
 40022dc:	d9402f17 	ldw	r5,188(sp)
 40022e0:	20800017 	ldw	r2,0(r4)
 40022e4:	21000104 	addi	r4,r4,4
 40022e8:	d9002e15 	stw	r4,184(sp)
 40022ec:	11400015 	stw	r5,0(r2)
 40022f0:	0038ab06 	br	40005a0 <__alt_mem_onchip_memory+0xfbff85a0>
 40022f4:	dd802617 	ldw	r22,152(sp)
 40022f8:	00bfff44 	movi	r2,-3
 40022fc:	b0801c16 	blt	r22,r2,4002370 <___vfprintf_internal_r+0x1eb0>
 4002300:	d9402a17 	ldw	r5,168(sp)
 4002304:	2d801a16 	blt	r5,r22,4002370 <___vfprintf_internal_r+0x1eb0>
 4002308:	dd803215 	stw	r22,200(sp)
 400230c:	003e8906 	br	4001d34 <__alt_mem_onchip_memory+0xfbff9d34>
 4002310:	01010074 	movhi	r4,1025
 4002314:	213e6084 	addi	r4,r4,-1662
 4002318:	d9002c15 	stw	r4,176(sp)
 400231c:	003c9106 	br	4001564 <__alt_mem_onchip_memory+0xfbff9564>
 4002320:	e005883a 	mov	r2,fp
 4002324:	003e7906 	br	4001d0c <__alt_mem_onchip_memory+0xfbff9d0c>
 4002328:	d9002a17 	ldw	r4,168(sp)
 400232c:	df002783 	ldbu	fp,158(sp)
 4002330:	dcc02e15 	stw	r19,184(sp)
 4002334:	d9002915 	stw	r4,164(sp)
 4002338:	d9002b15 	stw	r4,172(sp)
 400233c:	d8002a15 	stw	zero,168(sp)
 4002340:	d8003215 	stw	zero,200(sp)
 4002344:	003a3b06 	br	4000c34 <__alt_mem_onchip_memory+0xfbff8c34>
 4002348:	9080004c 	andi	r2,r18,1
 400234c:	0039883a 	mov	fp,zero
 4002350:	10000426 	beq	r2,zero,4002364 <___vfprintf_internal_r+0x1ea4>
 4002354:	00800c04 	movi	r2,48
 4002358:	dc001dc4 	addi	r16,sp,119
 400235c:	d8801dc5 	stb	r2,119(sp)
 4002360:	003b6406 	br	40010f4 <__alt_mem_onchip_memory+0xfbff90f4>
 4002364:	d8002b15 	stw	zero,172(sp)
 4002368:	dc001e04 	addi	r16,sp,120
 400236c:	003a2b06 	br	4000c1c <__alt_mem_onchip_memory+0xfbff8c1c>
 4002370:	8c7fff84 	addi	r17,r17,-2
 4002374:	b5bfffc4 	addi	r22,r22,-1
 4002378:	dd802615 	stw	r22,152(sp)
 400237c:	dc4022c5 	stb	r17,139(sp)
 4002380:	b000bf16 	blt	r22,zero,4002680 <___vfprintf_internal_r+0x21c0>
 4002384:	00800ac4 	movi	r2,43
 4002388:	d8802305 	stb	r2,140(sp)
 400238c:	00800244 	movi	r2,9
 4002390:	15807016 	blt	r2,r22,4002554 <___vfprintf_internal_r+0x2094>
 4002394:	00800c04 	movi	r2,48
 4002398:	b5800c04 	addi	r22,r22,48
 400239c:	d8802345 	stb	r2,141(sp)
 40023a0:	dd802385 	stb	r22,142(sp)
 40023a4:	d88023c4 	addi	r2,sp,143
 40023a8:	df0022c4 	addi	fp,sp,139
 40023ac:	d8c03317 	ldw	r3,204(sp)
 40023b0:	1739c83a 	sub	fp,r2,fp
 40023b4:	d9003317 	ldw	r4,204(sp)
 40023b8:	e0c7883a 	add	r3,fp,r3
 40023bc:	df003a15 	stw	fp,232(sp)
 40023c0:	d8c02b15 	stw	r3,172(sp)
 40023c4:	00800044 	movi	r2,1
 40023c8:	1100b30e 	bge	r2,r4,4002698 <___vfprintf_internal_r+0x21d8>
 40023cc:	d8c02b17 	ldw	r3,172(sp)
 40023d0:	18c00044 	addi	r3,r3,1
 40023d4:	d8c02b15 	stw	r3,172(sp)
 40023d8:	1805883a 	mov	r2,r3
 40023dc:	1800ac16 	blt	r3,zero,4002690 <___vfprintf_internal_r+0x21d0>
 40023e0:	d8003215 	stw	zero,200(sp)
 40023e4:	003e5d06 	br	4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 40023e8:	d9002d17 	ldw	r4,180(sp)
 40023ec:	d9801e04 	addi	r6,sp,120
 40023f0:	b80b883a 	mov	r5,r23
 40023f4:	4007ca00 	call	4007ca0 <__sprint_r>
 40023f8:	1039351e 	bne	r2,zero,40008d0 <__alt_mem_onchip_memory+0xfbff88d0>
 40023fc:	dc402617 	ldw	r17,152(sp)
 4002400:	d8c02017 	ldw	r3,128(sp)
 4002404:	d8801f17 	ldw	r2,124(sp)
 4002408:	da000404 	addi	r8,sp,16
 400240c:	003ed606 	br	4001f68 <__alt_mem_onchip_memory+0xfbff9f68>
 4002410:	182b883a 	mov	r21,r3
 4002414:	d8002a15 	stw	zero,168(sp)
 4002418:	00388c06 	br	400064c <__alt_mem_onchip_memory+0xfbff864c>
 400241c:	d8802a17 	ldw	r2,168(sp)
 4002420:	103e071e 	bne	r2,zero,4001c40 <__alt_mem_onchip_memory+0xfbff9c40>
 4002424:	dc002a15 	stw	r16,168(sp)
 4002428:	003e0506 	br	4001c40 <__alt_mem_onchip_memory+0xfbff9c40>
 400242c:	d9002a17 	ldw	r4,168(sp)
 4002430:	20c00044 	addi	r3,r4,1
 4002434:	003e0f06 	br	4001c74 <__alt_mem_onchip_memory+0xfbff9c74>
 4002438:	01400184 	movi	r5,6
 400243c:	d9402a15 	stw	r5,168(sp)
 4002440:	003dff06 	br	4001c40 <__alt_mem_onchip_memory+0xfbff9c40>
 4002444:	d8802104 	addi	r2,sp,132
 4002448:	d8800315 	stw	r2,12(sp)
 400244c:	d8802504 	addi	r2,sp,148
 4002450:	d8800215 	stw	r2,8(sp)
 4002454:	d8802604 	addi	r2,sp,152
 4002458:	d8800115 	stw	r2,4(sp)
 400245c:	d8802a17 	ldw	r2,168(sp)
 4002460:	d9403617 	ldw	r5,216(sp)
 4002464:	d9002d17 	ldw	r4,180(sp)
 4002468:	d8800015 	stw	r2,0(sp)
 400246c:	01c000c4 	movi	r7,3
 4002470:	980d883a 	mov	r6,r19
 4002474:	da003d15 	stw	r8,244(sp)
 4002478:	4002bf00 	call	4002bf0 <_dtoa_r>
 400247c:	d8c02a17 	ldw	r3,168(sp)
 4002480:	da003d17 	ldw	r8,244(sp)
 4002484:	1021883a 	mov	r16,r2
 4002488:	10f9883a 	add	fp,r2,r3
 400248c:	81000007 	ldb	r4,0(r16)
 4002490:	00800c04 	movi	r2,48
 4002494:	20805e26 	beq	r4,r2,4002610 <___vfprintf_internal_r+0x2150>
 4002498:	d8c02617 	ldw	r3,152(sp)
 400249c:	e0f9883a 	add	fp,fp,r3
 40024a0:	003e0a06 	br	4001ccc <__alt_mem_onchip_memory+0xfbff9ccc>
 40024a4:	00c00b44 	movi	r3,45
 40024a8:	24e0003c 	xorhi	r19,r4,32768
 40024ac:	d8c02905 	stb	r3,164(sp)
 40024b0:	003de906 	br	4001c58 <__alt_mem_onchip_memory+0xfbff9c58>
 40024b4:	d8c03217 	ldw	r3,200(sp)
 40024b8:	00c07a0e 	bge	zero,r3,40026a4 <___vfprintf_internal_r+0x21e4>
 40024bc:	00800044 	movi	r2,1
 40024c0:	d9003317 	ldw	r4,204(sp)
 40024c4:	1105883a 	add	r2,r2,r4
 40024c8:	d8802b15 	stw	r2,172(sp)
 40024cc:	10004e16 	blt	r2,zero,4002608 <___vfprintf_internal_r+0x2148>
 40024d0:	044019c4 	movi	r17,103
 40024d4:	003e2106 	br	4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 40024d8:	d9002a17 	ldw	r4,168(sp)
 40024dc:	d8802104 	addi	r2,sp,132
 40024e0:	d8800315 	stw	r2,12(sp)
 40024e4:	d9000015 	stw	r4,0(sp)
 40024e8:	d8802504 	addi	r2,sp,148
 40024ec:	d9403617 	ldw	r5,216(sp)
 40024f0:	d9002d17 	ldw	r4,180(sp)
 40024f4:	d8800215 	stw	r2,8(sp)
 40024f8:	d8802604 	addi	r2,sp,152
 40024fc:	d8800115 	stw	r2,4(sp)
 4002500:	01c000c4 	movi	r7,3
 4002504:	980d883a 	mov	r6,r19
 4002508:	da003d15 	stw	r8,244(sp)
 400250c:	4002bf00 	call	4002bf0 <_dtoa_r>
 4002510:	d8c02a17 	ldw	r3,168(sp)
 4002514:	da003d17 	ldw	r8,244(sp)
 4002518:	1021883a 	mov	r16,r2
 400251c:	00801184 	movi	r2,70
 4002520:	80f9883a 	add	fp,r16,r3
 4002524:	88bfd926 	beq	r17,r2,400248c <__alt_mem_onchip_memory+0xfbffa48c>
 4002528:	003de806 	br	4001ccc <__alt_mem_onchip_memory+0xfbff9ccc>
 400252c:	d9002a17 	ldw	r4,168(sp)
 4002530:	00c04d0e 	bge	zero,r3,4002668 <___vfprintf_internal_r+0x21a8>
 4002534:	2000441e 	bne	r4,zero,4002648 <___vfprintf_internal_r+0x2188>
 4002538:	9480004c 	andi	r18,r18,1
 400253c:	9000421e 	bne	r18,zero,4002648 <___vfprintf_internal_r+0x2188>
 4002540:	1805883a 	mov	r2,r3
 4002544:	18006f16 	blt	r3,zero,4002704 <___vfprintf_internal_r+0x2244>
 4002548:	d8c03217 	ldw	r3,200(sp)
 400254c:	d8c02b15 	stw	r3,172(sp)
 4002550:	003e0206 	br	4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 4002554:	df0022c4 	addi	fp,sp,139
 4002558:	dc002a15 	stw	r16,168(sp)
 400255c:	4027883a 	mov	r19,r8
 4002560:	e021883a 	mov	r16,fp
 4002564:	b009883a 	mov	r4,r22
 4002568:	01400284 	movi	r5,10
 400256c:	400a82c0 	call	400a82c <__modsi3>
 4002570:	10800c04 	addi	r2,r2,48
 4002574:	843fffc4 	addi	r16,r16,-1
 4002578:	b009883a 	mov	r4,r22
 400257c:	01400284 	movi	r5,10
 4002580:	80800005 	stb	r2,0(r16)
 4002584:	400a7a80 	call	400a7a8 <__divsi3>
 4002588:	102d883a 	mov	r22,r2
 400258c:	00800244 	movi	r2,9
 4002590:	15bff416 	blt	r2,r22,4002564 <__alt_mem_onchip_memory+0xfbffa564>
 4002594:	9811883a 	mov	r8,r19
 4002598:	b0800c04 	addi	r2,r22,48
 400259c:	8027883a 	mov	r19,r16
 40025a0:	997fffc4 	addi	r5,r19,-1
 40025a4:	98bfffc5 	stb	r2,-1(r19)
 40025a8:	dc002a17 	ldw	r16,168(sp)
 40025ac:	2f006d2e 	bgeu	r5,fp,4002764 <___vfprintf_internal_r+0x22a4>
 40025b0:	d9c02384 	addi	r7,sp,142
 40025b4:	3ccfc83a 	sub	r7,r7,r19
 40025b8:	d9002344 	addi	r4,sp,141
 40025bc:	e1cf883a 	add	r7,fp,r7
 40025c0:	00000106 	br	40025c8 <___vfprintf_internal_r+0x2108>
 40025c4:	28800003 	ldbu	r2,0(r5)
 40025c8:	20800005 	stb	r2,0(r4)
 40025cc:	21000044 	addi	r4,r4,1
 40025d0:	29400044 	addi	r5,r5,1
 40025d4:	393ffb1e 	bne	r7,r4,40025c4 <__alt_mem_onchip_memory+0xfbffa5c4>
 40025d8:	d8802304 	addi	r2,sp,140
 40025dc:	14c5c83a 	sub	r2,r2,r19
 40025e0:	d8c02344 	addi	r3,sp,141
 40025e4:	1885883a 	add	r2,r3,r2
 40025e8:	003f7006 	br	40023ac <__alt_mem_onchip_memory+0xfbffa3ac>
 40025ec:	0005883a 	mov	r2,zero
 40025f0:	003f0f06 	br	4002230 <__alt_mem_onchip_memory+0xfbffa230>
 40025f4:	d8c03217 	ldw	r3,200(sp)
 40025f8:	18c00044 	addi	r3,r3,1
 40025fc:	d8c02b15 	stw	r3,172(sp)
 4002600:	1805883a 	mov	r2,r3
 4002604:	183fb20e 	bge	r3,zero,40024d0 <__alt_mem_onchip_memory+0xfbffa4d0>
 4002608:	0005883a 	mov	r2,zero
 400260c:	003fb006 	br	40024d0 <__alt_mem_onchip_memory+0xfbffa4d0>
 4002610:	d9003617 	ldw	r4,216(sp)
 4002614:	000d883a 	mov	r6,zero
 4002618:	000f883a 	mov	r7,zero
 400261c:	980b883a 	mov	r5,r19
 4002620:	d8c03c15 	stw	r3,240(sp)
 4002624:	da003d15 	stw	r8,244(sp)
 4002628:	400bc000 	call	400bc00 <__eqdf2>
 400262c:	d8c03c17 	ldw	r3,240(sp)
 4002630:	da003d17 	ldw	r8,244(sp)
 4002634:	103f9826 	beq	r2,zero,4002498 <__alt_mem_onchip_memory+0xfbffa498>
 4002638:	00800044 	movi	r2,1
 400263c:	10c7c83a 	sub	r3,r2,r3
 4002640:	d8c02615 	stw	r3,152(sp)
 4002644:	003f9506 	br	400249c <__alt_mem_onchip_memory+0xfbffa49c>
 4002648:	d9002a17 	ldw	r4,168(sp)
 400264c:	d8c03217 	ldw	r3,200(sp)
 4002650:	20800044 	addi	r2,r4,1
 4002654:	1885883a 	add	r2,r3,r2
 4002658:	d8802b15 	stw	r2,172(sp)
 400265c:	103dbf0e 	bge	r2,zero,4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 4002660:	0005883a 	mov	r2,zero
 4002664:	003dbd06 	br	4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 4002668:	2000201e 	bne	r4,zero,40026ec <___vfprintf_internal_r+0x222c>
 400266c:	9480004c 	andi	r18,r18,1
 4002670:	90001e1e 	bne	r18,zero,40026ec <___vfprintf_internal_r+0x222c>
 4002674:	00800044 	movi	r2,1
 4002678:	d8802b15 	stw	r2,172(sp)
 400267c:	003db706 	br	4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 4002680:	00800b44 	movi	r2,45
 4002684:	05adc83a 	sub	r22,zero,r22
 4002688:	d8802305 	stb	r2,140(sp)
 400268c:	003f3f06 	br	400238c <__alt_mem_onchip_memory+0xfbffa38c>
 4002690:	0005883a 	mov	r2,zero
 4002694:	003f5206 	br	40023e0 <__alt_mem_onchip_memory+0xfbffa3e0>
 4002698:	90a4703a 	and	r18,r18,r2
 400269c:	903f4e26 	beq	r18,zero,40023d8 <__alt_mem_onchip_memory+0xfbffa3d8>
 40026a0:	003f4a06 	br	40023cc <__alt_mem_onchip_memory+0xfbffa3cc>
 40026a4:	00800084 	movi	r2,2
 40026a8:	10c5c83a 	sub	r2,r2,r3
 40026ac:	003f8406 	br	40024c0 <__alt_mem_onchip_memory+0xfbffa4c0>
 40026b0:	d9402e17 	ldw	r5,184(sp)
 40026b4:	d9002e17 	ldw	r4,184(sp)
 40026b8:	ac400043 	ldbu	r17,1(r21)
 40026bc:	29400017 	ldw	r5,0(r5)
 40026c0:	20800104 	addi	r2,r4,4
 40026c4:	d8802e15 	stw	r2,184(sp)
 40026c8:	d9402a15 	stw	r5,168(sp)
 40026cc:	182b883a 	mov	r21,r3
 40026d0:	283e7b0e 	bge	r5,zero,40020c0 <__alt_mem_onchip_memory+0xfbffa0c0>
 40026d4:	8c403fcc 	andi	r17,r17,255
 40026d8:	017fffc4 	movi	r5,-1
 40026dc:	8c40201c 	xori	r17,r17,128
 40026e0:	d9402a15 	stw	r5,168(sp)
 40026e4:	8c7fe004 	addi	r17,r17,-128
 40026e8:	0037d706 	br	4000648 <__alt_mem_onchip_memory+0xfbff8648>
 40026ec:	d8c02a17 	ldw	r3,168(sp)
 40026f0:	18c00084 	addi	r3,r3,2
 40026f4:	d8c02b15 	stw	r3,172(sp)
 40026f8:	1805883a 	mov	r2,r3
 40026fc:	183d970e 	bge	r3,zero,4001d5c <__alt_mem_onchip_memory+0xfbff9d5c>
 4002700:	003fd706 	br	4002660 <__alt_mem_onchip_memory+0xfbffa660>
 4002704:	0005883a 	mov	r2,zero
 4002708:	003f8f06 	br	4002548 <__alt_mem_onchip_memory+0xfbffa548>
 400270c:	9080004c 	andi	r2,r18,1
 4002710:	103f821e 	bne	r2,zero,400251c <__alt_mem_onchip_memory+0xfbffa51c>
 4002714:	d8802117 	ldw	r2,132(sp)
 4002718:	1405c83a 	sub	r2,r2,r16
 400271c:	d8803315 	stw	r2,204(sp)
 4002720:	b47ef426 	beq	r22,r17,40022f4 <__alt_mem_onchip_memory+0xfbffa2f4>
 4002724:	dd802617 	ldw	r22,152(sp)
 4002728:	003f1206 	br	4002374 <__alt_mem_onchip_memory+0xfbffa374>
 400272c:	d8c02b03 	ldbu	r3,172(sp)
 4002730:	d8c02785 	stb	r3,158(sp)
 4002734:	0038df06 	br	4000ab4 <__alt_mem_onchip_memory+0xfbff8ab4>
 4002738:	d8c02b03 	ldbu	r3,172(sp)
 400273c:	d8c02785 	stb	r3,158(sp)
 4002740:	0038aa06 	br	40009ec <__alt_mem_onchip_memory+0xfbff89ec>
 4002744:	d8c02b03 	ldbu	r3,172(sp)
 4002748:	d8c02785 	stb	r3,158(sp)
 400274c:	003a4306 	br	400105c <__alt_mem_onchip_memory+0xfbff905c>
 4002750:	d8c02b03 	ldbu	r3,172(sp)
 4002754:	d8c02785 	stb	r3,158(sp)
 4002758:	003af506 	br	4001330 <__alt_mem_onchip_memory+0xfbff9330>
 400275c:	0005883a 	mov	r2,zero
 4002760:	003d7b06 	br	4001d50 <__alt_mem_onchip_memory+0xfbff9d50>
 4002764:	d8802344 	addi	r2,sp,141
 4002768:	003f1006 	br	40023ac <__alt_mem_onchip_memory+0xfbffa3ac>
 400276c:	d8c02b03 	ldbu	r3,172(sp)
 4002770:	d8c02785 	stb	r3,158(sp)
 4002774:	0038fd06 	br	4000b6c <__alt_mem_onchip_memory+0xfbff8b6c>
 4002778:	d8c02b03 	ldbu	r3,172(sp)
 400277c:	d8c02785 	stb	r3,158(sp)
 4002780:	003a9706 	br	40011e0 <__alt_mem_onchip_memory+0xfbff91e0>
 4002784:	d8c02b03 	ldbu	r3,172(sp)
 4002788:	d8c02785 	stb	r3,158(sp)
 400278c:	003a1806 	br	4000ff0 <__alt_mem_onchip_memory+0xfbff8ff0>
 4002790:	d8c02b03 	ldbu	r3,172(sp)
 4002794:	d8c02785 	stb	r3,158(sp)
 4002798:	003abe06 	br	4001294 <__alt_mem_onchip_memory+0xfbff9294>

0400279c <__vfprintf_internal>:
 400279c:	00810074 	movhi	r2,1025
 40027a0:	1085b904 	addi	r2,r2,5860
 40027a4:	300f883a 	mov	r7,r6
 40027a8:	280d883a 	mov	r6,r5
 40027ac:	200b883a 	mov	r5,r4
 40027b0:	11000017 	ldw	r4,0(r2)
 40027b4:	40004c01 	jmpi	40004c0 <___vfprintf_internal_r>

040027b8 <__sbprintf>:
 40027b8:	2880030b 	ldhu	r2,12(r5)
 40027bc:	2ac01917 	ldw	r11,100(r5)
 40027c0:	2a80038b 	ldhu	r10,14(r5)
 40027c4:	2a400717 	ldw	r9,28(r5)
 40027c8:	2a000917 	ldw	r8,36(r5)
 40027cc:	defee204 	addi	sp,sp,-1144
 40027d0:	00c10004 	movi	r3,1024
 40027d4:	dc011a15 	stw	r16,1128(sp)
 40027d8:	10bfff4c 	andi	r2,r2,65533
 40027dc:	2821883a 	mov	r16,r5
 40027e0:	d8cb883a 	add	r5,sp,r3
 40027e4:	dc811c15 	stw	r18,1136(sp)
 40027e8:	dc411b15 	stw	r17,1132(sp)
 40027ec:	dfc11d15 	stw	ra,1140(sp)
 40027f0:	2025883a 	mov	r18,r4
 40027f4:	d881030d 	sth	r2,1036(sp)
 40027f8:	dac11915 	stw	r11,1124(sp)
 40027fc:	da81038d 	sth	r10,1038(sp)
 4002800:	da410715 	stw	r9,1052(sp)
 4002804:	da010915 	stw	r8,1060(sp)
 4002808:	dec10015 	stw	sp,1024(sp)
 400280c:	dec10415 	stw	sp,1040(sp)
 4002810:	d8c10215 	stw	r3,1032(sp)
 4002814:	d8c10515 	stw	r3,1044(sp)
 4002818:	d8010615 	stw	zero,1048(sp)
 400281c:	40004c00 	call	40004c0 <___vfprintf_internal_r>
 4002820:	1023883a 	mov	r17,r2
 4002824:	10000416 	blt	r2,zero,4002838 <__sbprintf+0x80>
 4002828:	d9410004 	addi	r5,sp,1024
 400282c:	9009883a 	mov	r4,r18
 4002830:	40044940 	call	4004494 <_fflush_r>
 4002834:	10000d1e 	bne	r2,zero,400286c <__sbprintf+0xb4>
 4002838:	d881030b 	ldhu	r2,1036(sp)
 400283c:	1080100c 	andi	r2,r2,64
 4002840:	10000326 	beq	r2,zero,4002850 <__sbprintf+0x98>
 4002844:	8080030b 	ldhu	r2,12(r16)
 4002848:	10801014 	ori	r2,r2,64
 400284c:	8080030d 	sth	r2,12(r16)
 4002850:	8805883a 	mov	r2,r17
 4002854:	dfc11d17 	ldw	ra,1140(sp)
 4002858:	dc811c17 	ldw	r18,1136(sp)
 400285c:	dc411b17 	ldw	r17,1132(sp)
 4002860:	dc011a17 	ldw	r16,1128(sp)
 4002864:	dec11e04 	addi	sp,sp,1144
 4002868:	f800283a 	ret
 400286c:	047fffc4 	movi	r17,-1
 4002870:	003ff106 	br	4002838 <__alt_mem_onchip_memory+0xfbffa838>

04002874 <__swsetup_r>:
 4002874:	00810074 	movhi	r2,1025
 4002878:	defffd04 	addi	sp,sp,-12
 400287c:	1085b904 	addi	r2,r2,5860
 4002880:	dc400115 	stw	r17,4(sp)
 4002884:	2023883a 	mov	r17,r4
 4002888:	11000017 	ldw	r4,0(r2)
 400288c:	dc000015 	stw	r16,0(sp)
 4002890:	dfc00215 	stw	ra,8(sp)
 4002894:	2821883a 	mov	r16,r5
 4002898:	20000226 	beq	r4,zero,40028a4 <__swsetup_r+0x30>
 400289c:	20800e17 	ldw	r2,56(r4)
 40028a0:	10003126 	beq	r2,zero,4002968 <__swsetup_r+0xf4>
 40028a4:	8080030b 	ldhu	r2,12(r16)
 40028a8:	10c0020c 	andi	r3,r2,8
 40028ac:	1009883a 	mov	r4,r2
 40028b0:	18000f26 	beq	r3,zero,40028f0 <__swsetup_r+0x7c>
 40028b4:	80c00417 	ldw	r3,16(r16)
 40028b8:	18001526 	beq	r3,zero,4002910 <__swsetup_r+0x9c>
 40028bc:	1100004c 	andi	r4,r2,1
 40028c0:	20001c1e 	bne	r4,zero,4002934 <__swsetup_r+0xc0>
 40028c4:	1080008c 	andi	r2,r2,2
 40028c8:	1000291e 	bne	r2,zero,4002970 <__swsetup_r+0xfc>
 40028cc:	80800517 	ldw	r2,20(r16)
 40028d0:	80800215 	stw	r2,8(r16)
 40028d4:	18001c26 	beq	r3,zero,4002948 <__swsetup_r+0xd4>
 40028d8:	0005883a 	mov	r2,zero
 40028dc:	dfc00217 	ldw	ra,8(sp)
 40028e0:	dc400117 	ldw	r17,4(sp)
 40028e4:	dc000017 	ldw	r16,0(sp)
 40028e8:	dec00304 	addi	sp,sp,12
 40028ec:	f800283a 	ret
 40028f0:	2080040c 	andi	r2,r4,16
 40028f4:	10002e26 	beq	r2,zero,40029b0 <__swsetup_r+0x13c>
 40028f8:	2080010c 	andi	r2,r4,4
 40028fc:	10001e1e 	bne	r2,zero,4002978 <__swsetup_r+0x104>
 4002900:	80c00417 	ldw	r3,16(r16)
 4002904:	20800214 	ori	r2,r4,8
 4002908:	8080030d 	sth	r2,12(r16)
 400290c:	183feb1e 	bne	r3,zero,40028bc <__alt_mem_onchip_memory+0xfbffa8bc>
 4002910:	1100a00c 	andi	r4,r2,640
 4002914:	01408004 	movi	r5,512
 4002918:	217fe826 	beq	r4,r5,40028bc <__alt_mem_onchip_memory+0xfbffa8bc>
 400291c:	800b883a 	mov	r5,r16
 4002920:	8809883a 	mov	r4,r17
 4002924:	40054300 	call	4005430 <__smakebuf_r>
 4002928:	8080030b 	ldhu	r2,12(r16)
 400292c:	80c00417 	ldw	r3,16(r16)
 4002930:	003fe206 	br	40028bc <__alt_mem_onchip_memory+0xfbffa8bc>
 4002934:	80800517 	ldw	r2,20(r16)
 4002938:	80000215 	stw	zero,8(r16)
 400293c:	0085c83a 	sub	r2,zero,r2
 4002940:	80800615 	stw	r2,24(r16)
 4002944:	183fe41e 	bne	r3,zero,40028d8 <__alt_mem_onchip_memory+0xfbffa8d8>
 4002948:	80c0030b 	ldhu	r3,12(r16)
 400294c:	0005883a 	mov	r2,zero
 4002950:	1900200c 	andi	r4,r3,128
 4002954:	203fe126 	beq	r4,zero,40028dc <__alt_mem_onchip_memory+0xfbffa8dc>
 4002958:	18c01014 	ori	r3,r3,64
 400295c:	80c0030d 	sth	r3,12(r16)
 4002960:	00bfffc4 	movi	r2,-1
 4002964:	003fdd06 	br	40028dc <__alt_mem_onchip_memory+0xfbffa8dc>
 4002968:	40048800 	call	4004880 <__sinit>
 400296c:	003fcd06 	br	40028a4 <__alt_mem_onchip_memory+0xfbffa8a4>
 4002970:	0005883a 	mov	r2,zero
 4002974:	003fd606 	br	40028d0 <__alt_mem_onchip_memory+0xfbffa8d0>
 4002978:	81400c17 	ldw	r5,48(r16)
 400297c:	28000626 	beq	r5,zero,4002998 <__swsetup_r+0x124>
 4002980:	80801004 	addi	r2,r16,64
 4002984:	28800326 	beq	r5,r2,4002994 <__swsetup_r+0x120>
 4002988:	8809883a 	mov	r4,r17
 400298c:	40049f40 	call	40049f4 <_free_r>
 4002990:	8100030b 	ldhu	r4,12(r16)
 4002994:	80000c15 	stw	zero,48(r16)
 4002998:	80c00417 	ldw	r3,16(r16)
 400299c:	00bff6c4 	movi	r2,-37
 40029a0:	1108703a 	and	r4,r2,r4
 40029a4:	80000115 	stw	zero,4(r16)
 40029a8:	80c00015 	stw	r3,0(r16)
 40029ac:	003fd506 	br	4002904 <__alt_mem_onchip_memory+0xfbffa904>
 40029b0:	00800244 	movi	r2,9
 40029b4:	88800015 	stw	r2,0(r17)
 40029b8:	20801014 	ori	r2,r4,64
 40029bc:	8080030d 	sth	r2,12(r16)
 40029c0:	00bfffc4 	movi	r2,-1
 40029c4:	003fc506 	br	40028dc <__alt_mem_onchip_memory+0xfbffa8dc>

040029c8 <quorem>:
 40029c8:	defff204 	addi	sp,sp,-56
 40029cc:	ddc00b15 	stw	r23,44(sp)
 40029d0:	20800417 	ldw	r2,16(r4)
 40029d4:	2dc00417 	ldw	r23,16(r5)
 40029d8:	dfc00d15 	stw	ra,52(sp)
 40029dc:	df000c15 	stw	fp,48(sp)
 40029e0:	dd800a15 	stw	r22,40(sp)
 40029e4:	dd400915 	stw	r21,36(sp)
 40029e8:	dd000815 	stw	r20,32(sp)
 40029ec:	dcc00715 	stw	r19,28(sp)
 40029f0:	dc800615 	stw	r18,24(sp)
 40029f4:	dc400515 	stw	r17,20(sp)
 40029f8:	dc000415 	stw	r16,16(sp)
 40029fc:	15c07a16 	blt	r2,r23,4002be8 <quorem+0x220>
 4002a00:	bdffffc4 	addi	r23,r23,-1
 4002a04:	bde9883a 	add	r20,r23,r23
 4002a08:	28c00504 	addi	r3,r5,20
 4002a0c:	a529883a 	add	r20,r20,r20
 4002a10:	1d39883a 	add	fp,r3,r20
 4002a14:	24c00504 	addi	r19,r4,20
 4002a18:	d9400215 	stw	r5,8(sp)
 4002a1c:	9d29883a 	add	r20,r19,r20
 4002a20:	e1400017 	ldw	r5,0(fp)
 4002a24:	d9000015 	stw	r4,0(sp)
 4002a28:	a1000017 	ldw	r4,0(r20)
 4002a2c:	29400044 	addi	r5,r5,1
 4002a30:	d8c00115 	stw	r3,4(sp)
 4002a34:	dd000315 	stw	r20,12(sp)
 4002a38:	400a8a00 	call	400a8a0 <__udivsi3>
 4002a3c:	1025883a 	mov	r18,r2
 4002a40:	10003026 	beq	r2,zero,4002b04 <quorem+0x13c>
 4002a44:	dc400117 	ldw	r17,4(sp)
 4002a48:	9829883a 	mov	r20,r19
 4002a4c:	002d883a 	mov	r22,zero
 4002a50:	0021883a 	mov	r16,zero
 4002a54:	8d400017 	ldw	r21,0(r17)
 4002a58:	900b883a 	mov	r5,r18
 4002a5c:	8c400104 	addi	r17,r17,4
 4002a60:	a93fffcc 	andi	r4,r21,65535
 4002a64:	400a95c0 	call	400a95c <__mulsi3>
 4002a68:	a808d43a 	srli	r4,r21,16
 4002a6c:	900b883a 	mov	r5,r18
 4002a70:	15ad883a 	add	r22,r2,r22
 4002a74:	400a95c0 	call	400a95c <__mulsi3>
 4002a78:	a1000017 	ldw	r4,0(r20)
 4002a7c:	b00cd43a 	srli	r6,r22,16
 4002a80:	b0ffffcc 	andi	r3,r22,65535
 4002a84:	217fffcc 	andi	r5,r4,65535
 4002a88:	2c21883a 	add	r16,r5,r16
 4002a8c:	80c7c83a 	sub	r3,r16,r3
 4002a90:	2008d43a 	srli	r4,r4,16
 4002a94:	1185883a 	add	r2,r2,r6
 4002a98:	1821d43a 	srai	r16,r3,16
 4002a9c:	117fffcc 	andi	r5,r2,65535
 4002aa0:	2149c83a 	sub	r4,r4,r5
 4002aa4:	2421883a 	add	r16,r4,r16
 4002aa8:	8008943a 	slli	r4,r16,16
 4002aac:	18ffffcc 	andi	r3,r3,65535
 4002ab0:	102cd43a 	srli	r22,r2,16
 4002ab4:	20c8b03a 	or	r4,r4,r3
 4002ab8:	a1000015 	stw	r4,0(r20)
 4002abc:	8021d43a 	srai	r16,r16,16
 4002ac0:	a5000104 	addi	r20,r20,4
 4002ac4:	e47fe32e 	bgeu	fp,r17,4002a54 <__alt_mem_onchip_memory+0xfbffaa54>
 4002ac8:	d8c00317 	ldw	r3,12(sp)
 4002acc:	18800017 	ldw	r2,0(r3)
 4002ad0:	10000c1e 	bne	r2,zero,4002b04 <quorem+0x13c>
 4002ad4:	18bfff04 	addi	r2,r3,-4
 4002ad8:	9880082e 	bgeu	r19,r2,4002afc <quorem+0x134>
 4002adc:	18ffff17 	ldw	r3,-4(r3)
 4002ae0:	18000326 	beq	r3,zero,4002af0 <quorem+0x128>
 4002ae4:	00000506 	br	4002afc <quorem+0x134>
 4002ae8:	10c00017 	ldw	r3,0(r2)
 4002aec:	1800031e 	bne	r3,zero,4002afc <quorem+0x134>
 4002af0:	10bfff04 	addi	r2,r2,-4
 4002af4:	bdffffc4 	addi	r23,r23,-1
 4002af8:	98bffb36 	bltu	r19,r2,4002ae8 <__alt_mem_onchip_memory+0xfbffaae8>
 4002afc:	d8c00017 	ldw	r3,0(sp)
 4002b00:	1dc00415 	stw	r23,16(r3)
 4002b04:	d9400217 	ldw	r5,8(sp)
 4002b08:	d9000017 	ldw	r4,0(sp)
 4002b0c:	4006c2c0 	call	4006c2c <__mcmp>
 4002b10:	10002816 	blt	r2,zero,4002bb4 <quorem+0x1ec>
 4002b14:	dc400117 	ldw	r17,4(sp)
 4002b18:	94800044 	addi	r18,r18,1
 4002b1c:	980d883a 	mov	r6,r19
 4002b20:	0007883a 	mov	r3,zero
 4002b24:	31000017 	ldw	r4,0(r6)
 4002b28:	89400017 	ldw	r5,0(r17)
 4002b2c:	31800104 	addi	r6,r6,4
 4002b30:	20bfffcc 	andi	r2,r4,65535
 4002b34:	10c7883a 	add	r3,r2,r3
 4002b38:	28bfffcc 	andi	r2,r5,65535
 4002b3c:	1885c83a 	sub	r2,r3,r2
 4002b40:	280ad43a 	srli	r5,r5,16
 4002b44:	2008d43a 	srli	r4,r4,16
 4002b48:	1007d43a 	srai	r3,r2,16
 4002b4c:	10bfffcc 	andi	r2,r2,65535
 4002b50:	2149c83a 	sub	r4,r4,r5
 4002b54:	20c9883a 	add	r4,r4,r3
 4002b58:	200a943a 	slli	r5,r4,16
 4002b5c:	8c400104 	addi	r17,r17,4
 4002b60:	2007d43a 	srai	r3,r4,16
 4002b64:	2884b03a 	or	r2,r5,r2
 4002b68:	30bfff15 	stw	r2,-4(r6)
 4002b6c:	e47fed2e 	bgeu	fp,r17,4002b24 <__alt_mem_onchip_memory+0xfbffab24>
 4002b70:	bdc5883a 	add	r2,r23,r23
 4002b74:	1085883a 	add	r2,r2,r2
 4002b78:	9887883a 	add	r3,r19,r2
 4002b7c:	18800017 	ldw	r2,0(r3)
 4002b80:	10000c1e 	bne	r2,zero,4002bb4 <quorem+0x1ec>
 4002b84:	18bfff04 	addi	r2,r3,-4
 4002b88:	9880082e 	bgeu	r19,r2,4002bac <quorem+0x1e4>
 4002b8c:	18ffff17 	ldw	r3,-4(r3)
 4002b90:	18000326 	beq	r3,zero,4002ba0 <quorem+0x1d8>
 4002b94:	00000506 	br	4002bac <quorem+0x1e4>
 4002b98:	10c00017 	ldw	r3,0(r2)
 4002b9c:	1800031e 	bne	r3,zero,4002bac <quorem+0x1e4>
 4002ba0:	10bfff04 	addi	r2,r2,-4
 4002ba4:	bdffffc4 	addi	r23,r23,-1
 4002ba8:	98bffb36 	bltu	r19,r2,4002b98 <__alt_mem_onchip_memory+0xfbffab98>
 4002bac:	d8c00017 	ldw	r3,0(sp)
 4002bb0:	1dc00415 	stw	r23,16(r3)
 4002bb4:	9005883a 	mov	r2,r18
 4002bb8:	dfc00d17 	ldw	ra,52(sp)
 4002bbc:	df000c17 	ldw	fp,48(sp)
 4002bc0:	ddc00b17 	ldw	r23,44(sp)
 4002bc4:	dd800a17 	ldw	r22,40(sp)
 4002bc8:	dd400917 	ldw	r21,36(sp)
 4002bcc:	dd000817 	ldw	r20,32(sp)
 4002bd0:	dcc00717 	ldw	r19,28(sp)
 4002bd4:	dc800617 	ldw	r18,24(sp)
 4002bd8:	dc400517 	ldw	r17,20(sp)
 4002bdc:	dc000417 	ldw	r16,16(sp)
 4002be0:	dec00e04 	addi	sp,sp,56
 4002be4:	f800283a 	ret
 4002be8:	0005883a 	mov	r2,zero
 4002bec:	003ff206 	br	4002bb8 <__alt_mem_onchip_memory+0xfbffabb8>

04002bf0 <_dtoa_r>:
 4002bf0:	20801017 	ldw	r2,64(r4)
 4002bf4:	deffde04 	addi	sp,sp,-136
 4002bf8:	df002015 	stw	fp,128(sp)
 4002bfc:	dcc01b15 	stw	r19,108(sp)
 4002c00:	dc801a15 	stw	r18,104(sp)
 4002c04:	dc401915 	stw	r17,100(sp)
 4002c08:	dc001815 	stw	r16,96(sp)
 4002c0c:	dfc02115 	stw	ra,132(sp)
 4002c10:	ddc01f15 	stw	r23,124(sp)
 4002c14:	dd801e15 	stw	r22,120(sp)
 4002c18:	dd401d15 	stw	r21,116(sp)
 4002c1c:	dd001c15 	stw	r20,112(sp)
 4002c20:	d9c00315 	stw	r7,12(sp)
 4002c24:	2039883a 	mov	fp,r4
 4002c28:	3023883a 	mov	r17,r6
 4002c2c:	2825883a 	mov	r18,r5
 4002c30:	dc002417 	ldw	r16,144(sp)
 4002c34:	3027883a 	mov	r19,r6
 4002c38:	10000826 	beq	r2,zero,4002c5c <_dtoa_r+0x6c>
 4002c3c:	21801117 	ldw	r6,68(r4)
 4002c40:	00c00044 	movi	r3,1
 4002c44:	100b883a 	mov	r5,r2
 4002c48:	1986983a 	sll	r3,r3,r6
 4002c4c:	11800115 	stw	r6,4(r2)
 4002c50:	10c00215 	stw	r3,8(r2)
 4002c54:	40063500 	call	4006350 <_Bfree>
 4002c58:	e0001015 	stw	zero,64(fp)
 4002c5c:	88002e16 	blt	r17,zero,4002d18 <_dtoa_r+0x128>
 4002c60:	80000015 	stw	zero,0(r16)
 4002c64:	889ffc2c 	andhi	r2,r17,32752
 4002c68:	00dffc34 	movhi	r3,32752
 4002c6c:	10c01c26 	beq	r2,r3,4002ce0 <_dtoa_r+0xf0>
 4002c70:	000d883a 	mov	r6,zero
 4002c74:	000f883a 	mov	r7,zero
 4002c78:	9009883a 	mov	r4,r18
 4002c7c:	980b883a 	mov	r5,r19
 4002c80:	400bc000 	call	400bc00 <__eqdf2>
 4002c84:	10002b1e 	bne	r2,zero,4002d34 <_dtoa_r+0x144>
 4002c88:	d9c02317 	ldw	r7,140(sp)
 4002c8c:	00800044 	movi	r2,1
 4002c90:	38800015 	stw	r2,0(r7)
 4002c94:	d8802517 	ldw	r2,148(sp)
 4002c98:	10019e26 	beq	r2,zero,4003314 <_dtoa_r+0x724>
 4002c9c:	d8c02517 	ldw	r3,148(sp)
 4002ca0:	00810074 	movhi	r2,1025
 4002ca4:	10be6044 	addi	r2,r2,-1663
 4002ca8:	18800015 	stw	r2,0(r3)
 4002cac:	10bfffc4 	addi	r2,r2,-1
 4002cb0:	dfc02117 	ldw	ra,132(sp)
 4002cb4:	df002017 	ldw	fp,128(sp)
 4002cb8:	ddc01f17 	ldw	r23,124(sp)
 4002cbc:	dd801e17 	ldw	r22,120(sp)
 4002cc0:	dd401d17 	ldw	r21,116(sp)
 4002cc4:	dd001c17 	ldw	r20,112(sp)
 4002cc8:	dcc01b17 	ldw	r19,108(sp)
 4002ccc:	dc801a17 	ldw	r18,104(sp)
 4002cd0:	dc401917 	ldw	r17,100(sp)
 4002cd4:	dc001817 	ldw	r16,96(sp)
 4002cd8:	dec02204 	addi	sp,sp,136
 4002cdc:	f800283a 	ret
 4002ce0:	d8c02317 	ldw	r3,140(sp)
 4002ce4:	0089c3c4 	movi	r2,9999
 4002ce8:	18800015 	stw	r2,0(r3)
 4002cec:	90017726 	beq	r18,zero,40032cc <_dtoa_r+0x6dc>
 4002cf0:	00810074 	movhi	r2,1025
 4002cf4:	10be6c04 	addi	r2,r2,-1616
 4002cf8:	d9002517 	ldw	r4,148(sp)
 4002cfc:	203fec26 	beq	r4,zero,4002cb0 <__alt_mem_onchip_memory+0xfbffacb0>
 4002d00:	10c000c7 	ldb	r3,3(r2)
 4002d04:	1801781e 	bne	r3,zero,40032e8 <_dtoa_r+0x6f8>
 4002d08:	10c000c4 	addi	r3,r2,3
 4002d0c:	d9802517 	ldw	r6,148(sp)
 4002d10:	30c00015 	stw	r3,0(r6)
 4002d14:	003fe606 	br	4002cb0 <__alt_mem_onchip_memory+0xfbffacb0>
 4002d18:	04e00034 	movhi	r19,32768
 4002d1c:	9cffffc4 	addi	r19,r19,-1
 4002d20:	00800044 	movi	r2,1
 4002d24:	8ce6703a 	and	r19,r17,r19
 4002d28:	80800015 	stw	r2,0(r16)
 4002d2c:	9823883a 	mov	r17,r19
 4002d30:	003fcc06 	br	4002c64 <__alt_mem_onchip_memory+0xfbffac64>
 4002d34:	d8800204 	addi	r2,sp,8
 4002d38:	d8800015 	stw	r2,0(sp)
 4002d3c:	d9c00104 	addi	r7,sp,4
 4002d40:	900b883a 	mov	r5,r18
 4002d44:	980d883a 	mov	r6,r19
 4002d48:	e009883a 	mov	r4,fp
 4002d4c:	8820d53a 	srli	r16,r17,20
 4002d50:	4006ff80 	call	4006ff8 <__d2b>
 4002d54:	d8800915 	stw	r2,36(sp)
 4002d58:	8001651e 	bne	r16,zero,40032f0 <_dtoa_r+0x700>
 4002d5c:	dd800217 	ldw	r22,8(sp)
 4002d60:	dc000117 	ldw	r16,4(sp)
 4002d64:	00800804 	movi	r2,32
 4002d68:	b421883a 	add	r16,r22,r16
 4002d6c:	80c10c84 	addi	r3,r16,1074
 4002d70:	10c2d10e 	bge	r2,r3,40038b8 <_dtoa_r+0xcc8>
 4002d74:	00801004 	movi	r2,64
 4002d78:	81010484 	addi	r4,r16,1042
 4002d7c:	10c7c83a 	sub	r3,r2,r3
 4002d80:	9108d83a 	srl	r4,r18,r4
 4002d84:	88e2983a 	sll	r17,r17,r3
 4002d88:	2448b03a 	or	r4,r4,r17
 4002d8c:	400d11c0 	call	400d11c <__floatunsidf>
 4002d90:	017f8434 	movhi	r5,65040
 4002d94:	01800044 	movi	r6,1
 4002d98:	1009883a 	mov	r4,r2
 4002d9c:	194b883a 	add	r5,r3,r5
 4002da0:	843fffc4 	addi	r16,r16,-1
 4002da4:	d9801115 	stw	r6,68(sp)
 4002da8:	000d883a 	mov	r6,zero
 4002dac:	01cffe34 	movhi	r7,16376
 4002db0:	400c6c40 	call	400c6c4 <__subdf3>
 4002db4:	0198dbf4 	movhi	r6,25455
 4002db8:	01cff4f4 	movhi	r7,16339
 4002dbc:	3190d844 	addi	r6,r6,17249
 4002dc0:	39e1e9c4 	addi	r7,r7,-30809
 4002dc4:	1009883a 	mov	r4,r2
 4002dc8:	180b883a 	mov	r5,r3
 4002dcc:	400be580 	call	400be58 <__muldf3>
 4002dd0:	01a2d874 	movhi	r6,35681
 4002dd4:	01cff1f4 	movhi	r7,16327
 4002dd8:	31b22cc4 	addi	r6,r6,-14157
 4002ddc:	39e28a04 	addi	r7,r7,-30168
 4002de0:	180b883a 	mov	r5,r3
 4002de4:	1009883a 	mov	r4,r2
 4002de8:	400a9840 	call	400a984 <__adddf3>
 4002dec:	8009883a 	mov	r4,r16
 4002df0:	1029883a 	mov	r20,r2
 4002df4:	1823883a 	mov	r17,r3
 4002df8:	400d0400 	call	400d040 <__floatsidf>
 4002dfc:	019427f4 	movhi	r6,20639
 4002e00:	01cff4f4 	movhi	r7,16339
 4002e04:	319e7ec4 	addi	r6,r6,31227
 4002e08:	39d104c4 	addi	r7,r7,17427
 4002e0c:	1009883a 	mov	r4,r2
 4002e10:	180b883a 	mov	r5,r3
 4002e14:	400be580 	call	400be58 <__muldf3>
 4002e18:	100d883a 	mov	r6,r2
 4002e1c:	180f883a 	mov	r7,r3
 4002e20:	a009883a 	mov	r4,r20
 4002e24:	880b883a 	mov	r5,r17
 4002e28:	400a9840 	call	400a984 <__adddf3>
 4002e2c:	1009883a 	mov	r4,r2
 4002e30:	180b883a 	mov	r5,r3
 4002e34:	1029883a 	mov	r20,r2
 4002e38:	1823883a 	mov	r17,r3
 4002e3c:	400cfc00 	call	400cfc0 <__fixdfsi>
 4002e40:	000d883a 	mov	r6,zero
 4002e44:	000f883a 	mov	r7,zero
 4002e48:	a009883a 	mov	r4,r20
 4002e4c:	880b883a 	mov	r5,r17
 4002e50:	d8800515 	stw	r2,20(sp)
 4002e54:	400bd640 	call	400bd64 <__ledf2>
 4002e58:	10028716 	blt	r2,zero,4003878 <_dtoa_r+0xc88>
 4002e5c:	d8c00517 	ldw	r3,20(sp)
 4002e60:	00800584 	movi	r2,22
 4002e64:	10c27536 	bltu	r2,r3,400383c <_dtoa_r+0xc4c>
 4002e68:	180490fa 	slli	r2,r3,3
 4002e6c:	00c10074 	movhi	r3,1025
 4002e70:	18fe8804 	addi	r3,r3,-1504
 4002e74:	1885883a 	add	r2,r3,r2
 4002e78:	11000017 	ldw	r4,0(r2)
 4002e7c:	11400117 	ldw	r5,4(r2)
 4002e80:	900d883a 	mov	r6,r18
 4002e84:	980f883a 	mov	r7,r19
 4002e88:	400bc880 	call	400bc88 <__gedf2>
 4002e8c:	00828d0e 	bge	zero,r2,40038c4 <_dtoa_r+0xcd4>
 4002e90:	d9000517 	ldw	r4,20(sp)
 4002e94:	d8000e15 	stw	zero,56(sp)
 4002e98:	213fffc4 	addi	r4,r4,-1
 4002e9c:	d9000515 	stw	r4,20(sp)
 4002ea0:	b42dc83a 	sub	r22,r22,r16
 4002ea4:	b5bfffc4 	addi	r22,r22,-1
 4002ea8:	b0026f16 	blt	r22,zero,4003868 <_dtoa_r+0xc78>
 4002eac:	d8000815 	stw	zero,32(sp)
 4002eb0:	d9c00517 	ldw	r7,20(sp)
 4002eb4:	38026416 	blt	r7,zero,4003848 <_dtoa_r+0xc58>
 4002eb8:	b1ed883a 	add	r22,r22,r7
 4002ebc:	d9c00d15 	stw	r7,52(sp)
 4002ec0:	d8000a15 	stw	zero,40(sp)
 4002ec4:	d9800317 	ldw	r6,12(sp)
 4002ec8:	00800244 	movi	r2,9
 4002ecc:	11811436 	bltu	r2,r6,4003320 <_dtoa_r+0x730>
 4002ed0:	00800144 	movi	r2,5
 4002ed4:	1184e10e 	bge	r2,r6,400425c <_dtoa_r+0x166c>
 4002ed8:	31bfff04 	addi	r6,r6,-4
 4002edc:	d9800315 	stw	r6,12(sp)
 4002ee0:	0023883a 	mov	r17,zero
 4002ee4:	d9800317 	ldw	r6,12(sp)
 4002ee8:	008000c4 	movi	r2,3
 4002eec:	30836726 	beq	r6,r2,4003c8c <_dtoa_r+0x109c>
 4002ef0:	1183410e 	bge	r2,r6,4003bf8 <_dtoa_r+0x1008>
 4002ef4:	d9c00317 	ldw	r7,12(sp)
 4002ef8:	00800104 	movi	r2,4
 4002efc:	38827c26 	beq	r7,r2,40038f0 <_dtoa_r+0xd00>
 4002f00:	00800144 	movi	r2,5
 4002f04:	3884c41e 	bne	r7,r2,4004218 <_dtoa_r+0x1628>
 4002f08:	00800044 	movi	r2,1
 4002f0c:	d8800b15 	stw	r2,44(sp)
 4002f10:	d8c00517 	ldw	r3,20(sp)
 4002f14:	d9002217 	ldw	r4,136(sp)
 4002f18:	1907883a 	add	r3,r3,r4
 4002f1c:	19800044 	addi	r6,r3,1
 4002f20:	d8c00c15 	stw	r3,48(sp)
 4002f24:	d9800615 	stw	r6,24(sp)
 4002f28:	0183a40e 	bge	zero,r6,4003dbc <_dtoa_r+0x11cc>
 4002f2c:	d9800617 	ldw	r6,24(sp)
 4002f30:	3021883a 	mov	r16,r6
 4002f34:	e0001115 	stw	zero,68(fp)
 4002f38:	008005c4 	movi	r2,23
 4002f3c:	1184c92e 	bgeu	r2,r6,4004264 <_dtoa_r+0x1674>
 4002f40:	00c00044 	movi	r3,1
 4002f44:	00800104 	movi	r2,4
 4002f48:	1085883a 	add	r2,r2,r2
 4002f4c:	11000504 	addi	r4,r2,20
 4002f50:	180b883a 	mov	r5,r3
 4002f54:	18c00044 	addi	r3,r3,1
 4002f58:	313ffb2e 	bgeu	r6,r4,4002f48 <__alt_mem_onchip_memory+0xfbffaf48>
 4002f5c:	e1401115 	stw	r5,68(fp)
 4002f60:	e009883a 	mov	r4,fp
 4002f64:	40062a80 	call	40062a8 <_Balloc>
 4002f68:	d8800715 	stw	r2,28(sp)
 4002f6c:	e0801015 	stw	r2,64(fp)
 4002f70:	00800384 	movi	r2,14
 4002f74:	1400f736 	bltu	r2,r16,4003354 <_dtoa_r+0x764>
 4002f78:	8800f626 	beq	r17,zero,4003354 <_dtoa_r+0x764>
 4002f7c:	d9c00517 	ldw	r7,20(sp)
 4002f80:	01c39a0e 	bge	zero,r7,4003dec <_dtoa_r+0x11fc>
 4002f84:	388003cc 	andi	r2,r7,15
 4002f88:	100490fa 	slli	r2,r2,3
 4002f8c:	382bd13a 	srai	r21,r7,4
 4002f90:	00c10074 	movhi	r3,1025
 4002f94:	18fe8804 	addi	r3,r3,-1504
 4002f98:	1885883a 	add	r2,r3,r2
 4002f9c:	a8c0040c 	andi	r3,r21,16
 4002fa0:	12400017 	ldw	r9,0(r2)
 4002fa4:	12000117 	ldw	r8,4(r2)
 4002fa8:	18037926 	beq	r3,zero,4003d90 <_dtoa_r+0x11a0>
 4002fac:	00810074 	movhi	r2,1025
 4002fb0:	10be7e04 	addi	r2,r2,-1544
 4002fb4:	11800817 	ldw	r6,32(r2)
 4002fb8:	11c00917 	ldw	r7,36(r2)
 4002fbc:	9009883a 	mov	r4,r18
 4002fc0:	980b883a 	mov	r5,r19
 4002fc4:	da001715 	stw	r8,92(sp)
 4002fc8:	da401615 	stw	r9,88(sp)
 4002fcc:	400b2300 	call	400b230 <__divdf3>
 4002fd0:	da001717 	ldw	r8,92(sp)
 4002fd4:	da401617 	ldw	r9,88(sp)
 4002fd8:	ad4003cc 	andi	r21,r21,15
 4002fdc:	040000c4 	movi	r16,3
 4002fe0:	1023883a 	mov	r17,r2
 4002fe4:	1829883a 	mov	r20,r3
 4002fe8:	a8001126 	beq	r21,zero,4003030 <_dtoa_r+0x440>
 4002fec:	05c10074 	movhi	r23,1025
 4002ff0:	bdfe7e04 	addi	r23,r23,-1544
 4002ff4:	4805883a 	mov	r2,r9
 4002ff8:	4007883a 	mov	r3,r8
 4002ffc:	a980004c 	andi	r6,r21,1
 4003000:	1009883a 	mov	r4,r2
 4003004:	a82bd07a 	srai	r21,r21,1
 4003008:	180b883a 	mov	r5,r3
 400300c:	30000426 	beq	r6,zero,4003020 <_dtoa_r+0x430>
 4003010:	b9800017 	ldw	r6,0(r23)
 4003014:	b9c00117 	ldw	r7,4(r23)
 4003018:	84000044 	addi	r16,r16,1
 400301c:	400be580 	call	400be58 <__muldf3>
 4003020:	bdc00204 	addi	r23,r23,8
 4003024:	a83ff51e 	bne	r21,zero,4002ffc <__alt_mem_onchip_memory+0xfbffaffc>
 4003028:	1013883a 	mov	r9,r2
 400302c:	1811883a 	mov	r8,r3
 4003030:	480d883a 	mov	r6,r9
 4003034:	400f883a 	mov	r7,r8
 4003038:	8809883a 	mov	r4,r17
 400303c:	a00b883a 	mov	r5,r20
 4003040:	400b2300 	call	400b230 <__divdf3>
 4003044:	d8800f15 	stw	r2,60(sp)
 4003048:	d8c01015 	stw	r3,64(sp)
 400304c:	d8c00e17 	ldw	r3,56(sp)
 4003050:	18000626 	beq	r3,zero,400306c <_dtoa_r+0x47c>
 4003054:	d9000f17 	ldw	r4,60(sp)
 4003058:	d9401017 	ldw	r5,64(sp)
 400305c:	000d883a 	mov	r6,zero
 4003060:	01cffc34 	movhi	r7,16368
 4003064:	400bd640 	call	400bd64 <__ledf2>
 4003068:	10040b16 	blt	r2,zero,4004098 <_dtoa_r+0x14a8>
 400306c:	8009883a 	mov	r4,r16
 4003070:	400d0400 	call	400d040 <__floatsidf>
 4003074:	d9800f17 	ldw	r6,60(sp)
 4003078:	d9c01017 	ldw	r7,64(sp)
 400307c:	1009883a 	mov	r4,r2
 4003080:	180b883a 	mov	r5,r3
 4003084:	400be580 	call	400be58 <__muldf3>
 4003088:	000d883a 	mov	r6,zero
 400308c:	01d00734 	movhi	r7,16412
 4003090:	1009883a 	mov	r4,r2
 4003094:	180b883a 	mov	r5,r3
 4003098:	400a9840 	call	400a984 <__adddf3>
 400309c:	1021883a 	mov	r16,r2
 40030a0:	d8800617 	ldw	r2,24(sp)
 40030a4:	047f3034 	movhi	r17,64704
 40030a8:	1c63883a 	add	r17,r3,r17
 40030ac:	10031826 	beq	r2,zero,4003d10 <_dtoa_r+0x1120>
 40030b0:	d8c00517 	ldw	r3,20(sp)
 40030b4:	db000617 	ldw	r12,24(sp)
 40030b8:	d8c01315 	stw	r3,76(sp)
 40030bc:	d9000b17 	ldw	r4,44(sp)
 40030c0:	20038f26 	beq	r4,zero,4003f00 <_dtoa_r+0x1310>
 40030c4:	60bfffc4 	addi	r2,r12,-1
 40030c8:	100490fa 	slli	r2,r2,3
 40030cc:	00c10074 	movhi	r3,1025
 40030d0:	18fe8804 	addi	r3,r3,-1504
 40030d4:	1885883a 	add	r2,r3,r2
 40030d8:	11800017 	ldw	r6,0(r2)
 40030dc:	11c00117 	ldw	r7,4(r2)
 40030e0:	d8800717 	ldw	r2,28(sp)
 40030e4:	0009883a 	mov	r4,zero
 40030e8:	014ff834 	movhi	r5,16352
 40030ec:	db001615 	stw	r12,88(sp)
 40030f0:	15c00044 	addi	r23,r2,1
 40030f4:	400b2300 	call	400b230 <__divdf3>
 40030f8:	800d883a 	mov	r6,r16
 40030fc:	880f883a 	mov	r7,r17
 4003100:	1009883a 	mov	r4,r2
 4003104:	180b883a 	mov	r5,r3
 4003108:	400c6c40 	call	400c6c4 <__subdf3>
 400310c:	d9401017 	ldw	r5,64(sp)
 4003110:	d9000f17 	ldw	r4,60(sp)
 4003114:	102b883a 	mov	r21,r2
 4003118:	d8c01215 	stw	r3,72(sp)
 400311c:	400cfc00 	call	400cfc0 <__fixdfsi>
 4003120:	1009883a 	mov	r4,r2
 4003124:	1029883a 	mov	r20,r2
 4003128:	400d0400 	call	400d040 <__floatsidf>
 400312c:	d9000f17 	ldw	r4,60(sp)
 4003130:	d9401017 	ldw	r5,64(sp)
 4003134:	100d883a 	mov	r6,r2
 4003138:	180f883a 	mov	r7,r3
 400313c:	400c6c40 	call	400c6c4 <__subdf3>
 4003140:	1823883a 	mov	r17,r3
 4003144:	d8c00717 	ldw	r3,28(sp)
 4003148:	d9401217 	ldw	r5,72(sp)
 400314c:	a2000c04 	addi	r8,r20,48
 4003150:	1021883a 	mov	r16,r2
 4003154:	1a000005 	stb	r8,0(r3)
 4003158:	800d883a 	mov	r6,r16
 400315c:	880f883a 	mov	r7,r17
 4003160:	a809883a 	mov	r4,r21
 4003164:	4029883a 	mov	r20,r8
 4003168:	400bc880 	call	400bc88 <__gedf2>
 400316c:	00841d16 	blt	zero,r2,40041e4 <_dtoa_r+0x15f4>
 4003170:	800d883a 	mov	r6,r16
 4003174:	880f883a 	mov	r7,r17
 4003178:	0009883a 	mov	r4,zero
 400317c:	014ffc34 	movhi	r5,16368
 4003180:	400c6c40 	call	400c6c4 <__subdf3>
 4003184:	d9401217 	ldw	r5,72(sp)
 4003188:	100d883a 	mov	r6,r2
 400318c:	180f883a 	mov	r7,r3
 4003190:	a809883a 	mov	r4,r21
 4003194:	400bc880 	call	400bc88 <__gedf2>
 4003198:	db001617 	ldw	r12,88(sp)
 400319c:	00840e16 	blt	zero,r2,40041d8 <_dtoa_r+0x15e8>
 40031a0:	00800044 	movi	r2,1
 40031a4:	13006b0e 	bge	r2,r12,4003354 <_dtoa_r+0x764>
 40031a8:	d9000717 	ldw	r4,28(sp)
 40031ac:	dd800f15 	stw	r22,60(sp)
 40031b0:	dcc01015 	stw	r19,64(sp)
 40031b4:	2319883a 	add	r12,r4,r12
 40031b8:	dcc01217 	ldw	r19,72(sp)
 40031bc:	602d883a 	mov	r22,r12
 40031c0:	dc801215 	stw	r18,72(sp)
 40031c4:	b825883a 	mov	r18,r23
 40031c8:	00000906 	br	40031f0 <_dtoa_r+0x600>
 40031cc:	400c6c40 	call	400c6c4 <__subdf3>
 40031d0:	a80d883a 	mov	r6,r21
 40031d4:	980f883a 	mov	r7,r19
 40031d8:	1009883a 	mov	r4,r2
 40031dc:	180b883a 	mov	r5,r3
 40031e0:	400bd640 	call	400bd64 <__ledf2>
 40031e4:	1003e816 	blt	r2,zero,4004188 <_dtoa_r+0x1598>
 40031e8:	b825883a 	mov	r18,r23
 40031ec:	bd83e926 	beq	r23,r22,4004194 <_dtoa_r+0x15a4>
 40031f0:	a809883a 	mov	r4,r21
 40031f4:	980b883a 	mov	r5,r19
 40031f8:	000d883a 	mov	r6,zero
 40031fc:	01d00934 	movhi	r7,16420
 4003200:	400be580 	call	400be58 <__muldf3>
 4003204:	000d883a 	mov	r6,zero
 4003208:	01d00934 	movhi	r7,16420
 400320c:	8009883a 	mov	r4,r16
 4003210:	880b883a 	mov	r5,r17
 4003214:	102b883a 	mov	r21,r2
 4003218:	1827883a 	mov	r19,r3
 400321c:	400be580 	call	400be58 <__muldf3>
 4003220:	180b883a 	mov	r5,r3
 4003224:	1009883a 	mov	r4,r2
 4003228:	1821883a 	mov	r16,r3
 400322c:	1023883a 	mov	r17,r2
 4003230:	400cfc00 	call	400cfc0 <__fixdfsi>
 4003234:	1009883a 	mov	r4,r2
 4003238:	1029883a 	mov	r20,r2
 400323c:	400d0400 	call	400d040 <__floatsidf>
 4003240:	8809883a 	mov	r4,r17
 4003244:	800b883a 	mov	r5,r16
 4003248:	100d883a 	mov	r6,r2
 400324c:	180f883a 	mov	r7,r3
 4003250:	400c6c40 	call	400c6c4 <__subdf3>
 4003254:	a5000c04 	addi	r20,r20,48
 4003258:	a80d883a 	mov	r6,r21
 400325c:	980f883a 	mov	r7,r19
 4003260:	1009883a 	mov	r4,r2
 4003264:	180b883a 	mov	r5,r3
 4003268:	95000005 	stb	r20,0(r18)
 400326c:	1021883a 	mov	r16,r2
 4003270:	1823883a 	mov	r17,r3
 4003274:	400bd640 	call	400bd64 <__ledf2>
 4003278:	bdc00044 	addi	r23,r23,1
 400327c:	800d883a 	mov	r6,r16
 4003280:	880f883a 	mov	r7,r17
 4003284:	0009883a 	mov	r4,zero
 4003288:	014ffc34 	movhi	r5,16368
 400328c:	103fcf0e 	bge	r2,zero,40031cc <__alt_mem_onchip_memory+0xfbffb1cc>
 4003290:	d8c01317 	ldw	r3,76(sp)
 4003294:	d8c00515 	stw	r3,20(sp)
 4003298:	d9400917 	ldw	r5,36(sp)
 400329c:	e009883a 	mov	r4,fp
 40032a0:	40063500 	call	4006350 <_Bfree>
 40032a4:	d9000517 	ldw	r4,20(sp)
 40032a8:	d9802317 	ldw	r6,140(sp)
 40032ac:	d9c02517 	ldw	r7,148(sp)
 40032b0:	b8000005 	stb	zero,0(r23)
 40032b4:	20800044 	addi	r2,r4,1
 40032b8:	30800015 	stw	r2,0(r6)
 40032bc:	3802aa26 	beq	r7,zero,4003d68 <_dtoa_r+0x1178>
 40032c0:	3dc00015 	stw	r23,0(r7)
 40032c4:	d8800717 	ldw	r2,28(sp)
 40032c8:	003e7906 	br	4002cb0 <__alt_mem_onchip_memory+0xfbffacb0>
 40032cc:	00800434 	movhi	r2,16
 40032d0:	10bfffc4 	addi	r2,r2,-1
 40032d4:	88a2703a 	and	r17,r17,r2
 40032d8:	883e851e 	bne	r17,zero,4002cf0 <__alt_mem_onchip_memory+0xfbffacf0>
 40032dc:	00810074 	movhi	r2,1025
 40032e0:	10be6904 	addi	r2,r2,-1628
 40032e4:	003e8406 	br	4002cf8 <__alt_mem_onchip_memory+0xfbffacf8>
 40032e8:	10c00204 	addi	r3,r2,8
 40032ec:	003e8706 	br	4002d0c <__alt_mem_onchip_memory+0xfbffad0c>
 40032f0:	01400434 	movhi	r5,16
 40032f4:	297fffc4 	addi	r5,r5,-1
 40032f8:	994a703a 	and	r5,r19,r5
 40032fc:	9009883a 	mov	r4,r18
 4003300:	843f0044 	addi	r16,r16,-1023
 4003304:	294ffc34 	orhi	r5,r5,16368
 4003308:	dd800217 	ldw	r22,8(sp)
 400330c:	d8001115 	stw	zero,68(sp)
 4003310:	003ea506 	br	4002da8 <__alt_mem_onchip_memory+0xfbffada8>
 4003314:	00810074 	movhi	r2,1025
 4003318:	10be6004 	addi	r2,r2,-1664
 400331c:	003e6406 	br	4002cb0 <__alt_mem_onchip_memory+0xfbffacb0>
 4003320:	e0001115 	stw	zero,68(fp)
 4003324:	000b883a 	mov	r5,zero
 4003328:	e009883a 	mov	r4,fp
 400332c:	40062a80 	call	40062a8 <_Balloc>
 4003330:	01bfffc4 	movi	r6,-1
 4003334:	01c00044 	movi	r7,1
 4003338:	d8800715 	stw	r2,28(sp)
 400333c:	d9800c15 	stw	r6,48(sp)
 4003340:	e0801015 	stw	r2,64(fp)
 4003344:	d8000315 	stw	zero,12(sp)
 4003348:	d9c00b15 	stw	r7,44(sp)
 400334c:	d9800615 	stw	r6,24(sp)
 4003350:	d8002215 	stw	zero,136(sp)
 4003354:	d8800117 	ldw	r2,4(sp)
 4003358:	10008916 	blt	r2,zero,4003580 <_dtoa_r+0x990>
 400335c:	d9000517 	ldw	r4,20(sp)
 4003360:	00c00384 	movi	r3,14
 4003364:	19008616 	blt	r3,r4,4003580 <_dtoa_r+0x990>
 4003368:	200490fa 	slli	r2,r4,3
 400336c:	00c10074 	movhi	r3,1025
 4003370:	d9802217 	ldw	r6,136(sp)
 4003374:	18fe8804 	addi	r3,r3,-1504
 4003378:	1885883a 	add	r2,r3,r2
 400337c:	14000017 	ldw	r16,0(r2)
 4003380:	14400117 	ldw	r17,4(r2)
 4003384:	30016316 	blt	r6,zero,4003914 <_dtoa_r+0xd24>
 4003388:	800d883a 	mov	r6,r16
 400338c:	880f883a 	mov	r7,r17
 4003390:	9009883a 	mov	r4,r18
 4003394:	980b883a 	mov	r5,r19
 4003398:	400b2300 	call	400b230 <__divdf3>
 400339c:	180b883a 	mov	r5,r3
 40033a0:	1009883a 	mov	r4,r2
 40033a4:	400cfc00 	call	400cfc0 <__fixdfsi>
 40033a8:	1009883a 	mov	r4,r2
 40033ac:	102b883a 	mov	r21,r2
 40033b0:	400d0400 	call	400d040 <__floatsidf>
 40033b4:	800d883a 	mov	r6,r16
 40033b8:	880f883a 	mov	r7,r17
 40033bc:	1009883a 	mov	r4,r2
 40033c0:	180b883a 	mov	r5,r3
 40033c4:	400be580 	call	400be58 <__muldf3>
 40033c8:	100d883a 	mov	r6,r2
 40033cc:	180f883a 	mov	r7,r3
 40033d0:	9009883a 	mov	r4,r18
 40033d4:	980b883a 	mov	r5,r19
 40033d8:	400c6c40 	call	400c6c4 <__subdf3>
 40033dc:	d9c00717 	ldw	r7,28(sp)
 40033e0:	1009883a 	mov	r4,r2
 40033e4:	a8800c04 	addi	r2,r21,48
 40033e8:	38800005 	stb	r2,0(r7)
 40033ec:	3dc00044 	addi	r23,r7,1
 40033f0:	d9c00617 	ldw	r7,24(sp)
 40033f4:	01800044 	movi	r6,1
 40033f8:	180b883a 	mov	r5,r3
 40033fc:	2005883a 	mov	r2,r4
 4003400:	39803826 	beq	r7,r6,40034e4 <_dtoa_r+0x8f4>
 4003404:	000d883a 	mov	r6,zero
 4003408:	01d00934 	movhi	r7,16420
 400340c:	400be580 	call	400be58 <__muldf3>
 4003410:	000d883a 	mov	r6,zero
 4003414:	000f883a 	mov	r7,zero
 4003418:	1009883a 	mov	r4,r2
 400341c:	180b883a 	mov	r5,r3
 4003420:	1025883a 	mov	r18,r2
 4003424:	1827883a 	mov	r19,r3
 4003428:	400bc000 	call	400bc00 <__eqdf2>
 400342c:	103f9a26 	beq	r2,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003430:	d9c00617 	ldw	r7,24(sp)
 4003434:	d8c00717 	ldw	r3,28(sp)
 4003438:	b829883a 	mov	r20,r23
 400343c:	38bfffc4 	addi	r2,r7,-1
 4003440:	18ad883a 	add	r22,r3,r2
 4003444:	00000a06 	br	4003470 <_dtoa_r+0x880>
 4003448:	400be580 	call	400be58 <__muldf3>
 400344c:	000d883a 	mov	r6,zero
 4003450:	000f883a 	mov	r7,zero
 4003454:	1009883a 	mov	r4,r2
 4003458:	180b883a 	mov	r5,r3
 400345c:	1025883a 	mov	r18,r2
 4003460:	1827883a 	mov	r19,r3
 4003464:	b829883a 	mov	r20,r23
 4003468:	400bc000 	call	400bc00 <__eqdf2>
 400346c:	103f8a26 	beq	r2,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003470:	800d883a 	mov	r6,r16
 4003474:	880f883a 	mov	r7,r17
 4003478:	9009883a 	mov	r4,r18
 400347c:	980b883a 	mov	r5,r19
 4003480:	400b2300 	call	400b230 <__divdf3>
 4003484:	180b883a 	mov	r5,r3
 4003488:	1009883a 	mov	r4,r2
 400348c:	400cfc00 	call	400cfc0 <__fixdfsi>
 4003490:	1009883a 	mov	r4,r2
 4003494:	102b883a 	mov	r21,r2
 4003498:	400d0400 	call	400d040 <__floatsidf>
 400349c:	800d883a 	mov	r6,r16
 40034a0:	880f883a 	mov	r7,r17
 40034a4:	1009883a 	mov	r4,r2
 40034a8:	180b883a 	mov	r5,r3
 40034ac:	400be580 	call	400be58 <__muldf3>
 40034b0:	100d883a 	mov	r6,r2
 40034b4:	180f883a 	mov	r7,r3
 40034b8:	9009883a 	mov	r4,r18
 40034bc:	980b883a 	mov	r5,r19
 40034c0:	400c6c40 	call	400c6c4 <__subdf3>
 40034c4:	aa000c04 	addi	r8,r21,48
 40034c8:	a2000005 	stb	r8,0(r20)
 40034cc:	000d883a 	mov	r6,zero
 40034d0:	01d00934 	movhi	r7,16420
 40034d4:	1009883a 	mov	r4,r2
 40034d8:	180b883a 	mov	r5,r3
 40034dc:	a5c00044 	addi	r23,r20,1
 40034e0:	b53fd91e 	bne	r22,r20,4003448 <__alt_mem_onchip_memory+0xfbffb448>
 40034e4:	100d883a 	mov	r6,r2
 40034e8:	180f883a 	mov	r7,r3
 40034ec:	1009883a 	mov	r4,r2
 40034f0:	180b883a 	mov	r5,r3
 40034f4:	400a9840 	call	400a984 <__adddf3>
 40034f8:	100d883a 	mov	r6,r2
 40034fc:	180f883a 	mov	r7,r3
 4003500:	8009883a 	mov	r4,r16
 4003504:	880b883a 	mov	r5,r17
 4003508:	1027883a 	mov	r19,r2
 400350c:	1825883a 	mov	r18,r3
 4003510:	400bd640 	call	400bd64 <__ledf2>
 4003514:	10000816 	blt	r2,zero,4003538 <_dtoa_r+0x948>
 4003518:	980d883a 	mov	r6,r19
 400351c:	900f883a 	mov	r7,r18
 4003520:	8009883a 	mov	r4,r16
 4003524:	880b883a 	mov	r5,r17
 4003528:	400bc000 	call	400bc00 <__eqdf2>
 400352c:	103f5a1e 	bne	r2,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003530:	ad40004c 	andi	r21,r21,1
 4003534:	a83f5826 	beq	r21,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003538:	bd3fffc3 	ldbu	r20,-1(r23)
 400353c:	b8bfffc4 	addi	r2,r23,-1
 4003540:	1007883a 	mov	r3,r2
 4003544:	01400e44 	movi	r5,57
 4003548:	d9800717 	ldw	r6,28(sp)
 400354c:	00000506 	br	4003564 <_dtoa_r+0x974>
 4003550:	18ffffc4 	addi	r3,r3,-1
 4003554:	11824726 	beq	r2,r6,4003e74 <_dtoa_r+0x1284>
 4003558:	1d000003 	ldbu	r20,0(r3)
 400355c:	102f883a 	mov	r23,r2
 4003560:	10bfffc4 	addi	r2,r2,-1
 4003564:	a1003fcc 	andi	r4,r20,255
 4003568:	2100201c 	xori	r4,r4,128
 400356c:	213fe004 	addi	r4,r4,-128
 4003570:	217ff726 	beq	r4,r5,4003550 <__alt_mem_onchip_memory+0xfbffb550>
 4003574:	a2000044 	addi	r8,r20,1
 4003578:	12000005 	stb	r8,0(r2)
 400357c:	003f4606 	br	4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003580:	d9000b17 	ldw	r4,44(sp)
 4003584:	2000c826 	beq	r4,zero,40038a8 <_dtoa_r+0xcb8>
 4003588:	d9800317 	ldw	r6,12(sp)
 400358c:	00c00044 	movi	r3,1
 4003590:	1980f90e 	bge	r3,r6,4003978 <_dtoa_r+0xd88>
 4003594:	d8800617 	ldw	r2,24(sp)
 4003598:	d8c00a17 	ldw	r3,40(sp)
 400359c:	157fffc4 	addi	r21,r2,-1
 40035a0:	1d41f316 	blt	r3,r21,4003d70 <_dtoa_r+0x1180>
 40035a4:	1d6bc83a 	sub	r21,r3,r21
 40035a8:	d9c00617 	ldw	r7,24(sp)
 40035ac:	3802aa16 	blt	r7,zero,4004058 <_dtoa_r+0x1468>
 40035b0:	dd000817 	ldw	r20,32(sp)
 40035b4:	d8800617 	ldw	r2,24(sp)
 40035b8:	d8c00817 	ldw	r3,32(sp)
 40035bc:	01400044 	movi	r5,1
 40035c0:	e009883a 	mov	r4,fp
 40035c4:	1887883a 	add	r3,r3,r2
 40035c8:	d8c00815 	stw	r3,32(sp)
 40035cc:	b0ad883a 	add	r22,r22,r2
 40035d0:	40066dc0 	call	40066dc <__i2b>
 40035d4:	1023883a 	mov	r17,r2
 40035d8:	a0000826 	beq	r20,zero,40035fc <_dtoa_r+0xa0c>
 40035dc:	0580070e 	bge	zero,r22,40035fc <_dtoa_r+0xa0c>
 40035e0:	a005883a 	mov	r2,r20
 40035e4:	b500b916 	blt	r22,r20,40038cc <_dtoa_r+0xcdc>
 40035e8:	d9000817 	ldw	r4,32(sp)
 40035ec:	a0a9c83a 	sub	r20,r20,r2
 40035f0:	b0adc83a 	sub	r22,r22,r2
 40035f4:	2089c83a 	sub	r4,r4,r2
 40035f8:	d9000815 	stw	r4,32(sp)
 40035fc:	d9800a17 	ldw	r6,40(sp)
 4003600:	0181810e 	bge	zero,r6,4003c08 <_dtoa_r+0x1018>
 4003604:	d9c00b17 	ldw	r7,44(sp)
 4003608:	3800b326 	beq	r7,zero,40038d8 <_dtoa_r+0xce8>
 400360c:	a800b226 	beq	r21,zero,40038d8 <_dtoa_r+0xce8>
 4003610:	880b883a 	mov	r5,r17
 4003614:	a80d883a 	mov	r6,r21
 4003618:	e009883a 	mov	r4,fp
 400361c:	40069a40 	call	40069a4 <__pow5mult>
 4003620:	d9800917 	ldw	r6,36(sp)
 4003624:	100b883a 	mov	r5,r2
 4003628:	e009883a 	mov	r4,fp
 400362c:	1023883a 	mov	r17,r2
 4003630:	40067180 	call	4006718 <__multiply>
 4003634:	1021883a 	mov	r16,r2
 4003638:	d8800a17 	ldw	r2,40(sp)
 400363c:	d9400917 	ldw	r5,36(sp)
 4003640:	e009883a 	mov	r4,fp
 4003644:	1545c83a 	sub	r2,r2,r21
 4003648:	d8800a15 	stw	r2,40(sp)
 400364c:	40063500 	call	4006350 <_Bfree>
 4003650:	d8c00a17 	ldw	r3,40(sp)
 4003654:	18009f1e 	bne	r3,zero,40038d4 <_dtoa_r+0xce4>
 4003658:	05c00044 	movi	r23,1
 400365c:	e009883a 	mov	r4,fp
 4003660:	b80b883a 	mov	r5,r23
 4003664:	40066dc0 	call	40066dc <__i2b>
 4003668:	d9000d17 	ldw	r4,52(sp)
 400366c:	102b883a 	mov	r21,r2
 4003670:	2000ce26 	beq	r4,zero,40039ac <_dtoa_r+0xdbc>
 4003674:	200d883a 	mov	r6,r4
 4003678:	100b883a 	mov	r5,r2
 400367c:	e009883a 	mov	r4,fp
 4003680:	40069a40 	call	40069a4 <__pow5mult>
 4003684:	d9800317 	ldw	r6,12(sp)
 4003688:	102b883a 	mov	r21,r2
 400368c:	b981810e 	bge	r23,r6,4003c94 <_dtoa_r+0x10a4>
 4003690:	0027883a 	mov	r19,zero
 4003694:	a8800417 	ldw	r2,16(r21)
 4003698:	05c00804 	movi	r23,32
 400369c:	10800104 	addi	r2,r2,4
 40036a0:	1085883a 	add	r2,r2,r2
 40036a4:	1085883a 	add	r2,r2,r2
 40036a8:	a885883a 	add	r2,r21,r2
 40036ac:	11000017 	ldw	r4,0(r2)
 40036b0:	40065c40 	call	40065c4 <__hi0bits>
 40036b4:	b885c83a 	sub	r2,r23,r2
 40036b8:	1585883a 	add	r2,r2,r22
 40036bc:	108007cc 	andi	r2,r2,31
 40036c0:	1000b326 	beq	r2,zero,4003990 <_dtoa_r+0xda0>
 40036c4:	00c00804 	movi	r3,32
 40036c8:	1887c83a 	sub	r3,r3,r2
 40036cc:	01000104 	movi	r4,4
 40036d0:	20c2cd0e 	bge	r4,r3,4004208 <_dtoa_r+0x1618>
 40036d4:	00c00704 	movi	r3,28
 40036d8:	1885c83a 	sub	r2,r3,r2
 40036dc:	d8c00817 	ldw	r3,32(sp)
 40036e0:	a0a9883a 	add	r20,r20,r2
 40036e4:	b0ad883a 	add	r22,r22,r2
 40036e8:	1887883a 	add	r3,r3,r2
 40036ec:	d8c00815 	stw	r3,32(sp)
 40036f0:	d9800817 	ldw	r6,32(sp)
 40036f4:	0180040e 	bge	zero,r6,4003708 <_dtoa_r+0xb18>
 40036f8:	800b883a 	mov	r5,r16
 40036fc:	e009883a 	mov	r4,fp
 4003700:	4006ae40 	call	4006ae4 <__lshift>
 4003704:	1021883a 	mov	r16,r2
 4003708:	0580050e 	bge	zero,r22,4003720 <_dtoa_r+0xb30>
 400370c:	a80b883a 	mov	r5,r21
 4003710:	b00d883a 	mov	r6,r22
 4003714:	e009883a 	mov	r4,fp
 4003718:	4006ae40 	call	4006ae4 <__lshift>
 400371c:	102b883a 	mov	r21,r2
 4003720:	d9c00e17 	ldw	r7,56(sp)
 4003724:	3801211e 	bne	r7,zero,4003bac <_dtoa_r+0xfbc>
 4003728:	d9800617 	ldw	r6,24(sp)
 400372c:	0181380e 	bge	zero,r6,4003c10 <_dtoa_r+0x1020>
 4003730:	d8c00b17 	ldw	r3,44(sp)
 4003734:	1800ab1e 	bne	r3,zero,40039e4 <_dtoa_r+0xdf4>
 4003738:	dc800717 	ldw	r18,28(sp)
 400373c:	dcc00617 	ldw	r19,24(sp)
 4003740:	9029883a 	mov	r20,r18
 4003744:	00000206 	br	4003750 <_dtoa_r+0xb60>
 4003748:	40063780 	call	4006378 <__multadd>
 400374c:	1021883a 	mov	r16,r2
 4003750:	a80b883a 	mov	r5,r21
 4003754:	8009883a 	mov	r4,r16
 4003758:	40029c80 	call	40029c8 <quorem>
 400375c:	10800c04 	addi	r2,r2,48
 4003760:	90800005 	stb	r2,0(r18)
 4003764:	94800044 	addi	r18,r18,1
 4003768:	9507c83a 	sub	r3,r18,r20
 400376c:	000f883a 	mov	r7,zero
 4003770:	01800284 	movi	r6,10
 4003774:	800b883a 	mov	r5,r16
 4003778:	e009883a 	mov	r4,fp
 400377c:	1cfff216 	blt	r3,r19,4003748 <__alt_mem_onchip_memory+0xfbffb748>
 4003780:	1011883a 	mov	r8,r2
 4003784:	d8800617 	ldw	r2,24(sp)
 4003788:	0082370e 	bge	zero,r2,4004068 <_dtoa_r+0x1478>
 400378c:	d9000717 	ldw	r4,28(sp)
 4003790:	0025883a 	mov	r18,zero
 4003794:	20af883a 	add	r23,r4,r2
 4003798:	01800044 	movi	r6,1
 400379c:	800b883a 	mov	r5,r16
 40037a0:	e009883a 	mov	r4,fp
 40037a4:	da001715 	stw	r8,92(sp)
 40037a8:	4006ae40 	call	4006ae4 <__lshift>
 40037ac:	a80b883a 	mov	r5,r21
 40037b0:	1009883a 	mov	r4,r2
 40037b4:	d8800915 	stw	r2,36(sp)
 40037b8:	4006c2c0 	call	4006c2c <__mcmp>
 40037bc:	da001717 	ldw	r8,92(sp)
 40037c0:	0081800e 	bge	zero,r2,4003dc4 <_dtoa_r+0x11d4>
 40037c4:	b93fffc3 	ldbu	r4,-1(r23)
 40037c8:	b8bfffc4 	addi	r2,r23,-1
 40037cc:	1007883a 	mov	r3,r2
 40037d0:	01800e44 	movi	r6,57
 40037d4:	d9c00717 	ldw	r7,28(sp)
 40037d8:	00000506 	br	40037f0 <_dtoa_r+0xc00>
 40037dc:	18ffffc4 	addi	r3,r3,-1
 40037e0:	11c12326 	beq	r2,r7,4003c70 <_dtoa_r+0x1080>
 40037e4:	19000003 	ldbu	r4,0(r3)
 40037e8:	102f883a 	mov	r23,r2
 40037ec:	10bfffc4 	addi	r2,r2,-1
 40037f0:	21403fcc 	andi	r5,r4,255
 40037f4:	2940201c 	xori	r5,r5,128
 40037f8:	297fe004 	addi	r5,r5,-128
 40037fc:	29bff726 	beq	r5,r6,40037dc <__alt_mem_onchip_memory+0xfbffb7dc>
 4003800:	21000044 	addi	r4,r4,1
 4003804:	11000005 	stb	r4,0(r2)
 4003808:	a80b883a 	mov	r5,r21
 400380c:	e009883a 	mov	r4,fp
 4003810:	40063500 	call	4006350 <_Bfree>
 4003814:	883ea026 	beq	r17,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003818:	90000426 	beq	r18,zero,400382c <_dtoa_r+0xc3c>
 400381c:	94400326 	beq	r18,r17,400382c <_dtoa_r+0xc3c>
 4003820:	900b883a 	mov	r5,r18
 4003824:	e009883a 	mov	r4,fp
 4003828:	40063500 	call	4006350 <_Bfree>
 400382c:	880b883a 	mov	r5,r17
 4003830:	e009883a 	mov	r4,fp
 4003834:	40063500 	call	4006350 <_Bfree>
 4003838:	003e9706 	br	4003298 <__alt_mem_onchip_memory+0xfbffb298>
 400383c:	01800044 	movi	r6,1
 4003840:	d9800e15 	stw	r6,56(sp)
 4003844:	003d9606 	br	4002ea0 <__alt_mem_onchip_memory+0xfbffaea0>
 4003848:	d8800817 	ldw	r2,32(sp)
 400384c:	d8c00517 	ldw	r3,20(sp)
 4003850:	d8000d15 	stw	zero,52(sp)
 4003854:	10c5c83a 	sub	r2,r2,r3
 4003858:	00c9c83a 	sub	r4,zero,r3
 400385c:	d8800815 	stw	r2,32(sp)
 4003860:	d9000a15 	stw	r4,40(sp)
 4003864:	003d9706 	br	4002ec4 <__alt_mem_onchip_memory+0xfbffaec4>
 4003868:	05adc83a 	sub	r22,zero,r22
 400386c:	dd800815 	stw	r22,32(sp)
 4003870:	002d883a 	mov	r22,zero
 4003874:	003d8e06 	br	4002eb0 <__alt_mem_onchip_memory+0xfbffaeb0>
 4003878:	d9000517 	ldw	r4,20(sp)
 400387c:	400d0400 	call	400d040 <__floatsidf>
 4003880:	100d883a 	mov	r6,r2
 4003884:	180f883a 	mov	r7,r3
 4003888:	a009883a 	mov	r4,r20
 400388c:	880b883a 	mov	r5,r17
 4003890:	400bc000 	call	400bc00 <__eqdf2>
 4003894:	103d7126 	beq	r2,zero,4002e5c <__alt_mem_onchip_memory+0xfbffae5c>
 4003898:	d9c00517 	ldw	r7,20(sp)
 400389c:	39ffffc4 	addi	r7,r7,-1
 40038a0:	d9c00515 	stw	r7,20(sp)
 40038a4:	003d6d06 	br	4002e5c <__alt_mem_onchip_memory+0xfbffae5c>
 40038a8:	dd400a17 	ldw	r21,40(sp)
 40038ac:	dd000817 	ldw	r20,32(sp)
 40038b0:	0023883a 	mov	r17,zero
 40038b4:	003f4806 	br	40035d8 <__alt_mem_onchip_memory+0xfbffb5d8>
 40038b8:	10e3c83a 	sub	r17,r2,r3
 40038bc:	9448983a 	sll	r4,r18,r17
 40038c0:	003d3206 	br	4002d8c <__alt_mem_onchip_memory+0xfbffad8c>
 40038c4:	d8000e15 	stw	zero,56(sp)
 40038c8:	003d7506 	br	4002ea0 <__alt_mem_onchip_memory+0xfbffaea0>
 40038cc:	b005883a 	mov	r2,r22
 40038d0:	003f4506 	br	40035e8 <__alt_mem_onchip_memory+0xfbffb5e8>
 40038d4:	dc000915 	stw	r16,36(sp)
 40038d8:	d9800a17 	ldw	r6,40(sp)
 40038dc:	d9400917 	ldw	r5,36(sp)
 40038e0:	e009883a 	mov	r4,fp
 40038e4:	40069a40 	call	40069a4 <__pow5mult>
 40038e8:	1021883a 	mov	r16,r2
 40038ec:	003f5a06 	br	4003658 <__alt_mem_onchip_memory+0xfbffb658>
 40038f0:	01c00044 	movi	r7,1
 40038f4:	d9c00b15 	stw	r7,44(sp)
 40038f8:	d8802217 	ldw	r2,136(sp)
 40038fc:	0081280e 	bge	zero,r2,4003da0 <_dtoa_r+0x11b0>
 4003900:	100d883a 	mov	r6,r2
 4003904:	1021883a 	mov	r16,r2
 4003908:	d8800c15 	stw	r2,48(sp)
 400390c:	d8800615 	stw	r2,24(sp)
 4003910:	003d8806 	br	4002f34 <__alt_mem_onchip_memory+0xfbffaf34>
 4003914:	d8800617 	ldw	r2,24(sp)
 4003918:	00be9b16 	blt	zero,r2,4003388 <__alt_mem_onchip_memory+0xfbffb388>
 400391c:	10010f1e 	bne	r2,zero,4003d5c <_dtoa_r+0x116c>
 4003920:	880b883a 	mov	r5,r17
 4003924:	000d883a 	mov	r6,zero
 4003928:	01d00534 	movhi	r7,16404
 400392c:	8009883a 	mov	r4,r16
 4003930:	400be580 	call	400be58 <__muldf3>
 4003934:	900d883a 	mov	r6,r18
 4003938:	980f883a 	mov	r7,r19
 400393c:	1009883a 	mov	r4,r2
 4003940:	180b883a 	mov	r5,r3
 4003944:	400bc880 	call	400bc88 <__gedf2>
 4003948:	002b883a 	mov	r21,zero
 400394c:	0023883a 	mov	r17,zero
 4003950:	1000bf16 	blt	r2,zero,4003c50 <_dtoa_r+0x1060>
 4003954:	d9802217 	ldw	r6,136(sp)
 4003958:	ddc00717 	ldw	r23,28(sp)
 400395c:	018c303a 	nor	r6,zero,r6
 4003960:	d9800515 	stw	r6,20(sp)
 4003964:	a80b883a 	mov	r5,r21
 4003968:	e009883a 	mov	r4,fp
 400396c:	40063500 	call	4006350 <_Bfree>
 4003970:	883e4926 	beq	r17,zero,4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4003974:	003fad06 	br	400382c <__alt_mem_onchip_memory+0xfbffb82c>
 4003978:	d9c01117 	ldw	r7,68(sp)
 400397c:	3801bc26 	beq	r7,zero,4004070 <_dtoa_r+0x1480>
 4003980:	10810cc4 	addi	r2,r2,1075
 4003984:	dd400a17 	ldw	r21,40(sp)
 4003988:	dd000817 	ldw	r20,32(sp)
 400398c:	003f0a06 	br	40035b8 <__alt_mem_onchip_memory+0xfbffb5b8>
 4003990:	00800704 	movi	r2,28
 4003994:	d9000817 	ldw	r4,32(sp)
 4003998:	a0a9883a 	add	r20,r20,r2
 400399c:	b0ad883a 	add	r22,r22,r2
 40039a0:	2089883a 	add	r4,r4,r2
 40039a4:	d9000815 	stw	r4,32(sp)
 40039a8:	003f5106 	br	40036f0 <__alt_mem_onchip_memory+0xfbffb6f0>
 40039ac:	d8c00317 	ldw	r3,12(sp)
 40039b0:	b8c1fc0e 	bge	r23,r3,40041a4 <_dtoa_r+0x15b4>
 40039b4:	0027883a 	mov	r19,zero
 40039b8:	b805883a 	mov	r2,r23
 40039bc:	003f3e06 	br	40036b8 <__alt_mem_onchip_memory+0xfbffb6b8>
 40039c0:	880b883a 	mov	r5,r17
 40039c4:	e009883a 	mov	r4,fp
 40039c8:	000f883a 	mov	r7,zero
 40039cc:	01800284 	movi	r6,10
 40039d0:	40063780 	call	4006378 <__multadd>
 40039d4:	d9000c17 	ldw	r4,48(sp)
 40039d8:	1023883a 	mov	r17,r2
 40039dc:	0102040e 	bge	zero,r4,40041f0 <_dtoa_r+0x1600>
 40039e0:	d9000615 	stw	r4,24(sp)
 40039e4:	0500050e 	bge	zero,r20,40039fc <_dtoa_r+0xe0c>
 40039e8:	880b883a 	mov	r5,r17
 40039ec:	a00d883a 	mov	r6,r20
 40039f0:	e009883a 	mov	r4,fp
 40039f4:	4006ae40 	call	4006ae4 <__lshift>
 40039f8:	1023883a 	mov	r17,r2
 40039fc:	9801241e 	bne	r19,zero,4003e90 <_dtoa_r+0x12a0>
 4003a00:	8829883a 	mov	r20,r17
 4003a04:	d9000617 	ldw	r4,24(sp)
 4003a08:	dcc00717 	ldw	r19,28(sp)
 4003a0c:	9480004c 	andi	r18,r18,1
 4003a10:	20bfffc4 	addi	r2,r4,-1
 4003a14:	9885883a 	add	r2,r19,r2
 4003a18:	d8800415 	stw	r2,16(sp)
 4003a1c:	dc800615 	stw	r18,24(sp)
 4003a20:	a80b883a 	mov	r5,r21
 4003a24:	8009883a 	mov	r4,r16
 4003a28:	40029c80 	call	40029c8 <quorem>
 4003a2c:	880b883a 	mov	r5,r17
 4003a30:	8009883a 	mov	r4,r16
 4003a34:	102f883a 	mov	r23,r2
 4003a38:	4006c2c0 	call	4006c2c <__mcmp>
 4003a3c:	a80b883a 	mov	r5,r21
 4003a40:	a00d883a 	mov	r6,r20
 4003a44:	e009883a 	mov	r4,fp
 4003a48:	102d883a 	mov	r22,r2
 4003a4c:	4006c8c0 	call	4006c8c <__mdiff>
 4003a50:	1007883a 	mov	r3,r2
 4003a54:	10800317 	ldw	r2,12(r2)
 4003a58:	bc800c04 	addi	r18,r23,48
 4003a5c:	180b883a 	mov	r5,r3
 4003a60:	10004e1e 	bne	r2,zero,4003b9c <_dtoa_r+0xfac>
 4003a64:	8009883a 	mov	r4,r16
 4003a68:	d8c01615 	stw	r3,88(sp)
 4003a6c:	4006c2c0 	call	4006c2c <__mcmp>
 4003a70:	d8c01617 	ldw	r3,88(sp)
 4003a74:	e009883a 	mov	r4,fp
 4003a78:	d8801615 	stw	r2,88(sp)
 4003a7c:	180b883a 	mov	r5,r3
 4003a80:	40063500 	call	4006350 <_Bfree>
 4003a84:	d8801617 	ldw	r2,88(sp)
 4003a88:	1000041e 	bne	r2,zero,4003a9c <_dtoa_r+0xeac>
 4003a8c:	d9800317 	ldw	r6,12(sp)
 4003a90:	3000021e 	bne	r6,zero,4003a9c <_dtoa_r+0xeac>
 4003a94:	d8c00617 	ldw	r3,24(sp)
 4003a98:	18003726 	beq	r3,zero,4003b78 <_dtoa_r+0xf88>
 4003a9c:	b0002016 	blt	r22,zero,4003b20 <_dtoa_r+0xf30>
 4003aa0:	b000041e 	bne	r22,zero,4003ab4 <_dtoa_r+0xec4>
 4003aa4:	d9000317 	ldw	r4,12(sp)
 4003aa8:	2000021e 	bne	r4,zero,4003ab4 <_dtoa_r+0xec4>
 4003aac:	d8c00617 	ldw	r3,24(sp)
 4003ab0:	18001b26 	beq	r3,zero,4003b20 <_dtoa_r+0xf30>
 4003ab4:	00810716 	blt	zero,r2,4003ed4 <_dtoa_r+0x12e4>
 4003ab8:	d8c00417 	ldw	r3,16(sp)
 4003abc:	9d800044 	addi	r22,r19,1
 4003ac0:	9c800005 	stb	r18,0(r19)
 4003ac4:	b02f883a 	mov	r23,r22
 4003ac8:	98c10626 	beq	r19,r3,4003ee4 <_dtoa_r+0x12f4>
 4003acc:	800b883a 	mov	r5,r16
 4003ad0:	000f883a 	mov	r7,zero
 4003ad4:	01800284 	movi	r6,10
 4003ad8:	e009883a 	mov	r4,fp
 4003adc:	40063780 	call	4006378 <__multadd>
 4003ae0:	1021883a 	mov	r16,r2
 4003ae4:	000f883a 	mov	r7,zero
 4003ae8:	01800284 	movi	r6,10
 4003aec:	880b883a 	mov	r5,r17
 4003af0:	e009883a 	mov	r4,fp
 4003af4:	8d002526 	beq	r17,r20,4003b8c <_dtoa_r+0xf9c>
 4003af8:	40063780 	call	4006378 <__multadd>
 4003afc:	a00b883a 	mov	r5,r20
 4003b00:	000f883a 	mov	r7,zero
 4003b04:	01800284 	movi	r6,10
 4003b08:	e009883a 	mov	r4,fp
 4003b0c:	1023883a 	mov	r17,r2
 4003b10:	40063780 	call	4006378 <__multadd>
 4003b14:	1029883a 	mov	r20,r2
 4003b18:	b027883a 	mov	r19,r22
 4003b1c:	003fc006 	br	4003a20 <__alt_mem_onchip_memory+0xfbffba20>
 4003b20:	9011883a 	mov	r8,r18
 4003b24:	00800e0e 	bge	zero,r2,4003b60 <_dtoa_r+0xf70>
 4003b28:	800b883a 	mov	r5,r16
 4003b2c:	01800044 	movi	r6,1
 4003b30:	e009883a 	mov	r4,fp
 4003b34:	da001715 	stw	r8,92(sp)
 4003b38:	4006ae40 	call	4006ae4 <__lshift>
 4003b3c:	a80b883a 	mov	r5,r21
 4003b40:	1009883a 	mov	r4,r2
 4003b44:	1021883a 	mov	r16,r2
 4003b48:	4006c2c0 	call	4006c2c <__mcmp>
 4003b4c:	da001717 	ldw	r8,92(sp)
 4003b50:	0081960e 	bge	zero,r2,40041ac <_dtoa_r+0x15bc>
 4003b54:	00800e44 	movi	r2,57
 4003b58:	40817026 	beq	r8,r2,400411c <_dtoa_r+0x152c>
 4003b5c:	ba000c44 	addi	r8,r23,49
 4003b60:	8825883a 	mov	r18,r17
 4003b64:	9dc00044 	addi	r23,r19,1
 4003b68:	9a000005 	stb	r8,0(r19)
 4003b6c:	a023883a 	mov	r17,r20
 4003b70:	dc000915 	stw	r16,36(sp)
 4003b74:	003f2406 	br	4003808 <__alt_mem_onchip_memory+0xfbffb808>
 4003b78:	00800e44 	movi	r2,57
 4003b7c:	9011883a 	mov	r8,r18
 4003b80:	90816626 	beq	r18,r2,400411c <_dtoa_r+0x152c>
 4003b84:	05bff516 	blt	zero,r22,4003b5c <__alt_mem_onchip_memory+0xfbffbb5c>
 4003b88:	003ff506 	br	4003b60 <__alt_mem_onchip_memory+0xfbffbb60>
 4003b8c:	40063780 	call	4006378 <__multadd>
 4003b90:	1023883a 	mov	r17,r2
 4003b94:	1029883a 	mov	r20,r2
 4003b98:	003fdf06 	br	4003b18 <__alt_mem_onchip_memory+0xfbffbb18>
 4003b9c:	e009883a 	mov	r4,fp
 4003ba0:	40063500 	call	4006350 <_Bfree>
 4003ba4:	00800044 	movi	r2,1
 4003ba8:	003fbc06 	br	4003a9c <__alt_mem_onchip_memory+0xfbffba9c>
 4003bac:	a80b883a 	mov	r5,r21
 4003bb0:	8009883a 	mov	r4,r16
 4003bb4:	4006c2c0 	call	4006c2c <__mcmp>
 4003bb8:	103edb0e 	bge	r2,zero,4003728 <__alt_mem_onchip_memory+0xfbffb728>
 4003bbc:	800b883a 	mov	r5,r16
 4003bc0:	000f883a 	mov	r7,zero
 4003bc4:	01800284 	movi	r6,10
 4003bc8:	e009883a 	mov	r4,fp
 4003bcc:	40063780 	call	4006378 <__multadd>
 4003bd0:	1021883a 	mov	r16,r2
 4003bd4:	d8800517 	ldw	r2,20(sp)
 4003bd8:	d8c00b17 	ldw	r3,44(sp)
 4003bdc:	10bfffc4 	addi	r2,r2,-1
 4003be0:	d8800515 	stw	r2,20(sp)
 4003be4:	183f761e 	bne	r3,zero,40039c0 <__alt_mem_onchip_memory+0xfbffb9c0>
 4003be8:	d9000c17 	ldw	r4,48(sp)
 4003bec:	0101730e 	bge	zero,r4,40041bc <_dtoa_r+0x15cc>
 4003bf0:	d9000615 	stw	r4,24(sp)
 4003bf4:	003ed006 	br	4003738 <__alt_mem_onchip_memory+0xfbffb738>
 4003bf8:	00800084 	movi	r2,2
 4003bfc:	3081861e 	bne	r6,r2,4004218 <_dtoa_r+0x1628>
 4003c00:	d8000b15 	stw	zero,44(sp)
 4003c04:	003f3c06 	br	40038f8 <__alt_mem_onchip_memory+0xfbffb8f8>
 4003c08:	dc000917 	ldw	r16,36(sp)
 4003c0c:	003e9206 	br	4003658 <__alt_mem_onchip_memory+0xfbffb658>
 4003c10:	d9c00317 	ldw	r7,12(sp)
 4003c14:	00800084 	movi	r2,2
 4003c18:	11fec50e 	bge	r2,r7,4003730 <__alt_mem_onchip_memory+0xfbffb730>
 4003c1c:	d9000617 	ldw	r4,24(sp)
 4003c20:	20013c1e 	bne	r4,zero,4004114 <_dtoa_r+0x1524>
 4003c24:	a80b883a 	mov	r5,r21
 4003c28:	000f883a 	mov	r7,zero
 4003c2c:	01800144 	movi	r6,5
 4003c30:	e009883a 	mov	r4,fp
 4003c34:	40063780 	call	4006378 <__multadd>
 4003c38:	100b883a 	mov	r5,r2
 4003c3c:	8009883a 	mov	r4,r16
 4003c40:	102b883a 	mov	r21,r2
 4003c44:	4006c2c0 	call	4006c2c <__mcmp>
 4003c48:	dc000915 	stw	r16,36(sp)
 4003c4c:	00bf410e 	bge	zero,r2,4003954 <__alt_mem_onchip_memory+0xfbffb954>
 4003c50:	d9c00717 	ldw	r7,28(sp)
 4003c54:	00800c44 	movi	r2,49
 4003c58:	38800005 	stb	r2,0(r7)
 4003c5c:	d8800517 	ldw	r2,20(sp)
 4003c60:	3dc00044 	addi	r23,r7,1
 4003c64:	10800044 	addi	r2,r2,1
 4003c68:	d8800515 	stw	r2,20(sp)
 4003c6c:	003f3d06 	br	4003964 <__alt_mem_onchip_memory+0xfbffb964>
 4003c70:	d9800517 	ldw	r6,20(sp)
 4003c74:	d9c00717 	ldw	r7,28(sp)
 4003c78:	00800c44 	movi	r2,49
 4003c7c:	31800044 	addi	r6,r6,1
 4003c80:	d9800515 	stw	r6,20(sp)
 4003c84:	38800005 	stb	r2,0(r7)
 4003c88:	003edf06 	br	4003808 <__alt_mem_onchip_memory+0xfbffb808>
 4003c8c:	d8000b15 	stw	zero,44(sp)
 4003c90:	003c9f06 	br	4002f10 <__alt_mem_onchip_memory+0xfbffaf10>
 4003c94:	903e7e1e 	bne	r18,zero,4003690 <__alt_mem_onchip_memory+0xfbffb690>
 4003c98:	00800434 	movhi	r2,16
 4003c9c:	10bfffc4 	addi	r2,r2,-1
 4003ca0:	9884703a 	and	r2,r19,r2
 4003ca4:	1000ea1e 	bne	r2,zero,4004050 <_dtoa_r+0x1460>
 4003ca8:	9cdffc2c 	andhi	r19,r19,32752
 4003cac:	9800e826 	beq	r19,zero,4004050 <_dtoa_r+0x1460>
 4003cb0:	d9c00817 	ldw	r7,32(sp)
 4003cb4:	b5800044 	addi	r22,r22,1
 4003cb8:	04c00044 	movi	r19,1
 4003cbc:	39c00044 	addi	r7,r7,1
 4003cc0:	d9c00815 	stw	r7,32(sp)
 4003cc4:	d8800d17 	ldw	r2,52(sp)
 4003cc8:	103e721e 	bne	r2,zero,4003694 <__alt_mem_onchip_memory+0xfbffb694>
 4003ccc:	00800044 	movi	r2,1
 4003cd0:	003e7906 	br	40036b8 <__alt_mem_onchip_memory+0xfbffb6b8>
 4003cd4:	8009883a 	mov	r4,r16
 4003cd8:	400d0400 	call	400d040 <__floatsidf>
 4003cdc:	d9800f17 	ldw	r6,60(sp)
 4003ce0:	d9c01017 	ldw	r7,64(sp)
 4003ce4:	1009883a 	mov	r4,r2
 4003ce8:	180b883a 	mov	r5,r3
 4003cec:	400be580 	call	400be58 <__muldf3>
 4003cf0:	000d883a 	mov	r6,zero
 4003cf4:	01d00734 	movhi	r7,16412
 4003cf8:	1009883a 	mov	r4,r2
 4003cfc:	180b883a 	mov	r5,r3
 4003d00:	400a9840 	call	400a984 <__adddf3>
 4003d04:	047f3034 	movhi	r17,64704
 4003d08:	1021883a 	mov	r16,r2
 4003d0c:	1c63883a 	add	r17,r3,r17
 4003d10:	d9000f17 	ldw	r4,60(sp)
 4003d14:	d9401017 	ldw	r5,64(sp)
 4003d18:	000d883a 	mov	r6,zero
 4003d1c:	01d00534 	movhi	r7,16404
 4003d20:	400c6c40 	call	400c6c4 <__subdf3>
 4003d24:	800d883a 	mov	r6,r16
 4003d28:	880f883a 	mov	r7,r17
 4003d2c:	1009883a 	mov	r4,r2
 4003d30:	180b883a 	mov	r5,r3
 4003d34:	102b883a 	mov	r21,r2
 4003d38:	1829883a 	mov	r20,r3
 4003d3c:	400bc880 	call	400bc88 <__gedf2>
 4003d40:	00806c16 	blt	zero,r2,4003ef4 <_dtoa_r+0x1304>
 4003d44:	89e0003c 	xorhi	r7,r17,32768
 4003d48:	800d883a 	mov	r6,r16
 4003d4c:	a809883a 	mov	r4,r21
 4003d50:	a00b883a 	mov	r5,r20
 4003d54:	400bd640 	call	400bd64 <__ledf2>
 4003d58:	103d7e0e 	bge	r2,zero,4003354 <__alt_mem_onchip_memory+0xfbffb354>
 4003d5c:	002b883a 	mov	r21,zero
 4003d60:	0023883a 	mov	r17,zero
 4003d64:	003efb06 	br	4003954 <__alt_mem_onchip_memory+0xfbffb954>
 4003d68:	d8800717 	ldw	r2,28(sp)
 4003d6c:	003bd006 	br	4002cb0 <__alt_mem_onchip_memory+0xfbffacb0>
 4003d70:	d9000a17 	ldw	r4,40(sp)
 4003d74:	d9800d17 	ldw	r6,52(sp)
 4003d78:	dd400a15 	stw	r21,40(sp)
 4003d7c:	a905c83a 	sub	r2,r21,r4
 4003d80:	308d883a 	add	r6,r6,r2
 4003d84:	d9800d15 	stw	r6,52(sp)
 4003d88:	002b883a 	mov	r21,zero
 4003d8c:	003e0606 	br	40035a8 <__alt_mem_onchip_memory+0xfbffb5a8>
 4003d90:	9023883a 	mov	r17,r18
 4003d94:	9829883a 	mov	r20,r19
 4003d98:	04000084 	movi	r16,2
 4003d9c:	003c9206 	br	4002fe8 <__alt_mem_onchip_memory+0xfbffafe8>
 4003da0:	04000044 	movi	r16,1
 4003da4:	dc000c15 	stw	r16,48(sp)
 4003da8:	dc000615 	stw	r16,24(sp)
 4003dac:	dc002215 	stw	r16,136(sp)
 4003db0:	e0001115 	stw	zero,68(fp)
 4003db4:	000b883a 	mov	r5,zero
 4003db8:	003c6906 	br	4002f60 <__alt_mem_onchip_memory+0xfbffaf60>
 4003dbc:	3021883a 	mov	r16,r6
 4003dc0:	003ffb06 	br	4003db0 <__alt_mem_onchip_memory+0xfbffbdb0>
 4003dc4:	1000021e 	bne	r2,zero,4003dd0 <_dtoa_r+0x11e0>
 4003dc8:	4200004c 	andi	r8,r8,1
 4003dcc:	403e7d1e 	bne	r8,zero,40037c4 <__alt_mem_onchip_memory+0xfbffb7c4>
 4003dd0:	01000c04 	movi	r4,48
 4003dd4:	00000106 	br	4003ddc <_dtoa_r+0x11ec>
 4003dd8:	102f883a 	mov	r23,r2
 4003ddc:	b8bfffc4 	addi	r2,r23,-1
 4003de0:	10c00007 	ldb	r3,0(r2)
 4003de4:	193ffc26 	beq	r3,r4,4003dd8 <__alt_mem_onchip_memory+0xfbffbdd8>
 4003de8:	003e8706 	br	4003808 <__alt_mem_onchip_memory+0xfbffb808>
 4003dec:	d8800517 	ldw	r2,20(sp)
 4003df0:	00a3c83a 	sub	r17,zero,r2
 4003df4:	8800a426 	beq	r17,zero,4004088 <_dtoa_r+0x1498>
 4003df8:	888003cc 	andi	r2,r17,15
 4003dfc:	100490fa 	slli	r2,r2,3
 4003e00:	00c10074 	movhi	r3,1025
 4003e04:	18fe8804 	addi	r3,r3,-1504
 4003e08:	1885883a 	add	r2,r3,r2
 4003e0c:	11800017 	ldw	r6,0(r2)
 4003e10:	11c00117 	ldw	r7,4(r2)
 4003e14:	9009883a 	mov	r4,r18
 4003e18:	980b883a 	mov	r5,r19
 4003e1c:	8823d13a 	srai	r17,r17,4
 4003e20:	400be580 	call	400be58 <__muldf3>
 4003e24:	d8800f15 	stw	r2,60(sp)
 4003e28:	d8c01015 	stw	r3,64(sp)
 4003e2c:	8800e826 	beq	r17,zero,40041d0 <_dtoa_r+0x15e0>
 4003e30:	05010074 	movhi	r20,1025
 4003e34:	a53e7e04 	addi	r20,r20,-1544
 4003e38:	04000084 	movi	r16,2
 4003e3c:	8980004c 	andi	r6,r17,1
 4003e40:	1009883a 	mov	r4,r2
 4003e44:	8823d07a 	srai	r17,r17,1
 4003e48:	180b883a 	mov	r5,r3
 4003e4c:	30000426 	beq	r6,zero,4003e60 <_dtoa_r+0x1270>
 4003e50:	a1800017 	ldw	r6,0(r20)
 4003e54:	a1c00117 	ldw	r7,4(r20)
 4003e58:	84000044 	addi	r16,r16,1
 4003e5c:	400be580 	call	400be58 <__muldf3>
 4003e60:	a5000204 	addi	r20,r20,8
 4003e64:	883ff51e 	bne	r17,zero,4003e3c <__alt_mem_onchip_memory+0xfbffbe3c>
 4003e68:	d8800f15 	stw	r2,60(sp)
 4003e6c:	d8c01015 	stw	r3,64(sp)
 4003e70:	003c7606 	br	400304c <__alt_mem_onchip_memory+0xfbffb04c>
 4003e74:	00c00c04 	movi	r3,48
 4003e78:	10c00005 	stb	r3,0(r2)
 4003e7c:	d8c00517 	ldw	r3,20(sp)
 4003e80:	bd3fffc3 	ldbu	r20,-1(r23)
 4003e84:	18c00044 	addi	r3,r3,1
 4003e88:	d8c00515 	stw	r3,20(sp)
 4003e8c:	003db906 	br	4003574 <__alt_mem_onchip_memory+0xfbffb574>
 4003e90:	89400117 	ldw	r5,4(r17)
 4003e94:	e009883a 	mov	r4,fp
 4003e98:	40062a80 	call	40062a8 <_Balloc>
 4003e9c:	89800417 	ldw	r6,16(r17)
 4003ea0:	89400304 	addi	r5,r17,12
 4003ea4:	11000304 	addi	r4,r2,12
 4003ea8:	31800084 	addi	r6,r6,2
 4003eac:	318d883a 	add	r6,r6,r6
 4003eb0:	318d883a 	add	r6,r6,r6
 4003eb4:	1027883a 	mov	r19,r2
 4003eb8:	4005edc0 	call	4005edc <memcpy>
 4003ebc:	01800044 	movi	r6,1
 4003ec0:	980b883a 	mov	r5,r19
 4003ec4:	e009883a 	mov	r4,fp
 4003ec8:	4006ae40 	call	4006ae4 <__lshift>
 4003ecc:	1029883a 	mov	r20,r2
 4003ed0:	003ecc06 	br	4003a04 <__alt_mem_onchip_memory+0xfbffba04>
 4003ed4:	00800e44 	movi	r2,57
 4003ed8:	90809026 	beq	r18,r2,400411c <_dtoa_r+0x152c>
 4003edc:	92000044 	addi	r8,r18,1
 4003ee0:	003f1f06 	br	4003b60 <__alt_mem_onchip_memory+0xfbffbb60>
 4003ee4:	9011883a 	mov	r8,r18
 4003ee8:	8825883a 	mov	r18,r17
 4003eec:	a023883a 	mov	r17,r20
 4003ef0:	003e2906 	br	4003798 <__alt_mem_onchip_memory+0xfbffb798>
 4003ef4:	002b883a 	mov	r21,zero
 4003ef8:	0023883a 	mov	r17,zero
 4003efc:	003f5406 	br	4003c50 <__alt_mem_onchip_memory+0xfbffbc50>
 4003f00:	61bfffc4 	addi	r6,r12,-1
 4003f04:	300490fa 	slli	r2,r6,3
 4003f08:	00c10074 	movhi	r3,1025
 4003f0c:	18fe8804 	addi	r3,r3,-1504
 4003f10:	1885883a 	add	r2,r3,r2
 4003f14:	11000017 	ldw	r4,0(r2)
 4003f18:	11400117 	ldw	r5,4(r2)
 4003f1c:	d8800717 	ldw	r2,28(sp)
 4003f20:	880f883a 	mov	r7,r17
 4003f24:	d9801215 	stw	r6,72(sp)
 4003f28:	800d883a 	mov	r6,r16
 4003f2c:	db001615 	stw	r12,88(sp)
 4003f30:	15c00044 	addi	r23,r2,1
 4003f34:	400be580 	call	400be58 <__muldf3>
 4003f38:	d9401017 	ldw	r5,64(sp)
 4003f3c:	d9000f17 	ldw	r4,60(sp)
 4003f40:	d8c01515 	stw	r3,84(sp)
 4003f44:	d8801415 	stw	r2,80(sp)
 4003f48:	400cfc00 	call	400cfc0 <__fixdfsi>
 4003f4c:	1009883a 	mov	r4,r2
 4003f50:	1021883a 	mov	r16,r2
 4003f54:	400d0400 	call	400d040 <__floatsidf>
 4003f58:	d9000f17 	ldw	r4,60(sp)
 4003f5c:	d9401017 	ldw	r5,64(sp)
 4003f60:	100d883a 	mov	r6,r2
 4003f64:	180f883a 	mov	r7,r3
 4003f68:	400c6c40 	call	400c6c4 <__subdf3>
 4003f6c:	1829883a 	mov	r20,r3
 4003f70:	d8c00717 	ldw	r3,28(sp)
 4003f74:	84000c04 	addi	r16,r16,48
 4003f78:	1023883a 	mov	r17,r2
 4003f7c:	1c000005 	stb	r16,0(r3)
 4003f80:	db001617 	ldw	r12,88(sp)
 4003f84:	00800044 	movi	r2,1
 4003f88:	60802226 	beq	r12,r2,4004014 <_dtoa_r+0x1424>
 4003f8c:	d9c00717 	ldw	r7,28(sp)
 4003f90:	8805883a 	mov	r2,r17
 4003f94:	b82b883a 	mov	r21,r23
 4003f98:	3b19883a 	add	r12,r7,r12
 4003f9c:	6023883a 	mov	r17,r12
 4003fa0:	a007883a 	mov	r3,r20
 4003fa4:	dc800f15 	stw	r18,60(sp)
 4003fa8:	000d883a 	mov	r6,zero
 4003fac:	01d00934 	movhi	r7,16420
 4003fb0:	1009883a 	mov	r4,r2
 4003fb4:	180b883a 	mov	r5,r3
 4003fb8:	400be580 	call	400be58 <__muldf3>
 4003fbc:	180b883a 	mov	r5,r3
 4003fc0:	1009883a 	mov	r4,r2
 4003fc4:	1829883a 	mov	r20,r3
 4003fc8:	1025883a 	mov	r18,r2
 4003fcc:	400cfc00 	call	400cfc0 <__fixdfsi>
 4003fd0:	1009883a 	mov	r4,r2
 4003fd4:	1021883a 	mov	r16,r2
 4003fd8:	400d0400 	call	400d040 <__floatsidf>
 4003fdc:	100d883a 	mov	r6,r2
 4003fe0:	180f883a 	mov	r7,r3
 4003fe4:	9009883a 	mov	r4,r18
 4003fe8:	a00b883a 	mov	r5,r20
 4003fec:	84000c04 	addi	r16,r16,48
 4003ff0:	400c6c40 	call	400c6c4 <__subdf3>
 4003ff4:	ad400044 	addi	r21,r21,1
 4003ff8:	ac3fffc5 	stb	r16,-1(r21)
 4003ffc:	ac7fea1e 	bne	r21,r17,4003fa8 <__alt_mem_onchip_memory+0xfbffbfa8>
 4004000:	1023883a 	mov	r17,r2
 4004004:	d8801217 	ldw	r2,72(sp)
 4004008:	dc800f17 	ldw	r18,60(sp)
 400400c:	1829883a 	mov	r20,r3
 4004010:	b8af883a 	add	r23,r23,r2
 4004014:	d9001417 	ldw	r4,80(sp)
 4004018:	d9401517 	ldw	r5,84(sp)
 400401c:	000d883a 	mov	r6,zero
 4004020:	01cff834 	movhi	r7,16352
 4004024:	400a9840 	call	400a984 <__adddf3>
 4004028:	880d883a 	mov	r6,r17
 400402c:	a00f883a 	mov	r7,r20
 4004030:	1009883a 	mov	r4,r2
 4004034:	180b883a 	mov	r5,r3
 4004038:	400bd640 	call	400bd64 <__ledf2>
 400403c:	10003e0e 	bge	r2,zero,4004138 <_dtoa_r+0x1548>
 4004040:	d9001317 	ldw	r4,76(sp)
 4004044:	bd3fffc3 	ldbu	r20,-1(r23)
 4004048:	d9000515 	stw	r4,20(sp)
 400404c:	003d3b06 	br	400353c <__alt_mem_onchip_memory+0xfbffb53c>
 4004050:	0027883a 	mov	r19,zero
 4004054:	003f1b06 	br	4003cc4 <__alt_mem_onchip_memory+0xfbffbcc4>
 4004058:	d8800817 	ldw	r2,32(sp)
 400405c:	11e9c83a 	sub	r20,r2,r7
 4004060:	0005883a 	mov	r2,zero
 4004064:	003d5406 	br	40035b8 <__alt_mem_onchip_memory+0xfbffb5b8>
 4004068:	00800044 	movi	r2,1
 400406c:	003dc706 	br	400378c <__alt_mem_onchip_memory+0xfbffb78c>
 4004070:	d8c00217 	ldw	r3,8(sp)
 4004074:	00800d84 	movi	r2,54
 4004078:	dd400a17 	ldw	r21,40(sp)
 400407c:	10c5c83a 	sub	r2,r2,r3
 4004080:	dd000817 	ldw	r20,32(sp)
 4004084:	003d4c06 	br	40035b8 <__alt_mem_onchip_memory+0xfbffb5b8>
 4004088:	dc800f15 	stw	r18,60(sp)
 400408c:	dcc01015 	stw	r19,64(sp)
 4004090:	04000084 	movi	r16,2
 4004094:	003bed06 	br	400304c <__alt_mem_onchip_memory+0xfbffb04c>
 4004098:	d9000617 	ldw	r4,24(sp)
 400409c:	203f0d26 	beq	r4,zero,4003cd4 <__alt_mem_onchip_memory+0xfbffbcd4>
 40040a0:	d9800c17 	ldw	r6,48(sp)
 40040a4:	01bcab0e 	bge	zero,r6,4003354 <__alt_mem_onchip_memory+0xfbffb354>
 40040a8:	d9401017 	ldw	r5,64(sp)
 40040ac:	d9000f17 	ldw	r4,60(sp)
 40040b0:	000d883a 	mov	r6,zero
 40040b4:	01d00934 	movhi	r7,16420
 40040b8:	400be580 	call	400be58 <__muldf3>
 40040bc:	81000044 	addi	r4,r16,1
 40040c0:	d8800f15 	stw	r2,60(sp)
 40040c4:	d8c01015 	stw	r3,64(sp)
 40040c8:	400d0400 	call	400d040 <__floatsidf>
 40040cc:	d9800f17 	ldw	r6,60(sp)
 40040d0:	d9c01017 	ldw	r7,64(sp)
 40040d4:	1009883a 	mov	r4,r2
 40040d8:	180b883a 	mov	r5,r3
 40040dc:	400be580 	call	400be58 <__muldf3>
 40040e0:	01d00734 	movhi	r7,16412
 40040e4:	000d883a 	mov	r6,zero
 40040e8:	1009883a 	mov	r4,r2
 40040ec:	180b883a 	mov	r5,r3
 40040f0:	400a9840 	call	400a984 <__adddf3>
 40040f4:	d9c00517 	ldw	r7,20(sp)
 40040f8:	047f3034 	movhi	r17,64704
 40040fc:	1021883a 	mov	r16,r2
 4004100:	39ffffc4 	addi	r7,r7,-1
 4004104:	d9c01315 	stw	r7,76(sp)
 4004108:	1c63883a 	add	r17,r3,r17
 400410c:	db000c17 	ldw	r12,48(sp)
 4004110:	003bea06 	br	40030bc <__alt_mem_onchip_memory+0xfbffb0bc>
 4004114:	dc000915 	stw	r16,36(sp)
 4004118:	003e0e06 	br	4003954 <__alt_mem_onchip_memory+0xfbffb954>
 400411c:	01000e44 	movi	r4,57
 4004120:	8825883a 	mov	r18,r17
 4004124:	9dc00044 	addi	r23,r19,1
 4004128:	99000005 	stb	r4,0(r19)
 400412c:	a023883a 	mov	r17,r20
 4004130:	dc000915 	stw	r16,36(sp)
 4004134:	003da406 	br	40037c8 <__alt_mem_onchip_memory+0xfbffb7c8>
 4004138:	d9801417 	ldw	r6,80(sp)
 400413c:	d9c01517 	ldw	r7,84(sp)
 4004140:	0009883a 	mov	r4,zero
 4004144:	014ff834 	movhi	r5,16352
 4004148:	400c6c40 	call	400c6c4 <__subdf3>
 400414c:	880d883a 	mov	r6,r17
 4004150:	a00f883a 	mov	r7,r20
 4004154:	1009883a 	mov	r4,r2
 4004158:	180b883a 	mov	r5,r3
 400415c:	400bc880 	call	400bc88 <__gedf2>
 4004160:	00bc7c0e 	bge	zero,r2,4003354 <__alt_mem_onchip_memory+0xfbffb354>
 4004164:	01000c04 	movi	r4,48
 4004168:	00000106 	br	4004170 <_dtoa_r+0x1580>
 400416c:	102f883a 	mov	r23,r2
 4004170:	b8bfffc4 	addi	r2,r23,-1
 4004174:	10c00007 	ldb	r3,0(r2)
 4004178:	193ffc26 	beq	r3,r4,400416c <__alt_mem_onchip_memory+0xfbffc16c>
 400417c:	d9801317 	ldw	r6,76(sp)
 4004180:	d9800515 	stw	r6,20(sp)
 4004184:	003c4406 	br	4003298 <__alt_mem_onchip_memory+0xfbffb298>
 4004188:	d9801317 	ldw	r6,76(sp)
 400418c:	d9800515 	stw	r6,20(sp)
 4004190:	003cea06 	br	400353c <__alt_mem_onchip_memory+0xfbffb53c>
 4004194:	dd800f17 	ldw	r22,60(sp)
 4004198:	dcc01017 	ldw	r19,64(sp)
 400419c:	dc801217 	ldw	r18,72(sp)
 40041a0:	003c6c06 	br	4003354 <__alt_mem_onchip_memory+0xfbffb354>
 40041a4:	903e031e 	bne	r18,zero,40039b4 <__alt_mem_onchip_memory+0xfbffb9b4>
 40041a8:	003ebb06 	br	4003c98 <__alt_mem_onchip_memory+0xfbffbc98>
 40041ac:	103e6c1e 	bne	r2,zero,4003b60 <__alt_mem_onchip_memory+0xfbffbb60>
 40041b0:	4080004c 	andi	r2,r8,1
 40041b4:	103e6a26 	beq	r2,zero,4003b60 <__alt_mem_onchip_memory+0xfbffbb60>
 40041b8:	003e6606 	br	4003b54 <__alt_mem_onchip_memory+0xfbffbb54>
 40041bc:	d8c00317 	ldw	r3,12(sp)
 40041c0:	00800084 	movi	r2,2
 40041c4:	10c02916 	blt	r2,r3,400426c <_dtoa_r+0x167c>
 40041c8:	d9000c17 	ldw	r4,48(sp)
 40041cc:	003e8806 	br	4003bf0 <__alt_mem_onchip_memory+0xfbffbbf0>
 40041d0:	04000084 	movi	r16,2
 40041d4:	003b9d06 	br	400304c <__alt_mem_onchip_memory+0xfbffb04c>
 40041d8:	d9001317 	ldw	r4,76(sp)
 40041dc:	d9000515 	stw	r4,20(sp)
 40041e0:	003cd606 	br	400353c <__alt_mem_onchip_memory+0xfbffb53c>
 40041e4:	d8801317 	ldw	r2,76(sp)
 40041e8:	d8800515 	stw	r2,20(sp)
 40041ec:	003c2a06 	br	4003298 <__alt_mem_onchip_memory+0xfbffb298>
 40041f0:	d9800317 	ldw	r6,12(sp)
 40041f4:	00800084 	movi	r2,2
 40041f8:	11801516 	blt	r2,r6,4004250 <_dtoa_r+0x1660>
 40041fc:	d9c00c17 	ldw	r7,48(sp)
 4004200:	d9c00615 	stw	r7,24(sp)
 4004204:	003df706 	br	40039e4 <__alt_mem_onchip_memory+0xfbffb9e4>
 4004208:	193d3926 	beq	r3,r4,40036f0 <__alt_mem_onchip_memory+0xfbffb6f0>
 400420c:	00c00f04 	movi	r3,60
 4004210:	1885c83a 	sub	r2,r3,r2
 4004214:	003ddf06 	br	4003994 <__alt_mem_onchip_memory+0xfbffb994>
 4004218:	e009883a 	mov	r4,fp
 400421c:	e0001115 	stw	zero,68(fp)
 4004220:	000b883a 	mov	r5,zero
 4004224:	40062a80 	call	40062a8 <_Balloc>
 4004228:	d8800715 	stw	r2,28(sp)
 400422c:	d8c00717 	ldw	r3,28(sp)
 4004230:	00bfffc4 	movi	r2,-1
 4004234:	01000044 	movi	r4,1
 4004238:	d8800c15 	stw	r2,48(sp)
 400423c:	e0c01015 	stw	r3,64(fp)
 4004240:	d9000b15 	stw	r4,44(sp)
 4004244:	d8800615 	stw	r2,24(sp)
 4004248:	d8002215 	stw	zero,136(sp)
 400424c:	003c4106 	br	4003354 <__alt_mem_onchip_memory+0xfbffb354>
 4004250:	d8c00c17 	ldw	r3,48(sp)
 4004254:	d8c00615 	stw	r3,24(sp)
 4004258:	003e7006 	br	4003c1c <__alt_mem_onchip_memory+0xfbffbc1c>
 400425c:	04400044 	movi	r17,1
 4004260:	003b2006 	br	4002ee4 <__alt_mem_onchip_memory+0xfbffaee4>
 4004264:	000b883a 	mov	r5,zero
 4004268:	003b3d06 	br	4002f60 <__alt_mem_onchip_memory+0xfbffaf60>
 400426c:	d8800c17 	ldw	r2,48(sp)
 4004270:	d8800615 	stw	r2,24(sp)
 4004274:	003e6906 	br	4003c1c <__alt_mem_onchip_memory+0xfbffbc1c>

04004278 <__sflush_r>:
 4004278:	2880030b 	ldhu	r2,12(r5)
 400427c:	defffb04 	addi	sp,sp,-20
 4004280:	dcc00315 	stw	r19,12(sp)
 4004284:	dc400115 	stw	r17,4(sp)
 4004288:	dfc00415 	stw	ra,16(sp)
 400428c:	dc800215 	stw	r18,8(sp)
 4004290:	dc000015 	stw	r16,0(sp)
 4004294:	10c0020c 	andi	r3,r2,8
 4004298:	2823883a 	mov	r17,r5
 400429c:	2027883a 	mov	r19,r4
 40042a0:	1800311e 	bne	r3,zero,4004368 <__sflush_r+0xf0>
 40042a4:	28c00117 	ldw	r3,4(r5)
 40042a8:	10820014 	ori	r2,r2,2048
 40042ac:	2880030d 	sth	r2,12(r5)
 40042b0:	00c04b0e 	bge	zero,r3,40043e0 <__sflush_r+0x168>
 40042b4:	8a000a17 	ldw	r8,40(r17)
 40042b8:	40002326 	beq	r8,zero,4004348 <__sflush_r+0xd0>
 40042bc:	9c000017 	ldw	r16,0(r19)
 40042c0:	10c4000c 	andi	r3,r2,4096
 40042c4:	98000015 	stw	zero,0(r19)
 40042c8:	18004826 	beq	r3,zero,40043ec <__sflush_r+0x174>
 40042cc:	89801417 	ldw	r6,80(r17)
 40042d0:	10c0010c 	andi	r3,r2,4
 40042d4:	18000626 	beq	r3,zero,40042f0 <__sflush_r+0x78>
 40042d8:	88c00117 	ldw	r3,4(r17)
 40042dc:	88800c17 	ldw	r2,48(r17)
 40042e0:	30cdc83a 	sub	r6,r6,r3
 40042e4:	10000226 	beq	r2,zero,40042f0 <__sflush_r+0x78>
 40042e8:	88800f17 	ldw	r2,60(r17)
 40042ec:	308dc83a 	sub	r6,r6,r2
 40042f0:	89400717 	ldw	r5,28(r17)
 40042f4:	000f883a 	mov	r7,zero
 40042f8:	9809883a 	mov	r4,r19
 40042fc:	403ee83a 	callr	r8
 4004300:	00ffffc4 	movi	r3,-1
 4004304:	10c04426 	beq	r2,r3,4004418 <__sflush_r+0x1a0>
 4004308:	88c0030b 	ldhu	r3,12(r17)
 400430c:	89000417 	ldw	r4,16(r17)
 4004310:	88000115 	stw	zero,4(r17)
 4004314:	197dffcc 	andi	r5,r3,63487
 4004318:	8940030d 	sth	r5,12(r17)
 400431c:	89000015 	stw	r4,0(r17)
 4004320:	18c4000c 	andi	r3,r3,4096
 4004324:	18002c1e 	bne	r3,zero,40043d8 <__sflush_r+0x160>
 4004328:	89400c17 	ldw	r5,48(r17)
 400432c:	9c000015 	stw	r16,0(r19)
 4004330:	28000526 	beq	r5,zero,4004348 <__sflush_r+0xd0>
 4004334:	88801004 	addi	r2,r17,64
 4004338:	28800226 	beq	r5,r2,4004344 <__sflush_r+0xcc>
 400433c:	9809883a 	mov	r4,r19
 4004340:	40049f40 	call	40049f4 <_free_r>
 4004344:	88000c15 	stw	zero,48(r17)
 4004348:	0005883a 	mov	r2,zero
 400434c:	dfc00417 	ldw	ra,16(sp)
 4004350:	dcc00317 	ldw	r19,12(sp)
 4004354:	dc800217 	ldw	r18,8(sp)
 4004358:	dc400117 	ldw	r17,4(sp)
 400435c:	dc000017 	ldw	r16,0(sp)
 4004360:	dec00504 	addi	sp,sp,20
 4004364:	f800283a 	ret
 4004368:	2c800417 	ldw	r18,16(r5)
 400436c:	903ff626 	beq	r18,zero,4004348 <__alt_mem_onchip_memory+0xfbffc348>
 4004370:	2c000017 	ldw	r16,0(r5)
 4004374:	108000cc 	andi	r2,r2,3
 4004378:	2c800015 	stw	r18,0(r5)
 400437c:	84a1c83a 	sub	r16,r16,r18
 4004380:	1000131e 	bne	r2,zero,40043d0 <__sflush_r+0x158>
 4004384:	28800517 	ldw	r2,20(r5)
 4004388:	88800215 	stw	r2,8(r17)
 400438c:	04000316 	blt	zero,r16,400439c <__sflush_r+0x124>
 4004390:	003fed06 	br	4004348 <__alt_mem_onchip_memory+0xfbffc348>
 4004394:	90a5883a 	add	r18,r18,r2
 4004398:	043feb0e 	bge	zero,r16,4004348 <__alt_mem_onchip_memory+0xfbffc348>
 400439c:	88800917 	ldw	r2,36(r17)
 40043a0:	89400717 	ldw	r5,28(r17)
 40043a4:	800f883a 	mov	r7,r16
 40043a8:	900d883a 	mov	r6,r18
 40043ac:	9809883a 	mov	r4,r19
 40043b0:	103ee83a 	callr	r2
 40043b4:	80a1c83a 	sub	r16,r16,r2
 40043b8:	00bff616 	blt	zero,r2,4004394 <__alt_mem_onchip_memory+0xfbffc394>
 40043bc:	88c0030b 	ldhu	r3,12(r17)
 40043c0:	00bfffc4 	movi	r2,-1
 40043c4:	18c01014 	ori	r3,r3,64
 40043c8:	88c0030d 	sth	r3,12(r17)
 40043cc:	003fdf06 	br	400434c <__alt_mem_onchip_memory+0xfbffc34c>
 40043d0:	0005883a 	mov	r2,zero
 40043d4:	003fec06 	br	4004388 <__alt_mem_onchip_memory+0xfbffc388>
 40043d8:	88801415 	stw	r2,80(r17)
 40043dc:	003fd206 	br	4004328 <__alt_mem_onchip_memory+0xfbffc328>
 40043e0:	28c00f17 	ldw	r3,60(r5)
 40043e4:	00ffb316 	blt	zero,r3,40042b4 <__alt_mem_onchip_memory+0xfbffc2b4>
 40043e8:	003fd706 	br	4004348 <__alt_mem_onchip_memory+0xfbffc348>
 40043ec:	89400717 	ldw	r5,28(r17)
 40043f0:	000d883a 	mov	r6,zero
 40043f4:	01c00044 	movi	r7,1
 40043f8:	9809883a 	mov	r4,r19
 40043fc:	403ee83a 	callr	r8
 4004400:	100d883a 	mov	r6,r2
 4004404:	00bfffc4 	movi	r2,-1
 4004408:	30801426 	beq	r6,r2,400445c <__sflush_r+0x1e4>
 400440c:	8880030b 	ldhu	r2,12(r17)
 4004410:	8a000a17 	ldw	r8,40(r17)
 4004414:	003fae06 	br	40042d0 <__alt_mem_onchip_memory+0xfbffc2d0>
 4004418:	98c00017 	ldw	r3,0(r19)
 400441c:	183fba26 	beq	r3,zero,4004308 <__alt_mem_onchip_memory+0xfbffc308>
 4004420:	01000744 	movi	r4,29
 4004424:	19000626 	beq	r3,r4,4004440 <__sflush_r+0x1c8>
 4004428:	01000584 	movi	r4,22
 400442c:	19000426 	beq	r3,r4,4004440 <__sflush_r+0x1c8>
 4004430:	88c0030b 	ldhu	r3,12(r17)
 4004434:	18c01014 	ori	r3,r3,64
 4004438:	88c0030d 	sth	r3,12(r17)
 400443c:	003fc306 	br	400434c <__alt_mem_onchip_memory+0xfbffc34c>
 4004440:	8880030b 	ldhu	r2,12(r17)
 4004444:	88c00417 	ldw	r3,16(r17)
 4004448:	88000115 	stw	zero,4(r17)
 400444c:	10bdffcc 	andi	r2,r2,63487
 4004450:	8880030d 	sth	r2,12(r17)
 4004454:	88c00015 	stw	r3,0(r17)
 4004458:	003fb306 	br	4004328 <__alt_mem_onchip_memory+0xfbffc328>
 400445c:	98800017 	ldw	r2,0(r19)
 4004460:	103fea26 	beq	r2,zero,400440c <__alt_mem_onchip_memory+0xfbffc40c>
 4004464:	00c00744 	movi	r3,29
 4004468:	10c00226 	beq	r2,r3,4004474 <__sflush_r+0x1fc>
 400446c:	00c00584 	movi	r3,22
 4004470:	10c0031e 	bne	r2,r3,4004480 <__sflush_r+0x208>
 4004474:	9c000015 	stw	r16,0(r19)
 4004478:	0005883a 	mov	r2,zero
 400447c:	003fb306 	br	400434c <__alt_mem_onchip_memory+0xfbffc34c>
 4004480:	88c0030b 	ldhu	r3,12(r17)
 4004484:	3005883a 	mov	r2,r6
 4004488:	18c01014 	ori	r3,r3,64
 400448c:	88c0030d 	sth	r3,12(r17)
 4004490:	003fae06 	br	400434c <__alt_mem_onchip_memory+0xfbffc34c>

04004494 <_fflush_r>:
 4004494:	defffd04 	addi	sp,sp,-12
 4004498:	dc000115 	stw	r16,4(sp)
 400449c:	dfc00215 	stw	ra,8(sp)
 40044a0:	2021883a 	mov	r16,r4
 40044a4:	20000226 	beq	r4,zero,40044b0 <_fflush_r+0x1c>
 40044a8:	20800e17 	ldw	r2,56(r4)
 40044ac:	10000c26 	beq	r2,zero,40044e0 <_fflush_r+0x4c>
 40044b0:	2880030f 	ldh	r2,12(r5)
 40044b4:	1000051e 	bne	r2,zero,40044cc <_fflush_r+0x38>
 40044b8:	0005883a 	mov	r2,zero
 40044bc:	dfc00217 	ldw	ra,8(sp)
 40044c0:	dc000117 	ldw	r16,4(sp)
 40044c4:	dec00304 	addi	sp,sp,12
 40044c8:	f800283a 	ret
 40044cc:	8009883a 	mov	r4,r16
 40044d0:	dfc00217 	ldw	ra,8(sp)
 40044d4:	dc000117 	ldw	r16,4(sp)
 40044d8:	dec00304 	addi	sp,sp,12
 40044dc:	40042781 	jmpi	4004278 <__sflush_r>
 40044e0:	d9400015 	stw	r5,0(sp)
 40044e4:	40048800 	call	4004880 <__sinit>
 40044e8:	d9400017 	ldw	r5,0(sp)
 40044ec:	003ff006 	br	40044b0 <__alt_mem_onchip_memory+0xfbffc4b0>

040044f0 <fflush>:
 40044f0:	20000526 	beq	r4,zero,4004508 <fflush+0x18>
 40044f4:	00810074 	movhi	r2,1025
 40044f8:	1085b904 	addi	r2,r2,5860
 40044fc:	200b883a 	mov	r5,r4
 4004500:	11000017 	ldw	r4,0(r2)
 4004504:	40044941 	jmpi	4004494 <_fflush_r>
 4004508:	00810074 	movhi	r2,1025
 400450c:	1085b804 	addi	r2,r2,5856
 4004510:	11000017 	ldw	r4,0(r2)
 4004514:	01410034 	movhi	r5,1024
 4004518:	29512504 	addi	r5,r5,17556
 400451c:	40052901 	jmpi	4005290 <_fwalk_reent>

04004520 <__fp_unlock>:
 4004520:	0005883a 	mov	r2,zero
 4004524:	f800283a 	ret

04004528 <_cleanup_r>:
 4004528:	01410074 	movhi	r5,1025
 400452c:	29650b04 	addi	r5,r5,-27604
 4004530:	40052901 	jmpi	4005290 <_fwalk_reent>

04004534 <__sinit.part.1>:
 4004534:	defff704 	addi	sp,sp,-36
 4004538:	00c10034 	movhi	r3,1024
 400453c:	dfc00815 	stw	ra,32(sp)
 4004540:	ddc00715 	stw	r23,28(sp)
 4004544:	dd800615 	stw	r22,24(sp)
 4004548:	dd400515 	stw	r21,20(sp)
 400454c:	dd000415 	stw	r20,16(sp)
 4004550:	dcc00315 	stw	r19,12(sp)
 4004554:	dc800215 	stw	r18,8(sp)
 4004558:	dc400115 	stw	r17,4(sp)
 400455c:	dc000015 	stw	r16,0(sp)
 4004560:	18d14a04 	addi	r3,r3,17704
 4004564:	24000117 	ldw	r16,4(r4)
 4004568:	20c00f15 	stw	r3,60(r4)
 400456c:	2080bb04 	addi	r2,r4,748
 4004570:	00c000c4 	movi	r3,3
 4004574:	20c0b915 	stw	r3,740(r4)
 4004578:	2080ba15 	stw	r2,744(r4)
 400457c:	2000b815 	stw	zero,736(r4)
 4004580:	05c00204 	movi	r23,8
 4004584:	00800104 	movi	r2,4
 4004588:	2025883a 	mov	r18,r4
 400458c:	b80d883a 	mov	r6,r23
 4004590:	81001704 	addi	r4,r16,92
 4004594:	000b883a 	mov	r5,zero
 4004598:	80000015 	stw	zero,0(r16)
 400459c:	80000115 	stw	zero,4(r16)
 40045a0:	80000215 	stw	zero,8(r16)
 40045a4:	8080030d 	sth	r2,12(r16)
 40045a8:	80001915 	stw	zero,100(r16)
 40045ac:	8000038d 	sth	zero,14(r16)
 40045b0:	80000415 	stw	zero,16(r16)
 40045b4:	80000515 	stw	zero,20(r16)
 40045b8:	80000615 	stw	zero,24(r16)
 40045bc:	40061800 	call	4006180 <memset>
 40045c0:	05810034 	movhi	r22,1024
 40045c4:	94400217 	ldw	r17,8(r18)
 40045c8:	05410034 	movhi	r21,1024
 40045cc:	05010034 	movhi	r20,1024
 40045d0:	04c10034 	movhi	r19,1024
 40045d4:	b59e6304 	addi	r22,r22,31116
 40045d8:	ad5e7a04 	addi	r21,r21,31208
 40045dc:	a51e9904 	addi	r20,r20,31332
 40045e0:	9cdeb004 	addi	r19,r19,31424
 40045e4:	85800815 	stw	r22,32(r16)
 40045e8:	85400915 	stw	r21,36(r16)
 40045ec:	85000a15 	stw	r20,40(r16)
 40045f0:	84c00b15 	stw	r19,44(r16)
 40045f4:	84000715 	stw	r16,28(r16)
 40045f8:	00800284 	movi	r2,10
 40045fc:	8880030d 	sth	r2,12(r17)
 4004600:	00800044 	movi	r2,1
 4004604:	b80d883a 	mov	r6,r23
 4004608:	89001704 	addi	r4,r17,92
 400460c:	000b883a 	mov	r5,zero
 4004610:	88000015 	stw	zero,0(r17)
 4004614:	88000115 	stw	zero,4(r17)
 4004618:	88000215 	stw	zero,8(r17)
 400461c:	88001915 	stw	zero,100(r17)
 4004620:	8880038d 	sth	r2,14(r17)
 4004624:	88000415 	stw	zero,16(r17)
 4004628:	88000515 	stw	zero,20(r17)
 400462c:	88000615 	stw	zero,24(r17)
 4004630:	40061800 	call	4006180 <memset>
 4004634:	94000317 	ldw	r16,12(r18)
 4004638:	00800484 	movi	r2,18
 400463c:	8c400715 	stw	r17,28(r17)
 4004640:	8d800815 	stw	r22,32(r17)
 4004644:	8d400915 	stw	r21,36(r17)
 4004648:	8d000a15 	stw	r20,40(r17)
 400464c:	8cc00b15 	stw	r19,44(r17)
 4004650:	8080030d 	sth	r2,12(r16)
 4004654:	00800084 	movi	r2,2
 4004658:	80000015 	stw	zero,0(r16)
 400465c:	80000115 	stw	zero,4(r16)
 4004660:	80000215 	stw	zero,8(r16)
 4004664:	80001915 	stw	zero,100(r16)
 4004668:	8080038d 	sth	r2,14(r16)
 400466c:	80000415 	stw	zero,16(r16)
 4004670:	80000515 	stw	zero,20(r16)
 4004674:	80000615 	stw	zero,24(r16)
 4004678:	b80d883a 	mov	r6,r23
 400467c:	000b883a 	mov	r5,zero
 4004680:	81001704 	addi	r4,r16,92
 4004684:	40061800 	call	4006180 <memset>
 4004688:	00800044 	movi	r2,1
 400468c:	84000715 	stw	r16,28(r16)
 4004690:	85800815 	stw	r22,32(r16)
 4004694:	85400915 	stw	r21,36(r16)
 4004698:	85000a15 	stw	r20,40(r16)
 400469c:	84c00b15 	stw	r19,44(r16)
 40046a0:	90800e15 	stw	r2,56(r18)
 40046a4:	dfc00817 	ldw	ra,32(sp)
 40046a8:	ddc00717 	ldw	r23,28(sp)
 40046ac:	dd800617 	ldw	r22,24(sp)
 40046b0:	dd400517 	ldw	r21,20(sp)
 40046b4:	dd000417 	ldw	r20,16(sp)
 40046b8:	dcc00317 	ldw	r19,12(sp)
 40046bc:	dc800217 	ldw	r18,8(sp)
 40046c0:	dc400117 	ldw	r17,4(sp)
 40046c4:	dc000017 	ldw	r16,0(sp)
 40046c8:	dec00904 	addi	sp,sp,36
 40046cc:	f800283a 	ret

040046d0 <__fp_lock>:
 40046d0:	0005883a 	mov	r2,zero
 40046d4:	f800283a 	ret

040046d8 <__sfmoreglue>:
 40046d8:	defffc04 	addi	sp,sp,-16
 40046dc:	dc800215 	stw	r18,8(sp)
 40046e0:	2825883a 	mov	r18,r5
 40046e4:	dc000015 	stw	r16,0(sp)
 40046e8:	01401a04 	movi	r5,104
 40046ec:	2021883a 	mov	r16,r4
 40046f0:	913fffc4 	addi	r4,r18,-1
 40046f4:	dfc00315 	stw	ra,12(sp)
 40046f8:	dc400115 	stw	r17,4(sp)
 40046fc:	400a95c0 	call	400a95c <__mulsi3>
 4004700:	8009883a 	mov	r4,r16
 4004704:	11401d04 	addi	r5,r2,116
 4004708:	1023883a 	mov	r17,r2
 400470c:	40055ec0 	call	40055ec <_malloc_r>
 4004710:	1021883a 	mov	r16,r2
 4004714:	10000726 	beq	r2,zero,4004734 <__sfmoreglue+0x5c>
 4004718:	11000304 	addi	r4,r2,12
 400471c:	10000015 	stw	zero,0(r2)
 4004720:	14800115 	stw	r18,4(r2)
 4004724:	11000215 	stw	r4,8(r2)
 4004728:	89801a04 	addi	r6,r17,104
 400472c:	000b883a 	mov	r5,zero
 4004730:	40061800 	call	4006180 <memset>
 4004734:	8005883a 	mov	r2,r16
 4004738:	dfc00317 	ldw	ra,12(sp)
 400473c:	dc800217 	ldw	r18,8(sp)
 4004740:	dc400117 	ldw	r17,4(sp)
 4004744:	dc000017 	ldw	r16,0(sp)
 4004748:	dec00404 	addi	sp,sp,16
 400474c:	f800283a 	ret

04004750 <__sfp>:
 4004750:	defffb04 	addi	sp,sp,-20
 4004754:	dc000015 	stw	r16,0(sp)
 4004758:	04010074 	movhi	r16,1025
 400475c:	8405b804 	addi	r16,r16,5856
 4004760:	dcc00315 	stw	r19,12(sp)
 4004764:	2027883a 	mov	r19,r4
 4004768:	81000017 	ldw	r4,0(r16)
 400476c:	dfc00415 	stw	ra,16(sp)
 4004770:	dc800215 	stw	r18,8(sp)
 4004774:	20800e17 	ldw	r2,56(r4)
 4004778:	dc400115 	stw	r17,4(sp)
 400477c:	1000021e 	bne	r2,zero,4004788 <__sfp+0x38>
 4004780:	40045340 	call	4004534 <__sinit.part.1>
 4004784:	81000017 	ldw	r4,0(r16)
 4004788:	2480b804 	addi	r18,r4,736
 400478c:	047fffc4 	movi	r17,-1
 4004790:	91000117 	ldw	r4,4(r18)
 4004794:	94000217 	ldw	r16,8(r18)
 4004798:	213fffc4 	addi	r4,r4,-1
 400479c:	20000a16 	blt	r4,zero,40047c8 <__sfp+0x78>
 40047a0:	8080030f 	ldh	r2,12(r16)
 40047a4:	10000c26 	beq	r2,zero,40047d8 <__sfp+0x88>
 40047a8:	80c01d04 	addi	r3,r16,116
 40047ac:	00000206 	br	40047b8 <__sfp+0x68>
 40047b0:	18bfe60f 	ldh	r2,-104(r3)
 40047b4:	10000826 	beq	r2,zero,40047d8 <__sfp+0x88>
 40047b8:	213fffc4 	addi	r4,r4,-1
 40047bc:	1c3ffd04 	addi	r16,r3,-12
 40047c0:	18c01a04 	addi	r3,r3,104
 40047c4:	247ffa1e 	bne	r4,r17,40047b0 <__alt_mem_onchip_memory+0xfbffc7b0>
 40047c8:	90800017 	ldw	r2,0(r18)
 40047cc:	10001d26 	beq	r2,zero,4004844 <__sfp+0xf4>
 40047d0:	1025883a 	mov	r18,r2
 40047d4:	003fee06 	br	4004790 <__alt_mem_onchip_memory+0xfbffc790>
 40047d8:	00bfffc4 	movi	r2,-1
 40047dc:	8080038d 	sth	r2,14(r16)
 40047e0:	00800044 	movi	r2,1
 40047e4:	8080030d 	sth	r2,12(r16)
 40047e8:	80001915 	stw	zero,100(r16)
 40047ec:	80000015 	stw	zero,0(r16)
 40047f0:	80000215 	stw	zero,8(r16)
 40047f4:	80000115 	stw	zero,4(r16)
 40047f8:	80000415 	stw	zero,16(r16)
 40047fc:	80000515 	stw	zero,20(r16)
 4004800:	80000615 	stw	zero,24(r16)
 4004804:	01800204 	movi	r6,8
 4004808:	000b883a 	mov	r5,zero
 400480c:	81001704 	addi	r4,r16,92
 4004810:	40061800 	call	4006180 <memset>
 4004814:	8005883a 	mov	r2,r16
 4004818:	80000c15 	stw	zero,48(r16)
 400481c:	80000d15 	stw	zero,52(r16)
 4004820:	80001115 	stw	zero,68(r16)
 4004824:	80001215 	stw	zero,72(r16)
 4004828:	dfc00417 	ldw	ra,16(sp)
 400482c:	dcc00317 	ldw	r19,12(sp)
 4004830:	dc800217 	ldw	r18,8(sp)
 4004834:	dc400117 	ldw	r17,4(sp)
 4004838:	dc000017 	ldw	r16,0(sp)
 400483c:	dec00504 	addi	sp,sp,20
 4004840:	f800283a 	ret
 4004844:	01400104 	movi	r5,4
 4004848:	9809883a 	mov	r4,r19
 400484c:	40046d80 	call	40046d8 <__sfmoreglue>
 4004850:	90800015 	stw	r2,0(r18)
 4004854:	103fde1e 	bne	r2,zero,40047d0 <__alt_mem_onchip_memory+0xfbffc7d0>
 4004858:	00800304 	movi	r2,12
 400485c:	98800015 	stw	r2,0(r19)
 4004860:	0005883a 	mov	r2,zero
 4004864:	003ff006 	br	4004828 <__alt_mem_onchip_memory+0xfbffc828>

04004868 <_cleanup>:
 4004868:	00810074 	movhi	r2,1025
 400486c:	1085b804 	addi	r2,r2,5856
 4004870:	11000017 	ldw	r4,0(r2)
 4004874:	01410074 	movhi	r5,1025
 4004878:	29650b04 	addi	r5,r5,-27604
 400487c:	40052901 	jmpi	4005290 <_fwalk_reent>

04004880 <__sinit>:
 4004880:	20800e17 	ldw	r2,56(r4)
 4004884:	10000126 	beq	r2,zero,400488c <__sinit+0xc>
 4004888:	f800283a 	ret
 400488c:	40045341 	jmpi	4004534 <__sinit.part.1>

04004890 <__sfp_lock_acquire>:
 4004890:	f800283a 	ret

04004894 <__sfp_lock_release>:
 4004894:	f800283a 	ret

04004898 <__sinit_lock_acquire>:
 4004898:	f800283a 	ret

0400489c <__sinit_lock_release>:
 400489c:	f800283a 	ret

040048a0 <__fp_lock_all>:
 40048a0:	00810074 	movhi	r2,1025
 40048a4:	1085b904 	addi	r2,r2,5860
 40048a8:	11000017 	ldw	r4,0(r2)
 40048ac:	01410034 	movhi	r5,1024
 40048b0:	2951b404 	addi	r5,r5,18128
 40048b4:	40051cc1 	jmpi	40051cc <_fwalk>

040048b8 <__fp_unlock_all>:
 40048b8:	00810074 	movhi	r2,1025
 40048bc:	1085b904 	addi	r2,r2,5860
 40048c0:	11000017 	ldw	r4,0(r2)
 40048c4:	01410034 	movhi	r5,1024
 40048c8:	29514804 	addi	r5,r5,17696
 40048cc:	40051cc1 	jmpi	40051cc <_fwalk>

040048d0 <_malloc_trim_r>:
 40048d0:	defffb04 	addi	sp,sp,-20
 40048d4:	dcc00315 	stw	r19,12(sp)
 40048d8:	04c10074 	movhi	r19,1025
 40048dc:	dc800215 	stw	r18,8(sp)
 40048e0:	dc400115 	stw	r17,4(sp)
 40048e4:	dc000015 	stw	r16,0(sp)
 40048e8:	dfc00415 	stw	ra,16(sp)
 40048ec:	2821883a 	mov	r16,r5
 40048f0:	9cc03404 	addi	r19,r19,208
 40048f4:	2025883a 	mov	r18,r4
 40048f8:	400d7c40 	call	400d7c4 <__malloc_lock>
 40048fc:	98800217 	ldw	r2,8(r19)
 4004900:	14400117 	ldw	r17,4(r2)
 4004904:	00bfff04 	movi	r2,-4
 4004908:	88a2703a 	and	r17,r17,r2
 400490c:	8c21c83a 	sub	r16,r17,r16
 4004910:	8403fbc4 	addi	r16,r16,4079
 4004914:	8020d33a 	srli	r16,r16,12
 4004918:	0083ffc4 	movi	r2,4095
 400491c:	843fffc4 	addi	r16,r16,-1
 4004920:	8020933a 	slli	r16,r16,12
 4004924:	1400060e 	bge	r2,r16,4004940 <_malloc_trim_r+0x70>
 4004928:	000b883a 	mov	r5,zero
 400492c:	9009883a 	mov	r4,r18
 4004930:	40079380 	call	4007938 <_sbrk_r>
 4004934:	98c00217 	ldw	r3,8(r19)
 4004938:	1c47883a 	add	r3,r3,r17
 400493c:	10c00a26 	beq	r2,r3,4004968 <_malloc_trim_r+0x98>
 4004940:	9009883a 	mov	r4,r18
 4004944:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4004948:	0005883a 	mov	r2,zero
 400494c:	dfc00417 	ldw	ra,16(sp)
 4004950:	dcc00317 	ldw	r19,12(sp)
 4004954:	dc800217 	ldw	r18,8(sp)
 4004958:	dc400117 	ldw	r17,4(sp)
 400495c:	dc000017 	ldw	r16,0(sp)
 4004960:	dec00504 	addi	sp,sp,20
 4004964:	f800283a 	ret
 4004968:	040bc83a 	sub	r5,zero,r16
 400496c:	9009883a 	mov	r4,r18
 4004970:	40079380 	call	4007938 <_sbrk_r>
 4004974:	00ffffc4 	movi	r3,-1
 4004978:	10c00d26 	beq	r2,r3,40049b0 <_malloc_trim_r+0xe0>
 400497c:	00c10074 	movhi	r3,1025
 4004980:	18cc9304 	addi	r3,r3,12876
 4004984:	18800017 	ldw	r2,0(r3)
 4004988:	99000217 	ldw	r4,8(r19)
 400498c:	8c23c83a 	sub	r17,r17,r16
 4004990:	8c400054 	ori	r17,r17,1
 4004994:	1421c83a 	sub	r16,r2,r16
 4004998:	24400115 	stw	r17,4(r4)
 400499c:	9009883a 	mov	r4,r18
 40049a0:	1c000015 	stw	r16,0(r3)
 40049a4:	400d7e80 	call	400d7e8 <__malloc_unlock>
 40049a8:	00800044 	movi	r2,1
 40049ac:	003fe706 	br	400494c <__alt_mem_onchip_memory+0xfbffc94c>
 40049b0:	000b883a 	mov	r5,zero
 40049b4:	9009883a 	mov	r4,r18
 40049b8:	40079380 	call	4007938 <_sbrk_r>
 40049bc:	99000217 	ldw	r4,8(r19)
 40049c0:	014003c4 	movi	r5,15
 40049c4:	1107c83a 	sub	r3,r2,r4
 40049c8:	28ffdd0e 	bge	r5,r3,4004940 <__alt_mem_onchip_memory+0xfbffc940>
 40049cc:	01410074 	movhi	r5,1025
 40049d0:	2945bb04 	addi	r5,r5,5868
 40049d4:	29400017 	ldw	r5,0(r5)
 40049d8:	18c00054 	ori	r3,r3,1
 40049dc:	20c00115 	stw	r3,4(r4)
 40049e0:	00c10074 	movhi	r3,1025
 40049e4:	1145c83a 	sub	r2,r2,r5
 40049e8:	18cc9304 	addi	r3,r3,12876
 40049ec:	18800015 	stw	r2,0(r3)
 40049f0:	003fd306 	br	4004940 <__alt_mem_onchip_memory+0xfbffc940>

040049f4 <_free_r>:
 40049f4:	28004126 	beq	r5,zero,4004afc <_free_r+0x108>
 40049f8:	defffd04 	addi	sp,sp,-12
 40049fc:	dc400115 	stw	r17,4(sp)
 4004a00:	dc000015 	stw	r16,0(sp)
 4004a04:	2023883a 	mov	r17,r4
 4004a08:	2821883a 	mov	r16,r5
 4004a0c:	dfc00215 	stw	ra,8(sp)
 4004a10:	400d7c40 	call	400d7c4 <__malloc_lock>
 4004a14:	81ffff17 	ldw	r7,-4(r16)
 4004a18:	00bfff84 	movi	r2,-2
 4004a1c:	01010074 	movhi	r4,1025
 4004a20:	81bffe04 	addi	r6,r16,-8
 4004a24:	3884703a 	and	r2,r7,r2
 4004a28:	21003404 	addi	r4,r4,208
 4004a2c:	308b883a 	add	r5,r6,r2
 4004a30:	2a400117 	ldw	r9,4(r5)
 4004a34:	22000217 	ldw	r8,8(r4)
 4004a38:	00ffff04 	movi	r3,-4
 4004a3c:	48c6703a 	and	r3,r9,r3
 4004a40:	2a005726 	beq	r5,r8,4004ba0 <_free_r+0x1ac>
 4004a44:	28c00115 	stw	r3,4(r5)
 4004a48:	39c0004c 	andi	r7,r7,1
 4004a4c:	3800091e 	bne	r7,zero,4004a74 <_free_r+0x80>
 4004a50:	823ffe17 	ldw	r8,-8(r16)
 4004a54:	22400204 	addi	r9,r4,8
 4004a58:	320dc83a 	sub	r6,r6,r8
 4004a5c:	31c00217 	ldw	r7,8(r6)
 4004a60:	1205883a 	add	r2,r2,r8
 4004a64:	3a406526 	beq	r7,r9,4004bfc <_free_r+0x208>
 4004a68:	32000317 	ldw	r8,12(r6)
 4004a6c:	3a000315 	stw	r8,12(r7)
 4004a70:	41c00215 	stw	r7,8(r8)
 4004a74:	28cf883a 	add	r7,r5,r3
 4004a78:	39c00117 	ldw	r7,4(r7)
 4004a7c:	39c0004c 	andi	r7,r7,1
 4004a80:	38003a26 	beq	r7,zero,4004b6c <_free_r+0x178>
 4004a84:	10c00054 	ori	r3,r2,1
 4004a88:	30c00115 	stw	r3,4(r6)
 4004a8c:	3087883a 	add	r3,r6,r2
 4004a90:	18800015 	stw	r2,0(r3)
 4004a94:	00c07fc4 	movi	r3,511
 4004a98:	18801936 	bltu	r3,r2,4004b00 <_free_r+0x10c>
 4004a9c:	1004d0fa 	srli	r2,r2,3
 4004aa0:	01c00044 	movi	r7,1
 4004aa4:	21400117 	ldw	r5,4(r4)
 4004aa8:	10c00044 	addi	r3,r2,1
 4004aac:	18c7883a 	add	r3,r3,r3
 4004ab0:	1005d0ba 	srai	r2,r2,2
 4004ab4:	18c7883a 	add	r3,r3,r3
 4004ab8:	18c7883a 	add	r3,r3,r3
 4004abc:	1907883a 	add	r3,r3,r4
 4004ac0:	3884983a 	sll	r2,r7,r2
 4004ac4:	19c00017 	ldw	r7,0(r3)
 4004ac8:	1a3ffe04 	addi	r8,r3,-8
 4004acc:	1144b03a 	or	r2,r2,r5
 4004ad0:	32000315 	stw	r8,12(r6)
 4004ad4:	31c00215 	stw	r7,8(r6)
 4004ad8:	20800115 	stw	r2,4(r4)
 4004adc:	19800015 	stw	r6,0(r3)
 4004ae0:	39800315 	stw	r6,12(r7)
 4004ae4:	8809883a 	mov	r4,r17
 4004ae8:	dfc00217 	ldw	ra,8(sp)
 4004aec:	dc400117 	ldw	r17,4(sp)
 4004af0:	dc000017 	ldw	r16,0(sp)
 4004af4:	dec00304 	addi	sp,sp,12
 4004af8:	400d7e81 	jmpi	400d7e8 <__malloc_unlock>
 4004afc:	f800283a 	ret
 4004b00:	100ad27a 	srli	r5,r2,9
 4004b04:	00c00104 	movi	r3,4
 4004b08:	19404a36 	bltu	r3,r5,4004c34 <_free_r+0x240>
 4004b0c:	100ad1ba 	srli	r5,r2,6
 4004b10:	28c00e44 	addi	r3,r5,57
 4004b14:	18c7883a 	add	r3,r3,r3
 4004b18:	29400e04 	addi	r5,r5,56
 4004b1c:	18c7883a 	add	r3,r3,r3
 4004b20:	18c7883a 	add	r3,r3,r3
 4004b24:	1909883a 	add	r4,r3,r4
 4004b28:	20c00017 	ldw	r3,0(r4)
 4004b2c:	01c10074 	movhi	r7,1025
 4004b30:	213ffe04 	addi	r4,r4,-8
 4004b34:	39c03404 	addi	r7,r7,208
 4004b38:	20c04426 	beq	r4,r3,4004c4c <_free_r+0x258>
 4004b3c:	01ffff04 	movi	r7,-4
 4004b40:	19400117 	ldw	r5,4(r3)
 4004b44:	29ca703a 	and	r5,r5,r7
 4004b48:	1140022e 	bgeu	r2,r5,4004b54 <_free_r+0x160>
 4004b4c:	18c00217 	ldw	r3,8(r3)
 4004b50:	20fffb1e 	bne	r4,r3,4004b40 <__alt_mem_onchip_memory+0xfbffcb40>
 4004b54:	19000317 	ldw	r4,12(r3)
 4004b58:	31000315 	stw	r4,12(r6)
 4004b5c:	30c00215 	stw	r3,8(r6)
 4004b60:	21800215 	stw	r6,8(r4)
 4004b64:	19800315 	stw	r6,12(r3)
 4004b68:	003fde06 	br	4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>
 4004b6c:	29c00217 	ldw	r7,8(r5)
 4004b70:	10c5883a 	add	r2,r2,r3
 4004b74:	00c10074 	movhi	r3,1025
 4004b78:	18c03604 	addi	r3,r3,216
 4004b7c:	38c03b26 	beq	r7,r3,4004c6c <_free_r+0x278>
 4004b80:	2a000317 	ldw	r8,12(r5)
 4004b84:	11400054 	ori	r5,r2,1
 4004b88:	3087883a 	add	r3,r6,r2
 4004b8c:	3a000315 	stw	r8,12(r7)
 4004b90:	41c00215 	stw	r7,8(r8)
 4004b94:	31400115 	stw	r5,4(r6)
 4004b98:	18800015 	stw	r2,0(r3)
 4004b9c:	003fbd06 	br	4004a94 <__alt_mem_onchip_memory+0xfbffca94>
 4004ba0:	39c0004c 	andi	r7,r7,1
 4004ba4:	10c5883a 	add	r2,r2,r3
 4004ba8:	3800071e 	bne	r7,zero,4004bc8 <_free_r+0x1d4>
 4004bac:	81fffe17 	ldw	r7,-8(r16)
 4004bb0:	31cdc83a 	sub	r6,r6,r7
 4004bb4:	30c00317 	ldw	r3,12(r6)
 4004bb8:	31400217 	ldw	r5,8(r6)
 4004bbc:	11c5883a 	add	r2,r2,r7
 4004bc0:	28c00315 	stw	r3,12(r5)
 4004bc4:	19400215 	stw	r5,8(r3)
 4004bc8:	10c00054 	ori	r3,r2,1
 4004bcc:	30c00115 	stw	r3,4(r6)
 4004bd0:	00c10074 	movhi	r3,1025
 4004bd4:	18c5bc04 	addi	r3,r3,5872
 4004bd8:	18c00017 	ldw	r3,0(r3)
 4004bdc:	21800215 	stw	r6,8(r4)
 4004be0:	10ffc036 	bltu	r2,r3,4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>
 4004be4:	00810074 	movhi	r2,1025
 4004be8:	108c8804 	addi	r2,r2,12832
 4004bec:	11400017 	ldw	r5,0(r2)
 4004bf0:	8809883a 	mov	r4,r17
 4004bf4:	40048d00 	call	40048d0 <_malloc_trim_r>
 4004bf8:	003fba06 	br	4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>
 4004bfc:	28c9883a 	add	r4,r5,r3
 4004c00:	21000117 	ldw	r4,4(r4)
 4004c04:	2100004c 	andi	r4,r4,1
 4004c08:	2000391e 	bne	r4,zero,4004cf0 <_free_r+0x2fc>
 4004c0c:	29c00217 	ldw	r7,8(r5)
 4004c10:	29000317 	ldw	r4,12(r5)
 4004c14:	1885883a 	add	r2,r3,r2
 4004c18:	10c00054 	ori	r3,r2,1
 4004c1c:	39000315 	stw	r4,12(r7)
 4004c20:	21c00215 	stw	r7,8(r4)
 4004c24:	30c00115 	stw	r3,4(r6)
 4004c28:	308d883a 	add	r6,r6,r2
 4004c2c:	30800015 	stw	r2,0(r6)
 4004c30:	003fac06 	br	4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>
 4004c34:	00c00504 	movi	r3,20
 4004c38:	19401536 	bltu	r3,r5,4004c90 <_free_r+0x29c>
 4004c3c:	28c01704 	addi	r3,r5,92
 4004c40:	18c7883a 	add	r3,r3,r3
 4004c44:	294016c4 	addi	r5,r5,91
 4004c48:	003fb406 	br	4004b1c <__alt_mem_onchip_memory+0xfbffcb1c>
 4004c4c:	280bd0ba 	srai	r5,r5,2
 4004c50:	00c00044 	movi	r3,1
 4004c54:	38800117 	ldw	r2,4(r7)
 4004c58:	194a983a 	sll	r5,r3,r5
 4004c5c:	2007883a 	mov	r3,r4
 4004c60:	2884b03a 	or	r2,r5,r2
 4004c64:	38800115 	stw	r2,4(r7)
 4004c68:	003fbb06 	br	4004b58 <__alt_mem_onchip_memory+0xfbffcb58>
 4004c6c:	21800515 	stw	r6,20(r4)
 4004c70:	21800415 	stw	r6,16(r4)
 4004c74:	10c00054 	ori	r3,r2,1
 4004c78:	31c00315 	stw	r7,12(r6)
 4004c7c:	31c00215 	stw	r7,8(r6)
 4004c80:	30c00115 	stw	r3,4(r6)
 4004c84:	308d883a 	add	r6,r6,r2
 4004c88:	30800015 	stw	r2,0(r6)
 4004c8c:	003f9506 	br	4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>
 4004c90:	00c01504 	movi	r3,84
 4004c94:	19400536 	bltu	r3,r5,4004cac <_free_r+0x2b8>
 4004c98:	100ad33a 	srli	r5,r2,12
 4004c9c:	28c01bc4 	addi	r3,r5,111
 4004ca0:	18c7883a 	add	r3,r3,r3
 4004ca4:	29401b84 	addi	r5,r5,110
 4004ca8:	003f9c06 	br	4004b1c <__alt_mem_onchip_memory+0xfbffcb1c>
 4004cac:	00c05504 	movi	r3,340
 4004cb0:	19400536 	bltu	r3,r5,4004cc8 <_free_r+0x2d4>
 4004cb4:	100ad3fa 	srli	r5,r2,15
 4004cb8:	28c01e04 	addi	r3,r5,120
 4004cbc:	18c7883a 	add	r3,r3,r3
 4004cc0:	29401dc4 	addi	r5,r5,119
 4004cc4:	003f9506 	br	4004b1c <__alt_mem_onchip_memory+0xfbffcb1c>
 4004cc8:	00c15504 	movi	r3,1364
 4004ccc:	19400536 	bltu	r3,r5,4004ce4 <_free_r+0x2f0>
 4004cd0:	100ad4ba 	srli	r5,r2,18
 4004cd4:	28c01f44 	addi	r3,r5,125
 4004cd8:	18c7883a 	add	r3,r3,r3
 4004cdc:	29401f04 	addi	r5,r5,124
 4004ce0:	003f8e06 	br	4004b1c <__alt_mem_onchip_memory+0xfbffcb1c>
 4004ce4:	00c03f84 	movi	r3,254
 4004ce8:	01401f84 	movi	r5,126
 4004cec:	003f8b06 	br	4004b1c <__alt_mem_onchip_memory+0xfbffcb1c>
 4004cf0:	10c00054 	ori	r3,r2,1
 4004cf4:	30c00115 	stw	r3,4(r6)
 4004cf8:	308d883a 	add	r6,r6,r2
 4004cfc:	30800015 	stw	r2,0(r6)
 4004d00:	003f7806 	br	4004ae4 <__alt_mem_onchip_memory+0xfbffcae4>

04004d04 <__sfvwrite_r>:
 4004d04:	30800217 	ldw	r2,8(r6)
 4004d08:	10006726 	beq	r2,zero,4004ea8 <__sfvwrite_r+0x1a4>
 4004d0c:	28c0030b 	ldhu	r3,12(r5)
 4004d10:	defff404 	addi	sp,sp,-48
 4004d14:	dd400715 	stw	r21,28(sp)
 4004d18:	dd000615 	stw	r20,24(sp)
 4004d1c:	dc000215 	stw	r16,8(sp)
 4004d20:	dfc00b15 	stw	ra,44(sp)
 4004d24:	df000a15 	stw	fp,40(sp)
 4004d28:	ddc00915 	stw	r23,36(sp)
 4004d2c:	dd800815 	stw	r22,32(sp)
 4004d30:	dcc00515 	stw	r19,20(sp)
 4004d34:	dc800415 	stw	r18,16(sp)
 4004d38:	dc400315 	stw	r17,12(sp)
 4004d3c:	1880020c 	andi	r2,r3,8
 4004d40:	2821883a 	mov	r16,r5
 4004d44:	202b883a 	mov	r21,r4
 4004d48:	3029883a 	mov	r20,r6
 4004d4c:	10002726 	beq	r2,zero,4004dec <__sfvwrite_r+0xe8>
 4004d50:	28800417 	ldw	r2,16(r5)
 4004d54:	10002526 	beq	r2,zero,4004dec <__sfvwrite_r+0xe8>
 4004d58:	1880008c 	andi	r2,r3,2
 4004d5c:	a4400017 	ldw	r17,0(r20)
 4004d60:	10002a26 	beq	r2,zero,4004e0c <__sfvwrite_r+0x108>
 4004d64:	05a00034 	movhi	r22,32768
 4004d68:	0027883a 	mov	r19,zero
 4004d6c:	0025883a 	mov	r18,zero
 4004d70:	b5bf0004 	addi	r22,r22,-1024
 4004d74:	980d883a 	mov	r6,r19
 4004d78:	a809883a 	mov	r4,r21
 4004d7c:	90004626 	beq	r18,zero,4004e98 <__sfvwrite_r+0x194>
 4004d80:	900f883a 	mov	r7,r18
 4004d84:	b480022e 	bgeu	r22,r18,4004d90 <__sfvwrite_r+0x8c>
 4004d88:	01e00034 	movhi	r7,32768
 4004d8c:	39ff0004 	addi	r7,r7,-1024
 4004d90:	80800917 	ldw	r2,36(r16)
 4004d94:	81400717 	ldw	r5,28(r16)
 4004d98:	103ee83a 	callr	r2
 4004d9c:	00805a0e 	bge	zero,r2,4004f08 <__sfvwrite_r+0x204>
 4004da0:	a0c00217 	ldw	r3,8(r20)
 4004da4:	98a7883a 	add	r19,r19,r2
 4004da8:	90a5c83a 	sub	r18,r18,r2
 4004dac:	1885c83a 	sub	r2,r3,r2
 4004db0:	a0800215 	stw	r2,8(r20)
 4004db4:	103fef1e 	bne	r2,zero,4004d74 <__alt_mem_onchip_memory+0xfbffcd74>
 4004db8:	0005883a 	mov	r2,zero
 4004dbc:	dfc00b17 	ldw	ra,44(sp)
 4004dc0:	df000a17 	ldw	fp,40(sp)
 4004dc4:	ddc00917 	ldw	r23,36(sp)
 4004dc8:	dd800817 	ldw	r22,32(sp)
 4004dcc:	dd400717 	ldw	r21,28(sp)
 4004dd0:	dd000617 	ldw	r20,24(sp)
 4004dd4:	dcc00517 	ldw	r19,20(sp)
 4004dd8:	dc800417 	ldw	r18,16(sp)
 4004ddc:	dc400317 	ldw	r17,12(sp)
 4004de0:	dc000217 	ldw	r16,8(sp)
 4004de4:	dec00c04 	addi	sp,sp,48
 4004de8:	f800283a 	ret
 4004dec:	800b883a 	mov	r5,r16
 4004df0:	a809883a 	mov	r4,r21
 4004df4:	40028740 	call	4002874 <__swsetup_r>
 4004df8:	1000ee1e 	bne	r2,zero,40051b4 <__sfvwrite_r+0x4b0>
 4004dfc:	80c0030b 	ldhu	r3,12(r16)
 4004e00:	a4400017 	ldw	r17,0(r20)
 4004e04:	1880008c 	andi	r2,r3,2
 4004e08:	103fd61e 	bne	r2,zero,4004d64 <__alt_mem_onchip_memory+0xfbffcd64>
 4004e0c:	1880004c 	andi	r2,r3,1
 4004e10:	1000421e 	bne	r2,zero,4004f1c <__sfvwrite_r+0x218>
 4004e14:	0039883a 	mov	fp,zero
 4004e18:	0025883a 	mov	r18,zero
 4004e1c:	90001a26 	beq	r18,zero,4004e88 <__sfvwrite_r+0x184>
 4004e20:	1880800c 	andi	r2,r3,512
 4004e24:	84c00217 	ldw	r19,8(r16)
 4004e28:	10002126 	beq	r2,zero,4004eb0 <__sfvwrite_r+0x1ac>
 4004e2c:	982f883a 	mov	r23,r19
 4004e30:	94c09636 	bltu	r18,r19,400508c <__sfvwrite_r+0x388>
 4004e34:	1881200c 	andi	r2,r3,1152
 4004e38:	1000a11e 	bne	r2,zero,40050c0 <__sfvwrite_r+0x3bc>
 4004e3c:	81000017 	ldw	r4,0(r16)
 4004e40:	b80d883a 	mov	r6,r23
 4004e44:	e00b883a 	mov	r5,fp
 4004e48:	40060240 	call	4006024 <memmove>
 4004e4c:	80c00217 	ldw	r3,8(r16)
 4004e50:	81000017 	ldw	r4,0(r16)
 4004e54:	9005883a 	mov	r2,r18
 4004e58:	1ce7c83a 	sub	r19,r3,r19
 4004e5c:	25cf883a 	add	r7,r4,r23
 4004e60:	84c00215 	stw	r19,8(r16)
 4004e64:	81c00015 	stw	r7,0(r16)
 4004e68:	a0c00217 	ldw	r3,8(r20)
 4004e6c:	e0b9883a 	add	fp,fp,r2
 4004e70:	90a5c83a 	sub	r18,r18,r2
 4004e74:	18a7c83a 	sub	r19,r3,r2
 4004e78:	a4c00215 	stw	r19,8(r20)
 4004e7c:	983fce26 	beq	r19,zero,4004db8 <__alt_mem_onchip_memory+0xfbffcdb8>
 4004e80:	80c0030b 	ldhu	r3,12(r16)
 4004e84:	903fe61e 	bne	r18,zero,4004e20 <__alt_mem_onchip_memory+0xfbffce20>
 4004e88:	8f000017 	ldw	fp,0(r17)
 4004e8c:	8c800117 	ldw	r18,4(r17)
 4004e90:	8c400204 	addi	r17,r17,8
 4004e94:	003fe106 	br	4004e1c <__alt_mem_onchip_memory+0xfbffce1c>
 4004e98:	8cc00017 	ldw	r19,0(r17)
 4004e9c:	8c800117 	ldw	r18,4(r17)
 4004ea0:	8c400204 	addi	r17,r17,8
 4004ea4:	003fb306 	br	4004d74 <__alt_mem_onchip_memory+0xfbffcd74>
 4004ea8:	0005883a 	mov	r2,zero
 4004eac:	f800283a 	ret
 4004eb0:	81000017 	ldw	r4,0(r16)
 4004eb4:	80800417 	ldw	r2,16(r16)
 4004eb8:	11005a36 	bltu	r2,r4,4005024 <__sfvwrite_r+0x320>
 4004ebc:	85c00517 	ldw	r23,20(r16)
 4004ec0:	95c05836 	bltu	r18,r23,4005024 <__sfvwrite_r+0x320>
 4004ec4:	00a00034 	movhi	r2,32768
 4004ec8:	10bfffc4 	addi	r2,r2,-1
 4004ecc:	9009883a 	mov	r4,r18
 4004ed0:	1480012e 	bgeu	r2,r18,4004ed8 <__sfvwrite_r+0x1d4>
 4004ed4:	1009883a 	mov	r4,r2
 4004ed8:	b80b883a 	mov	r5,r23
 4004edc:	400a7a80 	call	400a7a8 <__divsi3>
 4004ee0:	b80b883a 	mov	r5,r23
 4004ee4:	1009883a 	mov	r4,r2
 4004ee8:	400a95c0 	call	400a95c <__mulsi3>
 4004eec:	81400717 	ldw	r5,28(r16)
 4004ef0:	80c00917 	ldw	r3,36(r16)
 4004ef4:	100f883a 	mov	r7,r2
 4004ef8:	e00d883a 	mov	r6,fp
 4004efc:	a809883a 	mov	r4,r21
 4004f00:	183ee83a 	callr	r3
 4004f04:	00bfd816 	blt	zero,r2,4004e68 <__alt_mem_onchip_memory+0xfbffce68>
 4004f08:	8080030b 	ldhu	r2,12(r16)
 4004f0c:	10801014 	ori	r2,r2,64
 4004f10:	8080030d 	sth	r2,12(r16)
 4004f14:	00bfffc4 	movi	r2,-1
 4004f18:	003fa806 	br	4004dbc <__alt_mem_onchip_memory+0xfbffcdbc>
 4004f1c:	0027883a 	mov	r19,zero
 4004f20:	0011883a 	mov	r8,zero
 4004f24:	0039883a 	mov	fp,zero
 4004f28:	0025883a 	mov	r18,zero
 4004f2c:	90001f26 	beq	r18,zero,4004fac <__sfvwrite_r+0x2a8>
 4004f30:	40005a26 	beq	r8,zero,400509c <__sfvwrite_r+0x398>
 4004f34:	982d883a 	mov	r22,r19
 4004f38:	94c0012e 	bgeu	r18,r19,4004f40 <__sfvwrite_r+0x23c>
 4004f3c:	902d883a 	mov	r22,r18
 4004f40:	81000017 	ldw	r4,0(r16)
 4004f44:	80800417 	ldw	r2,16(r16)
 4004f48:	b02f883a 	mov	r23,r22
 4004f4c:	81c00517 	ldw	r7,20(r16)
 4004f50:	1100032e 	bgeu	r2,r4,4004f60 <__sfvwrite_r+0x25c>
 4004f54:	80c00217 	ldw	r3,8(r16)
 4004f58:	38c7883a 	add	r3,r7,r3
 4004f5c:	1d801816 	blt	r3,r22,4004fc0 <__sfvwrite_r+0x2bc>
 4004f60:	b1c03e16 	blt	r22,r7,400505c <__sfvwrite_r+0x358>
 4004f64:	80800917 	ldw	r2,36(r16)
 4004f68:	81400717 	ldw	r5,28(r16)
 4004f6c:	e00d883a 	mov	r6,fp
 4004f70:	da000115 	stw	r8,4(sp)
 4004f74:	a809883a 	mov	r4,r21
 4004f78:	103ee83a 	callr	r2
 4004f7c:	102f883a 	mov	r23,r2
 4004f80:	da000117 	ldw	r8,4(sp)
 4004f84:	00bfe00e 	bge	zero,r2,4004f08 <__alt_mem_onchip_memory+0xfbffcf08>
 4004f88:	9de7c83a 	sub	r19,r19,r23
 4004f8c:	98001f26 	beq	r19,zero,400500c <__sfvwrite_r+0x308>
 4004f90:	a0800217 	ldw	r2,8(r20)
 4004f94:	e5f9883a 	add	fp,fp,r23
 4004f98:	95e5c83a 	sub	r18,r18,r23
 4004f9c:	15efc83a 	sub	r23,r2,r23
 4004fa0:	a5c00215 	stw	r23,8(r20)
 4004fa4:	b83f8426 	beq	r23,zero,4004db8 <__alt_mem_onchip_memory+0xfbffcdb8>
 4004fa8:	903fe11e 	bne	r18,zero,4004f30 <__alt_mem_onchip_memory+0xfbffcf30>
 4004fac:	8f000017 	ldw	fp,0(r17)
 4004fb0:	8c800117 	ldw	r18,4(r17)
 4004fb4:	0011883a 	mov	r8,zero
 4004fb8:	8c400204 	addi	r17,r17,8
 4004fbc:	003fdb06 	br	4004f2c <__alt_mem_onchip_memory+0xfbffcf2c>
 4004fc0:	180d883a 	mov	r6,r3
 4004fc4:	e00b883a 	mov	r5,fp
 4004fc8:	da000115 	stw	r8,4(sp)
 4004fcc:	d8c00015 	stw	r3,0(sp)
 4004fd0:	40060240 	call	4006024 <memmove>
 4004fd4:	d8c00017 	ldw	r3,0(sp)
 4004fd8:	80800017 	ldw	r2,0(r16)
 4004fdc:	800b883a 	mov	r5,r16
 4004fe0:	a809883a 	mov	r4,r21
 4004fe4:	10c5883a 	add	r2,r2,r3
 4004fe8:	80800015 	stw	r2,0(r16)
 4004fec:	d8c00015 	stw	r3,0(sp)
 4004ff0:	40044940 	call	4004494 <_fflush_r>
 4004ff4:	d8c00017 	ldw	r3,0(sp)
 4004ff8:	da000117 	ldw	r8,4(sp)
 4004ffc:	103fc21e 	bne	r2,zero,4004f08 <__alt_mem_onchip_memory+0xfbffcf08>
 4005000:	182f883a 	mov	r23,r3
 4005004:	9de7c83a 	sub	r19,r19,r23
 4005008:	983fe11e 	bne	r19,zero,4004f90 <__alt_mem_onchip_memory+0xfbffcf90>
 400500c:	800b883a 	mov	r5,r16
 4005010:	a809883a 	mov	r4,r21
 4005014:	40044940 	call	4004494 <_fflush_r>
 4005018:	103fbb1e 	bne	r2,zero,4004f08 <__alt_mem_onchip_memory+0xfbffcf08>
 400501c:	0011883a 	mov	r8,zero
 4005020:	003fdb06 	br	4004f90 <__alt_mem_onchip_memory+0xfbffcf90>
 4005024:	94c0012e 	bgeu	r18,r19,400502c <__sfvwrite_r+0x328>
 4005028:	9027883a 	mov	r19,r18
 400502c:	980d883a 	mov	r6,r19
 4005030:	e00b883a 	mov	r5,fp
 4005034:	40060240 	call	4006024 <memmove>
 4005038:	80800217 	ldw	r2,8(r16)
 400503c:	80c00017 	ldw	r3,0(r16)
 4005040:	14c5c83a 	sub	r2,r2,r19
 4005044:	1cc7883a 	add	r3,r3,r19
 4005048:	80800215 	stw	r2,8(r16)
 400504c:	80c00015 	stw	r3,0(r16)
 4005050:	10004326 	beq	r2,zero,4005160 <__sfvwrite_r+0x45c>
 4005054:	9805883a 	mov	r2,r19
 4005058:	003f8306 	br	4004e68 <__alt_mem_onchip_memory+0xfbffce68>
 400505c:	b00d883a 	mov	r6,r22
 4005060:	e00b883a 	mov	r5,fp
 4005064:	da000115 	stw	r8,4(sp)
 4005068:	40060240 	call	4006024 <memmove>
 400506c:	80800217 	ldw	r2,8(r16)
 4005070:	80c00017 	ldw	r3,0(r16)
 4005074:	da000117 	ldw	r8,4(sp)
 4005078:	1585c83a 	sub	r2,r2,r22
 400507c:	1dad883a 	add	r22,r3,r22
 4005080:	80800215 	stw	r2,8(r16)
 4005084:	85800015 	stw	r22,0(r16)
 4005088:	003fbf06 	br	4004f88 <__alt_mem_onchip_memory+0xfbffcf88>
 400508c:	81000017 	ldw	r4,0(r16)
 4005090:	9027883a 	mov	r19,r18
 4005094:	902f883a 	mov	r23,r18
 4005098:	003f6906 	br	4004e40 <__alt_mem_onchip_memory+0xfbffce40>
 400509c:	900d883a 	mov	r6,r18
 40050a0:	01400284 	movi	r5,10
 40050a4:	e009883a 	mov	r4,fp
 40050a8:	4005df80 	call	4005df8 <memchr>
 40050ac:	10003e26 	beq	r2,zero,40051a8 <__sfvwrite_r+0x4a4>
 40050b0:	10800044 	addi	r2,r2,1
 40050b4:	1727c83a 	sub	r19,r2,fp
 40050b8:	02000044 	movi	r8,1
 40050bc:	003f9d06 	br	4004f34 <__alt_mem_onchip_memory+0xfbffcf34>
 40050c0:	80800517 	ldw	r2,20(r16)
 40050c4:	81400417 	ldw	r5,16(r16)
 40050c8:	81c00017 	ldw	r7,0(r16)
 40050cc:	10a7883a 	add	r19,r2,r2
 40050d0:	9885883a 	add	r2,r19,r2
 40050d4:	1026d7fa 	srli	r19,r2,31
 40050d8:	396dc83a 	sub	r22,r7,r5
 40050dc:	b1000044 	addi	r4,r22,1
 40050e0:	9885883a 	add	r2,r19,r2
 40050e4:	1027d07a 	srai	r19,r2,1
 40050e8:	2485883a 	add	r2,r4,r18
 40050ec:	980d883a 	mov	r6,r19
 40050f0:	9880022e 	bgeu	r19,r2,40050fc <__sfvwrite_r+0x3f8>
 40050f4:	1027883a 	mov	r19,r2
 40050f8:	100d883a 	mov	r6,r2
 40050fc:	18c1000c 	andi	r3,r3,1024
 4005100:	18001c26 	beq	r3,zero,4005174 <__sfvwrite_r+0x470>
 4005104:	300b883a 	mov	r5,r6
 4005108:	a809883a 	mov	r4,r21
 400510c:	40055ec0 	call	40055ec <_malloc_r>
 4005110:	102f883a 	mov	r23,r2
 4005114:	10002926 	beq	r2,zero,40051bc <__sfvwrite_r+0x4b8>
 4005118:	81400417 	ldw	r5,16(r16)
 400511c:	b00d883a 	mov	r6,r22
 4005120:	1009883a 	mov	r4,r2
 4005124:	4005edc0 	call	4005edc <memcpy>
 4005128:	8080030b 	ldhu	r2,12(r16)
 400512c:	00fedfc4 	movi	r3,-1153
 4005130:	10c4703a 	and	r2,r2,r3
 4005134:	10802014 	ori	r2,r2,128
 4005138:	8080030d 	sth	r2,12(r16)
 400513c:	bd89883a 	add	r4,r23,r22
 4005140:	9d8fc83a 	sub	r7,r19,r22
 4005144:	85c00415 	stw	r23,16(r16)
 4005148:	84c00515 	stw	r19,20(r16)
 400514c:	81000015 	stw	r4,0(r16)
 4005150:	9027883a 	mov	r19,r18
 4005154:	81c00215 	stw	r7,8(r16)
 4005158:	902f883a 	mov	r23,r18
 400515c:	003f3806 	br	4004e40 <__alt_mem_onchip_memory+0xfbffce40>
 4005160:	800b883a 	mov	r5,r16
 4005164:	a809883a 	mov	r4,r21
 4005168:	40044940 	call	4004494 <_fflush_r>
 400516c:	103fb926 	beq	r2,zero,4005054 <__alt_mem_onchip_memory+0xfbffd054>
 4005170:	003f6506 	br	4004f08 <__alt_mem_onchip_memory+0xfbffcf08>
 4005174:	a809883a 	mov	r4,r21
 4005178:	40073600 	call	4007360 <_realloc_r>
 400517c:	102f883a 	mov	r23,r2
 4005180:	103fee1e 	bne	r2,zero,400513c <__alt_mem_onchip_memory+0xfbffd13c>
 4005184:	81400417 	ldw	r5,16(r16)
 4005188:	a809883a 	mov	r4,r21
 400518c:	40049f40 	call	40049f4 <_free_r>
 4005190:	8080030b 	ldhu	r2,12(r16)
 4005194:	00ffdfc4 	movi	r3,-129
 4005198:	1884703a 	and	r2,r3,r2
 400519c:	00c00304 	movi	r3,12
 40051a0:	a8c00015 	stw	r3,0(r21)
 40051a4:	003f5906 	br	4004f0c <__alt_mem_onchip_memory+0xfbffcf0c>
 40051a8:	94c00044 	addi	r19,r18,1
 40051ac:	02000044 	movi	r8,1
 40051b0:	003f6006 	br	4004f34 <__alt_mem_onchip_memory+0xfbffcf34>
 40051b4:	00bfffc4 	movi	r2,-1
 40051b8:	003f0006 	br	4004dbc <__alt_mem_onchip_memory+0xfbffcdbc>
 40051bc:	00800304 	movi	r2,12
 40051c0:	a8800015 	stw	r2,0(r21)
 40051c4:	8080030b 	ldhu	r2,12(r16)
 40051c8:	003f5006 	br	4004f0c <__alt_mem_onchip_memory+0xfbffcf0c>

040051cc <_fwalk>:
 40051cc:	defff704 	addi	sp,sp,-36
 40051d0:	dd000415 	stw	r20,16(sp)
 40051d4:	dfc00815 	stw	ra,32(sp)
 40051d8:	ddc00715 	stw	r23,28(sp)
 40051dc:	dd800615 	stw	r22,24(sp)
 40051e0:	dd400515 	stw	r21,20(sp)
 40051e4:	dcc00315 	stw	r19,12(sp)
 40051e8:	dc800215 	stw	r18,8(sp)
 40051ec:	dc400115 	stw	r17,4(sp)
 40051f0:	dc000015 	stw	r16,0(sp)
 40051f4:	2500b804 	addi	r20,r4,736
 40051f8:	a0002326 	beq	r20,zero,4005288 <_fwalk+0xbc>
 40051fc:	282b883a 	mov	r21,r5
 4005200:	002f883a 	mov	r23,zero
 4005204:	05800044 	movi	r22,1
 4005208:	04ffffc4 	movi	r19,-1
 400520c:	a4400117 	ldw	r17,4(r20)
 4005210:	a4800217 	ldw	r18,8(r20)
 4005214:	8c7fffc4 	addi	r17,r17,-1
 4005218:	88000d16 	blt	r17,zero,4005250 <_fwalk+0x84>
 400521c:	94000304 	addi	r16,r18,12
 4005220:	94800384 	addi	r18,r18,14
 4005224:	8080000b 	ldhu	r2,0(r16)
 4005228:	8c7fffc4 	addi	r17,r17,-1
 400522c:	813ffd04 	addi	r4,r16,-12
 4005230:	b080042e 	bgeu	r22,r2,4005244 <_fwalk+0x78>
 4005234:	9080000f 	ldh	r2,0(r18)
 4005238:	14c00226 	beq	r2,r19,4005244 <_fwalk+0x78>
 400523c:	a83ee83a 	callr	r21
 4005240:	b8aeb03a 	or	r23,r23,r2
 4005244:	84001a04 	addi	r16,r16,104
 4005248:	94801a04 	addi	r18,r18,104
 400524c:	8cfff51e 	bne	r17,r19,4005224 <__alt_mem_onchip_memory+0xfbffd224>
 4005250:	a5000017 	ldw	r20,0(r20)
 4005254:	a03fed1e 	bne	r20,zero,400520c <__alt_mem_onchip_memory+0xfbffd20c>
 4005258:	b805883a 	mov	r2,r23
 400525c:	dfc00817 	ldw	ra,32(sp)
 4005260:	ddc00717 	ldw	r23,28(sp)
 4005264:	dd800617 	ldw	r22,24(sp)
 4005268:	dd400517 	ldw	r21,20(sp)
 400526c:	dd000417 	ldw	r20,16(sp)
 4005270:	dcc00317 	ldw	r19,12(sp)
 4005274:	dc800217 	ldw	r18,8(sp)
 4005278:	dc400117 	ldw	r17,4(sp)
 400527c:	dc000017 	ldw	r16,0(sp)
 4005280:	dec00904 	addi	sp,sp,36
 4005284:	f800283a 	ret
 4005288:	002f883a 	mov	r23,zero
 400528c:	003ff206 	br	4005258 <__alt_mem_onchip_memory+0xfbffd258>

04005290 <_fwalk_reent>:
 4005290:	defff704 	addi	sp,sp,-36
 4005294:	dd000415 	stw	r20,16(sp)
 4005298:	dfc00815 	stw	ra,32(sp)
 400529c:	ddc00715 	stw	r23,28(sp)
 40052a0:	dd800615 	stw	r22,24(sp)
 40052a4:	dd400515 	stw	r21,20(sp)
 40052a8:	dcc00315 	stw	r19,12(sp)
 40052ac:	dc800215 	stw	r18,8(sp)
 40052b0:	dc400115 	stw	r17,4(sp)
 40052b4:	dc000015 	stw	r16,0(sp)
 40052b8:	2500b804 	addi	r20,r4,736
 40052bc:	a0002326 	beq	r20,zero,400534c <_fwalk_reent+0xbc>
 40052c0:	282b883a 	mov	r21,r5
 40052c4:	2027883a 	mov	r19,r4
 40052c8:	002f883a 	mov	r23,zero
 40052cc:	05800044 	movi	r22,1
 40052d0:	04bfffc4 	movi	r18,-1
 40052d4:	a4400117 	ldw	r17,4(r20)
 40052d8:	a4000217 	ldw	r16,8(r20)
 40052dc:	8c7fffc4 	addi	r17,r17,-1
 40052e0:	88000c16 	blt	r17,zero,4005314 <_fwalk_reent+0x84>
 40052e4:	84000304 	addi	r16,r16,12
 40052e8:	8080000b 	ldhu	r2,0(r16)
 40052ec:	8c7fffc4 	addi	r17,r17,-1
 40052f0:	817ffd04 	addi	r5,r16,-12
 40052f4:	b080052e 	bgeu	r22,r2,400530c <_fwalk_reent+0x7c>
 40052f8:	8080008f 	ldh	r2,2(r16)
 40052fc:	9809883a 	mov	r4,r19
 4005300:	14800226 	beq	r2,r18,400530c <_fwalk_reent+0x7c>
 4005304:	a83ee83a 	callr	r21
 4005308:	b8aeb03a 	or	r23,r23,r2
 400530c:	84001a04 	addi	r16,r16,104
 4005310:	8cbff51e 	bne	r17,r18,40052e8 <__alt_mem_onchip_memory+0xfbffd2e8>
 4005314:	a5000017 	ldw	r20,0(r20)
 4005318:	a03fee1e 	bne	r20,zero,40052d4 <__alt_mem_onchip_memory+0xfbffd2d4>
 400531c:	b805883a 	mov	r2,r23
 4005320:	dfc00817 	ldw	ra,32(sp)
 4005324:	ddc00717 	ldw	r23,28(sp)
 4005328:	dd800617 	ldw	r22,24(sp)
 400532c:	dd400517 	ldw	r21,20(sp)
 4005330:	dd000417 	ldw	r20,16(sp)
 4005334:	dcc00317 	ldw	r19,12(sp)
 4005338:	dc800217 	ldw	r18,8(sp)
 400533c:	dc400117 	ldw	r17,4(sp)
 4005340:	dc000017 	ldw	r16,0(sp)
 4005344:	dec00904 	addi	sp,sp,36
 4005348:	f800283a 	ret
 400534c:	002f883a 	mov	r23,zero
 4005350:	003ff206 	br	400531c <__alt_mem_onchip_memory+0xfbffd31c>

04005354 <_setlocale_r>:
 4005354:	30001b26 	beq	r6,zero,40053c4 <_setlocale_r+0x70>
 4005358:	01410074 	movhi	r5,1025
 400535c:	defffe04 	addi	sp,sp,-8
 4005360:	297e6e04 	addi	r5,r5,-1608
 4005364:	3009883a 	mov	r4,r6
 4005368:	dc000015 	stw	r16,0(sp)
 400536c:	dfc00115 	stw	ra,4(sp)
 4005370:	3021883a 	mov	r16,r6
 4005374:	4007ac80 	call	4007ac8 <strcmp>
 4005378:	1000061e 	bne	r2,zero,4005394 <_setlocale_r+0x40>
 400537c:	00810074 	movhi	r2,1025
 4005380:	10be6d04 	addi	r2,r2,-1612
 4005384:	dfc00117 	ldw	ra,4(sp)
 4005388:	dc000017 	ldw	r16,0(sp)
 400538c:	dec00204 	addi	sp,sp,8
 4005390:	f800283a 	ret
 4005394:	01410074 	movhi	r5,1025
 4005398:	297e6d04 	addi	r5,r5,-1612
 400539c:	8009883a 	mov	r4,r16
 40053a0:	4007ac80 	call	4007ac8 <strcmp>
 40053a4:	103ff526 	beq	r2,zero,400537c <__alt_mem_onchip_memory+0xfbffd37c>
 40053a8:	01410074 	movhi	r5,1025
 40053ac:	297e5804 	addi	r5,r5,-1696
 40053b0:	8009883a 	mov	r4,r16
 40053b4:	4007ac80 	call	4007ac8 <strcmp>
 40053b8:	103ff026 	beq	r2,zero,400537c <__alt_mem_onchip_memory+0xfbffd37c>
 40053bc:	0005883a 	mov	r2,zero
 40053c0:	003ff006 	br	4005384 <__alt_mem_onchip_memory+0xfbffd384>
 40053c4:	00810074 	movhi	r2,1025
 40053c8:	10be6d04 	addi	r2,r2,-1612
 40053cc:	f800283a 	ret

040053d0 <__locale_charset>:
 40053d0:	00810074 	movhi	r2,1025
 40053d4:	10801e04 	addi	r2,r2,120
 40053d8:	f800283a 	ret

040053dc <__locale_mb_cur_max>:
 40053dc:	00810074 	movhi	r2,1025
 40053e0:	1085ba04 	addi	r2,r2,5864
 40053e4:	10800017 	ldw	r2,0(r2)
 40053e8:	f800283a 	ret

040053ec <__locale_msgcharset>:
 40053ec:	00810074 	movhi	r2,1025
 40053f0:	10801604 	addi	r2,r2,88
 40053f4:	f800283a 	ret

040053f8 <__locale_cjk_lang>:
 40053f8:	0005883a 	mov	r2,zero
 40053fc:	f800283a 	ret

04005400 <_localeconv_r>:
 4005400:	00810074 	movhi	r2,1025
 4005404:	10802604 	addi	r2,r2,152
 4005408:	f800283a 	ret

0400540c <setlocale>:
 400540c:	00810074 	movhi	r2,1025
 4005410:	1085b904 	addi	r2,r2,5860
 4005414:	280d883a 	mov	r6,r5
 4005418:	200b883a 	mov	r5,r4
 400541c:	11000017 	ldw	r4,0(r2)
 4005420:	40053541 	jmpi	4005354 <_setlocale_r>

04005424 <localeconv>:
 4005424:	00810074 	movhi	r2,1025
 4005428:	10802604 	addi	r2,r2,152
 400542c:	f800283a 	ret

04005430 <__smakebuf_r>:
 4005430:	2880030b 	ldhu	r2,12(r5)
 4005434:	10c0008c 	andi	r3,r2,2
 4005438:	1800411e 	bne	r3,zero,4005540 <__smakebuf_r+0x110>
 400543c:	deffec04 	addi	sp,sp,-80
 4005440:	dc000f15 	stw	r16,60(sp)
 4005444:	2821883a 	mov	r16,r5
 4005448:	2940038f 	ldh	r5,14(r5)
 400544c:	dc401015 	stw	r17,64(sp)
 4005450:	dfc01315 	stw	ra,76(sp)
 4005454:	dcc01215 	stw	r19,72(sp)
 4005458:	dc801115 	stw	r18,68(sp)
 400545c:	2023883a 	mov	r17,r4
 4005460:	28001c16 	blt	r5,zero,40054d4 <__smakebuf_r+0xa4>
 4005464:	d80d883a 	mov	r6,sp
 4005468:	40097380 	call	4009738 <_fstat_r>
 400546c:	10001816 	blt	r2,zero,40054d0 <__smakebuf_r+0xa0>
 4005470:	d8800117 	ldw	r2,4(sp)
 4005474:	00e00014 	movui	r3,32768
 4005478:	10bc000c 	andi	r2,r2,61440
 400547c:	14c80020 	cmpeqi	r19,r2,8192
 4005480:	10c03726 	beq	r2,r3,4005560 <__smakebuf_r+0x130>
 4005484:	80c0030b 	ldhu	r3,12(r16)
 4005488:	18c20014 	ori	r3,r3,2048
 400548c:	80c0030d 	sth	r3,12(r16)
 4005490:	00c80004 	movi	r3,8192
 4005494:	10c0521e 	bne	r2,r3,40055e0 <__smakebuf_r+0x1b0>
 4005498:	8140038f 	ldh	r5,14(r16)
 400549c:	8809883a 	mov	r4,r17
 40054a0:	40097940 	call	4009794 <_isatty_r>
 40054a4:	10004c26 	beq	r2,zero,40055d8 <__smakebuf_r+0x1a8>
 40054a8:	8080030b 	ldhu	r2,12(r16)
 40054ac:	80c010c4 	addi	r3,r16,67
 40054b0:	80c00015 	stw	r3,0(r16)
 40054b4:	10800054 	ori	r2,r2,1
 40054b8:	8080030d 	sth	r2,12(r16)
 40054bc:	00800044 	movi	r2,1
 40054c0:	80c00415 	stw	r3,16(r16)
 40054c4:	80800515 	stw	r2,20(r16)
 40054c8:	04810004 	movi	r18,1024
 40054cc:	00000706 	br	40054ec <__smakebuf_r+0xbc>
 40054d0:	8080030b 	ldhu	r2,12(r16)
 40054d4:	10c0200c 	andi	r3,r2,128
 40054d8:	18001f1e 	bne	r3,zero,4005558 <__smakebuf_r+0x128>
 40054dc:	04810004 	movi	r18,1024
 40054e0:	10820014 	ori	r2,r2,2048
 40054e4:	8080030d 	sth	r2,12(r16)
 40054e8:	0027883a 	mov	r19,zero
 40054ec:	900b883a 	mov	r5,r18
 40054f0:	8809883a 	mov	r4,r17
 40054f4:	40055ec0 	call	40055ec <_malloc_r>
 40054f8:	10002c26 	beq	r2,zero,40055ac <__smakebuf_r+0x17c>
 40054fc:	80c0030b 	ldhu	r3,12(r16)
 4005500:	01010034 	movhi	r4,1024
 4005504:	21114a04 	addi	r4,r4,17704
 4005508:	89000f15 	stw	r4,60(r17)
 400550c:	18c02014 	ori	r3,r3,128
 4005510:	80c0030d 	sth	r3,12(r16)
 4005514:	80800015 	stw	r2,0(r16)
 4005518:	80800415 	stw	r2,16(r16)
 400551c:	84800515 	stw	r18,20(r16)
 4005520:	98001a1e 	bne	r19,zero,400558c <__smakebuf_r+0x15c>
 4005524:	dfc01317 	ldw	ra,76(sp)
 4005528:	dcc01217 	ldw	r19,72(sp)
 400552c:	dc801117 	ldw	r18,68(sp)
 4005530:	dc401017 	ldw	r17,64(sp)
 4005534:	dc000f17 	ldw	r16,60(sp)
 4005538:	dec01404 	addi	sp,sp,80
 400553c:	f800283a 	ret
 4005540:	288010c4 	addi	r2,r5,67
 4005544:	28800015 	stw	r2,0(r5)
 4005548:	28800415 	stw	r2,16(r5)
 400554c:	00800044 	movi	r2,1
 4005550:	28800515 	stw	r2,20(r5)
 4005554:	f800283a 	ret
 4005558:	04801004 	movi	r18,64
 400555c:	003fe006 	br	40054e0 <__alt_mem_onchip_memory+0xfbffd4e0>
 4005560:	81000a17 	ldw	r4,40(r16)
 4005564:	00c10034 	movhi	r3,1024
 4005568:	18de9904 	addi	r3,r3,31332
 400556c:	20ffc51e 	bne	r4,r3,4005484 <__alt_mem_onchip_memory+0xfbffd484>
 4005570:	8080030b 	ldhu	r2,12(r16)
 4005574:	04810004 	movi	r18,1024
 4005578:	84801315 	stw	r18,76(r16)
 400557c:	1484b03a 	or	r2,r2,r18
 4005580:	8080030d 	sth	r2,12(r16)
 4005584:	0027883a 	mov	r19,zero
 4005588:	003fd806 	br	40054ec <__alt_mem_onchip_memory+0xfbffd4ec>
 400558c:	8140038f 	ldh	r5,14(r16)
 4005590:	8809883a 	mov	r4,r17
 4005594:	40097940 	call	4009794 <_isatty_r>
 4005598:	103fe226 	beq	r2,zero,4005524 <__alt_mem_onchip_memory+0xfbffd524>
 400559c:	8080030b 	ldhu	r2,12(r16)
 40055a0:	10800054 	ori	r2,r2,1
 40055a4:	8080030d 	sth	r2,12(r16)
 40055a8:	003fde06 	br	4005524 <__alt_mem_onchip_memory+0xfbffd524>
 40055ac:	8080030b 	ldhu	r2,12(r16)
 40055b0:	10c0800c 	andi	r3,r2,512
 40055b4:	183fdb1e 	bne	r3,zero,4005524 <__alt_mem_onchip_memory+0xfbffd524>
 40055b8:	10800094 	ori	r2,r2,2
 40055bc:	80c010c4 	addi	r3,r16,67
 40055c0:	8080030d 	sth	r2,12(r16)
 40055c4:	00800044 	movi	r2,1
 40055c8:	80c00015 	stw	r3,0(r16)
 40055cc:	80c00415 	stw	r3,16(r16)
 40055d0:	80800515 	stw	r2,20(r16)
 40055d4:	003fd306 	br	4005524 <__alt_mem_onchip_memory+0xfbffd524>
 40055d8:	04810004 	movi	r18,1024
 40055dc:	003fc306 	br	40054ec <__alt_mem_onchip_memory+0xfbffd4ec>
 40055e0:	0027883a 	mov	r19,zero
 40055e4:	04810004 	movi	r18,1024
 40055e8:	003fc006 	br	40054ec <__alt_mem_onchip_memory+0xfbffd4ec>

040055ec <_malloc_r>:
 40055ec:	defff504 	addi	sp,sp,-44
 40055f0:	dc800315 	stw	r18,12(sp)
 40055f4:	dfc00a15 	stw	ra,40(sp)
 40055f8:	df000915 	stw	fp,36(sp)
 40055fc:	ddc00815 	stw	r23,32(sp)
 4005600:	dd800715 	stw	r22,28(sp)
 4005604:	dd400615 	stw	r21,24(sp)
 4005608:	dd000515 	stw	r20,20(sp)
 400560c:	dcc00415 	stw	r19,16(sp)
 4005610:	dc400215 	stw	r17,8(sp)
 4005614:	dc000115 	stw	r16,4(sp)
 4005618:	288002c4 	addi	r2,r5,11
 400561c:	00c00584 	movi	r3,22
 4005620:	2025883a 	mov	r18,r4
 4005624:	18807f2e 	bgeu	r3,r2,4005824 <_malloc_r+0x238>
 4005628:	047ffe04 	movi	r17,-8
 400562c:	1462703a 	and	r17,r2,r17
 4005630:	8800a316 	blt	r17,zero,40058c0 <_malloc_r+0x2d4>
 4005634:	8940a236 	bltu	r17,r5,40058c0 <_malloc_r+0x2d4>
 4005638:	400d7c40 	call	400d7c4 <__malloc_lock>
 400563c:	00807dc4 	movi	r2,503
 4005640:	1441e92e 	bgeu	r2,r17,4005de8 <_malloc_r+0x7fc>
 4005644:	8804d27a 	srli	r2,r17,9
 4005648:	1000a126 	beq	r2,zero,40058d0 <_malloc_r+0x2e4>
 400564c:	00c00104 	movi	r3,4
 4005650:	18811e36 	bltu	r3,r2,4005acc <_malloc_r+0x4e0>
 4005654:	8804d1ba 	srli	r2,r17,6
 4005658:	12000e44 	addi	r8,r2,57
 400565c:	11c00e04 	addi	r7,r2,56
 4005660:	4209883a 	add	r4,r8,r8
 4005664:	04c10074 	movhi	r19,1025
 4005668:	2109883a 	add	r4,r4,r4
 400566c:	9cc03404 	addi	r19,r19,208
 4005670:	2109883a 	add	r4,r4,r4
 4005674:	9909883a 	add	r4,r19,r4
 4005678:	24000117 	ldw	r16,4(r4)
 400567c:	213ffe04 	addi	r4,r4,-8
 4005680:	24009726 	beq	r4,r16,40058e0 <_malloc_r+0x2f4>
 4005684:	80800117 	ldw	r2,4(r16)
 4005688:	01bfff04 	movi	r6,-4
 400568c:	014003c4 	movi	r5,15
 4005690:	1184703a 	and	r2,r2,r6
 4005694:	1447c83a 	sub	r3,r2,r17
 4005698:	28c00716 	blt	r5,r3,40056b8 <_malloc_r+0xcc>
 400569c:	1800920e 	bge	r3,zero,40058e8 <_malloc_r+0x2fc>
 40056a0:	84000317 	ldw	r16,12(r16)
 40056a4:	24008e26 	beq	r4,r16,40058e0 <_malloc_r+0x2f4>
 40056a8:	80800117 	ldw	r2,4(r16)
 40056ac:	1184703a 	and	r2,r2,r6
 40056b0:	1447c83a 	sub	r3,r2,r17
 40056b4:	28fff90e 	bge	r5,r3,400569c <__alt_mem_onchip_memory+0xfbffd69c>
 40056b8:	3809883a 	mov	r4,r7
 40056bc:	01810074 	movhi	r6,1025
 40056c0:	9c000417 	ldw	r16,16(r19)
 40056c4:	31803404 	addi	r6,r6,208
 40056c8:	32000204 	addi	r8,r6,8
 40056cc:	82013426 	beq	r16,r8,4005ba0 <_malloc_r+0x5b4>
 40056d0:	80c00117 	ldw	r3,4(r16)
 40056d4:	00bfff04 	movi	r2,-4
 40056d8:	188e703a 	and	r7,r3,r2
 40056dc:	3c45c83a 	sub	r2,r7,r17
 40056e0:	00c003c4 	movi	r3,15
 40056e4:	18811f16 	blt	r3,r2,4005b64 <_malloc_r+0x578>
 40056e8:	32000515 	stw	r8,20(r6)
 40056ec:	32000415 	stw	r8,16(r6)
 40056f0:	10007f0e 	bge	r2,zero,40058f0 <_malloc_r+0x304>
 40056f4:	00807fc4 	movi	r2,511
 40056f8:	11c0fd36 	bltu	r2,r7,4005af0 <_malloc_r+0x504>
 40056fc:	3806d0fa 	srli	r3,r7,3
 4005700:	01c00044 	movi	r7,1
 4005704:	30800117 	ldw	r2,4(r6)
 4005708:	19400044 	addi	r5,r3,1
 400570c:	294b883a 	add	r5,r5,r5
 4005710:	1807d0ba 	srai	r3,r3,2
 4005714:	294b883a 	add	r5,r5,r5
 4005718:	294b883a 	add	r5,r5,r5
 400571c:	298b883a 	add	r5,r5,r6
 4005720:	38c6983a 	sll	r3,r7,r3
 4005724:	29c00017 	ldw	r7,0(r5)
 4005728:	2a7ffe04 	addi	r9,r5,-8
 400572c:	1886b03a 	or	r3,r3,r2
 4005730:	82400315 	stw	r9,12(r16)
 4005734:	81c00215 	stw	r7,8(r16)
 4005738:	30c00115 	stw	r3,4(r6)
 400573c:	2c000015 	stw	r16,0(r5)
 4005740:	3c000315 	stw	r16,12(r7)
 4005744:	2005d0ba 	srai	r2,r4,2
 4005748:	01400044 	movi	r5,1
 400574c:	288a983a 	sll	r5,r5,r2
 4005750:	19406f36 	bltu	r3,r5,4005910 <_malloc_r+0x324>
 4005754:	28c4703a 	and	r2,r5,r3
 4005758:	10000a1e 	bne	r2,zero,4005784 <_malloc_r+0x198>
 400575c:	00bfff04 	movi	r2,-4
 4005760:	294b883a 	add	r5,r5,r5
 4005764:	2088703a 	and	r4,r4,r2
 4005768:	28c4703a 	and	r2,r5,r3
 400576c:	21000104 	addi	r4,r4,4
 4005770:	1000041e 	bne	r2,zero,4005784 <_malloc_r+0x198>
 4005774:	294b883a 	add	r5,r5,r5
 4005778:	28c4703a 	and	r2,r5,r3
 400577c:	21000104 	addi	r4,r4,4
 4005780:	103ffc26 	beq	r2,zero,4005774 <__alt_mem_onchip_memory+0xfbffd774>
 4005784:	02bfff04 	movi	r10,-4
 4005788:	024003c4 	movi	r9,15
 400578c:	21800044 	addi	r6,r4,1
 4005790:	318d883a 	add	r6,r6,r6
 4005794:	318d883a 	add	r6,r6,r6
 4005798:	318d883a 	add	r6,r6,r6
 400579c:	998d883a 	add	r6,r19,r6
 40057a0:	333ffe04 	addi	r12,r6,-8
 40057a4:	2017883a 	mov	r11,r4
 40057a8:	31800104 	addi	r6,r6,4
 40057ac:	34000017 	ldw	r16,0(r6)
 40057b0:	31fffd04 	addi	r7,r6,-12
 40057b4:	81c0041e 	bne	r16,r7,40057c8 <_malloc_r+0x1dc>
 40057b8:	0000fb06 	br	4005ba8 <_malloc_r+0x5bc>
 40057bc:	1801030e 	bge	r3,zero,4005bcc <_malloc_r+0x5e0>
 40057c0:	84000317 	ldw	r16,12(r16)
 40057c4:	81c0f826 	beq	r16,r7,4005ba8 <_malloc_r+0x5bc>
 40057c8:	80800117 	ldw	r2,4(r16)
 40057cc:	1284703a 	and	r2,r2,r10
 40057d0:	1447c83a 	sub	r3,r2,r17
 40057d4:	48fff90e 	bge	r9,r3,40057bc <__alt_mem_onchip_memory+0xfbffd7bc>
 40057d8:	80800317 	ldw	r2,12(r16)
 40057dc:	81000217 	ldw	r4,8(r16)
 40057e0:	89400054 	ori	r5,r17,1
 40057e4:	81400115 	stw	r5,4(r16)
 40057e8:	20800315 	stw	r2,12(r4)
 40057ec:	11000215 	stw	r4,8(r2)
 40057f0:	8463883a 	add	r17,r16,r17
 40057f4:	9c400515 	stw	r17,20(r19)
 40057f8:	9c400415 	stw	r17,16(r19)
 40057fc:	18800054 	ori	r2,r3,1
 4005800:	88800115 	stw	r2,4(r17)
 4005804:	8a000315 	stw	r8,12(r17)
 4005808:	8a000215 	stw	r8,8(r17)
 400580c:	88e3883a 	add	r17,r17,r3
 4005810:	88c00015 	stw	r3,0(r17)
 4005814:	9009883a 	mov	r4,r18
 4005818:	400d7e80 	call	400d7e8 <__malloc_unlock>
 400581c:	80800204 	addi	r2,r16,8
 4005820:	00001b06 	br	4005890 <_malloc_r+0x2a4>
 4005824:	04400404 	movi	r17,16
 4005828:	89402536 	bltu	r17,r5,40058c0 <_malloc_r+0x2d4>
 400582c:	400d7c40 	call	400d7c4 <__malloc_lock>
 4005830:	00800184 	movi	r2,6
 4005834:	01000084 	movi	r4,2
 4005838:	04c10074 	movhi	r19,1025
 400583c:	1085883a 	add	r2,r2,r2
 4005840:	9cc03404 	addi	r19,r19,208
 4005844:	1085883a 	add	r2,r2,r2
 4005848:	9885883a 	add	r2,r19,r2
 400584c:	14000117 	ldw	r16,4(r2)
 4005850:	10fffe04 	addi	r3,r2,-8
 4005854:	80c0d926 	beq	r16,r3,4005bbc <_malloc_r+0x5d0>
 4005858:	80c00117 	ldw	r3,4(r16)
 400585c:	81000317 	ldw	r4,12(r16)
 4005860:	00bfff04 	movi	r2,-4
 4005864:	1884703a 	and	r2,r3,r2
 4005868:	81400217 	ldw	r5,8(r16)
 400586c:	8085883a 	add	r2,r16,r2
 4005870:	10c00117 	ldw	r3,4(r2)
 4005874:	29000315 	stw	r4,12(r5)
 4005878:	21400215 	stw	r5,8(r4)
 400587c:	18c00054 	ori	r3,r3,1
 4005880:	10c00115 	stw	r3,4(r2)
 4005884:	9009883a 	mov	r4,r18
 4005888:	400d7e80 	call	400d7e8 <__malloc_unlock>
 400588c:	80800204 	addi	r2,r16,8
 4005890:	dfc00a17 	ldw	ra,40(sp)
 4005894:	df000917 	ldw	fp,36(sp)
 4005898:	ddc00817 	ldw	r23,32(sp)
 400589c:	dd800717 	ldw	r22,28(sp)
 40058a0:	dd400617 	ldw	r21,24(sp)
 40058a4:	dd000517 	ldw	r20,20(sp)
 40058a8:	dcc00417 	ldw	r19,16(sp)
 40058ac:	dc800317 	ldw	r18,12(sp)
 40058b0:	dc400217 	ldw	r17,8(sp)
 40058b4:	dc000117 	ldw	r16,4(sp)
 40058b8:	dec00b04 	addi	sp,sp,44
 40058bc:	f800283a 	ret
 40058c0:	00800304 	movi	r2,12
 40058c4:	90800015 	stw	r2,0(r18)
 40058c8:	0005883a 	mov	r2,zero
 40058cc:	003ff006 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 40058d0:	01002004 	movi	r4,128
 40058d4:	02001004 	movi	r8,64
 40058d8:	01c00fc4 	movi	r7,63
 40058dc:	003f6106 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 40058e0:	4009883a 	mov	r4,r8
 40058e4:	003f7506 	br	40056bc <__alt_mem_onchip_memory+0xfbffd6bc>
 40058e8:	81000317 	ldw	r4,12(r16)
 40058ec:	003fde06 	br	4005868 <__alt_mem_onchip_memory+0xfbffd868>
 40058f0:	81c5883a 	add	r2,r16,r7
 40058f4:	11400117 	ldw	r5,4(r2)
 40058f8:	9009883a 	mov	r4,r18
 40058fc:	29400054 	ori	r5,r5,1
 4005900:	11400115 	stw	r5,4(r2)
 4005904:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4005908:	80800204 	addi	r2,r16,8
 400590c:	003fe006 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 4005910:	9c000217 	ldw	r16,8(r19)
 4005914:	00bfff04 	movi	r2,-4
 4005918:	85800117 	ldw	r22,4(r16)
 400591c:	b0ac703a 	and	r22,r22,r2
 4005920:	b4400336 	bltu	r22,r17,4005930 <_malloc_r+0x344>
 4005924:	b445c83a 	sub	r2,r22,r17
 4005928:	00c003c4 	movi	r3,15
 400592c:	18805d16 	blt	r3,r2,4005aa4 <_malloc_r+0x4b8>
 4005930:	05c10074 	movhi	r23,1025
 4005934:	00810074 	movhi	r2,1025
 4005938:	108c8804 	addi	r2,r2,12832
 400593c:	bdc5bb04 	addi	r23,r23,5868
 4005940:	15400017 	ldw	r21,0(r2)
 4005944:	b8c00017 	ldw	r3,0(r23)
 4005948:	00bfffc4 	movi	r2,-1
 400594c:	858d883a 	add	r6,r16,r22
 4005950:	8d6b883a 	add	r21,r17,r21
 4005954:	1880ea26 	beq	r3,r2,4005d00 <_malloc_r+0x714>
 4005958:	ad4403c4 	addi	r21,r21,4111
 400595c:	00bc0004 	movi	r2,-4096
 4005960:	a8aa703a 	and	r21,r21,r2
 4005964:	a80b883a 	mov	r5,r21
 4005968:	9009883a 	mov	r4,r18
 400596c:	d9800015 	stw	r6,0(sp)
 4005970:	40079380 	call	4007938 <_sbrk_r>
 4005974:	1029883a 	mov	r20,r2
 4005978:	00bfffc4 	movi	r2,-1
 400597c:	d9800017 	ldw	r6,0(sp)
 4005980:	a080e826 	beq	r20,r2,4005d24 <_malloc_r+0x738>
 4005984:	a180a636 	bltu	r20,r6,4005c20 <_malloc_r+0x634>
 4005988:	07010074 	movhi	fp,1025
 400598c:	e70c9304 	addi	fp,fp,12876
 4005990:	e0800017 	ldw	r2,0(fp)
 4005994:	a887883a 	add	r3,r21,r2
 4005998:	e0c00015 	stw	r3,0(fp)
 400599c:	3500e626 	beq	r6,r20,4005d38 <_malloc_r+0x74c>
 40059a0:	b9000017 	ldw	r4,0(r23)
 40059a4:	00bfffc4 	movi	r2,-1
 40059a8:	2080ee26 	beq	r4,r2,4005d64 <_malloc_r+0x778>
 40059ac:	a185c83a 	sub	r2,r20,r6
 40059b0:	10c5883a 	add	r2,r2,r3
 40059b4:	e0800015 	stw	r2,0(fp)
 40059b8:	a0c001cc 	andi	r3,r20,7
 40059bc:	1800bc26 	beq	r3,zero,4005cb0 <_malloc_r+0x6c4>
 40059c0:	a0e9c83a 	sub	r20,r20,r3
 40059c4:	00840204 	movi	r2,4104
 40059c8:	a5000204 	addi	r20,r20,8
 40059cc:	10c7c83a 	sub	r3,r2,r3
 40059d0:	a545883a 	add	r2,r20,r21
 40059d4:	1083ffcc 	andi	r2,r2,4095
 40059d8:	18abc83a 	sub	r21,r3,r2
 40059dc:	a80b883a 	mov	r5,r21
 40059e0:	9009883a 	mov	r4,r18
 40059e4:	40079380 	call	4007938 <_sbrk_r>
 40059e8:	00ffffc4 	movi	r3,-1
 40059ec:	10c0e126 	beq	r2,r3,4005d74 <_malloc_r+0x788>
 40059f0:	1505c83a 	sub	r2,r2,r20
 40059f4:	1545883a 	add	r2,r2,r21
 40059f8:	10800054 	ori	r2,r2,1
 40059fc:	e0c00017 	ldw	r3,0(fp)
 4005a00:	9d000215 	stw	r20,8(r19)
 4005a04:	a0800115 	stw	r2,4(r20)
 4005a08:	a8c7883a 	add	r3,r21,r3
 4005a0c:	e0c00015 	stw	r3,0(fp)
 4005a10:	84c00e26 	beq	r16,r19,4005a4c <_malloc_r+0x460>
 4005a14:	018003c4 	movi	r6,15
 4005a18:	3580a72e 	bgeu	r6,r22,4005cb8 <_malloc_r+0x6cc>
 4005a1c:	81400117 	ldw	r5,4(r16)
 4005a20:	013ffe04 	movi	r4,-8
 4005a24:	b0bffd04 	addi	r2,r22,-12
 4005a28:	1104703a 	and	r2,r2,r4
 4005a2c:	2900004c 	andi	r4,r5,1
 4005a30:	2088b03a 	or	r4,r4,r2
 4005a34:	81000115 	stw	r4,4(r16)
 4005a38:	01400144 	movi	r5,5
 4005a3c:	8089883a 	add	r4,r16,r2
 4005a40:	21400115 	stw	r5,4(r4)
 4005a44:	21400215 	stw	r5,8(r4)
 4005a48:	3080cd36 	bltu	r6,r2,4005d80 <_malloc_r+0x794>
 4005a4c:	00810074 	movhi	r2,1025
 4005a50:	108c8704 	addi	r2,r2,12828
 4005a54:	11000017 	ldw	r4,0(r2)
 4005a58:	20c0012e 	bgeu	r4,r3,4005a60 <_malloc_r+0x474>
 4005a5c:	10c00015 	stw	r3,0(r2)
 4005a60:	00810074 	movhi	r2,1025
 4005a64:	108c8604 	addi	r2,r2,12824
 4005a68:	11000017 	ldw	r4,0(r2)
 4005a6c:	9c000217 	ldw	r16,8(r19)
 4005a70:	20c0012e 	bgeu	r4,r3,4005a78 <_malloc_r+0x48c>
 4005a74:	10c00015 	stw	r3,0(r2)
 4005a78:	80c00117 	ldw	r3,4(r16)
 4005a7c:	00bfff04 	movi	r2,-4
 4005a80:	1886703a 	and	r3,r3,r2
 4005a84:	1c45c83a 	sub	r2,r3,r17
 4005a88:	1c400236 	bltu	r3,r17,4005a94 <_malloc_r+0x4a8>
 4005a8c:	00c003c4 	movi	r3,15
 4005a90:	18800416 	blt	r3,r2,4005aa4 <_malloc_r+0x4b8>
 4005a94:	9009883a 	mov	r4,r18
 4005a98:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4005a9c:	0005883a 	mov	r2,zero
 4005aa0:	003f7b06 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 4005aa4:	88c00054 	ori	r3,r17,1
 4005aa8:	80c00115 	stw	r3,4(r16)
 4005aac:	8463883a 	add	r17,r16,r17
 4005ab0:	10800054 	ori	r2,r2,1
 4005ab4:	9c400215 	stw	r17,8(r19)
 4005ab8:	88800115 	stw	r2,4(r17)
 4005abc:	9009883a 	mov	r4,r18
 4005ac0:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4005ac4:	80800204 	addi	r2,r16,8
 4005ac8:	003f7106 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 4005acc:	00c00504 	movi	r3,20
 4005ad0:	18804a2e 	bgeu	r3,r2,4005bfc <_malloc_r+0x610>
 4005ad4:	00c01504 	movi	r3,84
 4005ad8:	18806e36 	bltu	r3,r2,4005c94 <_malloc_r+0x6a8>
 4005adc:	8804d33a 	srli	r2,r17,12
 4005ae0:	12001bc4 	addi	r8,r2,111
 4005ae4:	11c01b84 	addi	r7,r2,110
 4005ae8:	4209883a 	add	r4,r8,r8
 4005aec:	003edd06 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 4005af0:	3804d27a 	srli	r2,r7,9
 4005af4:	00c00104 	movi	r3,4
 4005af8:	1880442e 	bgeu	r3,r2,4005c0c <_malloc_r+0x620>
 4005afc:	00c00504 	movi	r3,20
 4005b00:	18808136 	bltu	r3,r2,4005d08 <_malloc_r+0x71c>
 4005b04:	11401704 	addi	r5,r2,92
 4005b08:	10c016c4 	addi	r3,r2,91
 4005b0c:	294b883a 	add	r5,r5,r5
 4005b10:	294b883a 	add	r5,r5,r5
 4005b14:	294b883a 	add	r5,r5,r5
 4005b18:	994b883a 	add	r5,r19,r5
 4005b1c:	28800017 	ldw	r2,0(r5)
 4005b20:	01810074 	movhi	r6,1025
 4005b24:	297ffe04 	addi	r5,r5,-8
 4005b28:	31803404 	addi	r6,r6,208
 4005b2c:	28806526 	beq	r5,r2,4005cc4 <_malloc_r+0x6d8>
 4005b30:	01bfff04 	movi	r6,-4
 4005b34:	10c00117 	ldw	r3,4(r2)
 4005b38:	1986703a 	and	r3,r3,r6
 4005b3c:	38c0022e 	bgeu	r7,r3,4005b48 <_malloc_r+0x55c>
 4005b40:	10800217 	ldw	r2,8(r2)
 4005b44:	28bffb1e 	bne	r5,r2,4005b34 <__alt_mem_onchip_memory+0xfbffdb34>
 4005b48:	11400317 	ldw	r5,12(r2)
 4005b4c:	98c00117 	ldw	r3,4(r19)
 4005b50:	81400315 	stw	r5,12(r16)
 4005b54:	80800215 	stw	r2,8(r16)
 4005b58:	2c000215 	stw	r16,8(r5)
 4005b5c:	14000315 	stw	r16,12(r2)
 4005b60:	003ef806 	br	4005744 <__alt_mem_onchip_memory+0xfbffd744>
 4005b64:	88c00054 	ori	r3,r17,1
 4005b68:	80c00115 	stw	r3,4(r16)
 4005b6c:	8463883a 	add	r17,r16,r17
 4005b70:	34400515 	stw	r17,20(r6)
 4005b74:	34400415 	stw	r17,16(r6)
 4005b78:	10c00054 	ori	r3,r2,1
 4005b7c:	8a000315 	stw	r8,12(r17)
 4005b80:	8a000215 	stw	r8,8(r17)
 4005b84:	88c00115 	stw	r3,4(r17)
 4005b88:	88a3883a 	add	r17,r17,r2
 4005b8c:	88800015 	stw	r2,0(r17)
 4005b90:	9009883a 	mov	r4,r18
 4005b94:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4005b98:	80800204 	addi	r2,r16,8
 4005b9c:	003f3c06 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 4005ba0:	30c00117 	ldw	r3,4(r6)
 4005ba4:	003ee706 	br	4005744 <__alt_mem_onchip_memory+0xfbffd744>
 4005ba8:	5ac00044 	addi	r11,r11,1
 4005bac:	588000cc 	andi	r2,r11,3
 4005bb0:	31800204 	addi	r6,r6,8
 4005bb4:	103efd1e 	bne	r2,zero,40057ac <__alt_mem_onchip_memory+0xfbffd7ac>
 4005bb8:	00002406 	br	4005c4c <_malloc_r+0x660>
 4005bbc:	14000317 	ldw	r16,12(r2)
 4005bc0:	143f251e 	bne	r2,r16,4005858 <__alt_mem_onchip_memory+0xfbffd858>
 4005bc4:	21000084 	addi	r4,r4,2
 4005bc8:	003ebc06 	br	40056bc <__alt_mem_onchip_memory+0xfbffd6bc>
 4005bcc:	8085883a 	add	r2,r16,r2
 4005bd0:	10c00117 	ldw	r3,4(r2)
 4005bd4:	81000317 	ldw	r4,12(r16)
 4005bd8:	81400217 	ldw	r5,8(r16)
 4005bdc:	18c00054 	ori	r3,r3,1
 4005be0:	10c00115 	stw	r3,4(r2)
 4005be4:	29000315 	stw	r4,12(r5)
 4005be8:	21400215 	stw	r5,8(r4)
 4005bec:	9009883a 	mov	r4,r18
 4005bf0:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4005bf4:	80800204 	addi	r2,r16,8
 4005bf8:	003f2506 	br	4005890 <__alt_mem_onchip_memory+0xfbffd890>
 4005bfc:	12001704 	addi	r8,r2,92
 4005c00:	11c016c4 	addi	r7,r2,91
 4005c04:	4209883a 	add	r4,r8,r8
 4005c08:	003e9606 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 4005c0c:	3804d1ba 	srli	r2,r7,6
 4005c10:	11400e44 	addi	r5,r2,57
 4005c14:	10c00e04 	addi	r3,r2,56
 4005c18:	294b883a 	add	r5,r5,r5
 4005c1c:	003fbc06 	br	4005b10 <__alt_mem_onchip_memory+0xfbffdb10>
 4005c20:	84ff5926 	beq	r16,r19,4005988 <__alt_mem_onchip_memory+0xfbffd988>
 4005c24:	00810074 	movhi	r2,1025
 4005c28:	10803404 	addi	r2,r2,208
 4005c2c:	14000217 	ldw	r16,8(r2)
 4005c30:	00bfff04 	movi	r2,-4
 4005c34:	80c00117 	ldw	r3,4(r16)
 4005c38:	1886703a 	and	r3,r3,r2
 4005c3c:	003f9106 	br	4005a84 <__alt_mem_onchip_memory+0xfbffda84>
 4005c40:	60800217 	ldw	r2,8(r12)
 4005c44:	213fffc4 	addi	r4,r4,-1
 4005c48:	1300651e 	bne	r2,r12,4005de0 <_malloc_r+0x7f4>
 4005c4c:	208000cc 	andi	r2,r4,3
 4005c50:	633ffe04 	addi	r12,r12,-8
 4005c54:	103ffa1e 	bne	r2,zero,4005c40 <__alt_mem_onchip_memory+0xfbffdc40>
 4005c58:	98800117 	ldw	r2,4(r19)
 4005c5c:	0146303a 	nor	r3,zero,r5
 4005c60:	1884703a 	and	r2,r3,r2
 4005c64:	98800115 	stw	r2,4(r19)
 4005c68:	294b883a 	add	r5,r5,r5
 4005c6c:	117f2836 	bltu	r2,r5,4005910 <__alt_mem_onchip_memory+0xfbffd910>
 4005c70:	283f2726 	beq	r5,zero,4005910 <__alt_mem_onchip_memory+0xfbffd910>
 4005c74:	2886703a 	and	r3,r5,r2
 4005c78:	5809883a 	mov	r4,r11
 4005c7c:	183ec31e 	bne	r3,zero,400578c <__alt_mem_onchip_memory+0xfbffd78c>
 4005c80:	294b883a 	add	r5,r5,r5
 4005c84:	2886703a 	and	r3,r5,r2
 4005c88:	21000104 	addi	r4,r4,4
 4005c8c:	183ffc26 	beq	r3,zero,4005c80 <__alt_mem_onchip_memory+0xfbffdc80>
 4005c90:	003ebe06 	br	400578c <__alt_mem_onchip_memory+0xfbffd78c>
 4005c94:	00c05504 	movi	r3,340
 4005c98:	18801236 	bltu	r3,r2,4005ce4 <_malloc_r+0x6f8>
 4005c9c:	8804d3fa 	srli	r2,r17,15
 4005ca0:	12001e04 	addi	r8,r2,120
 4005ca4:	11c01dc4 	addi	r7,r2,119
 4005ca8:	4209883a 	add	r4,r8,r8
 4005cac:	003e6d06 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 4005cb0:	00c40004 	movi	r3,4096
 4005cb4:	003f4606 	br	40059d0 <__alt_mem_onchip_memory+0xfbffd9d0>
 4005cb8:	00800044 	movi	r2,1
 4005cbc:	a0800115 	stw	r2,4(r20)
 4005cc0:	003f7406 	br	4005a94 <__alt_mem_onchip_memory+0xfbffda94>
 4005cc4:	1805d0ba 	srai	r2,r3,2
 4005cc8:	01c00044 	movi	r7,1
 4005ccc:	30c00117 	ldw	r3,4(r6)
 4005cd0:	388e983a 	sll	r7,r7,r2
 4005cd4:	2805883a 	mov	r2,r5
 4005cd8:	38c6b03a 	or	r3,r7,r3
 4005cdc:	30c00115 	stw	r3,4(r6)
 4005ce0:	003f9b06 	br	4005b50 <__alt_mem_onchip_memory+0xfbffdb50>
 4005ce4:	00c15504 	movi	r3,1364
 4005ce8:	18801a36 	bltu	r3,r2,4005d54 <_malloc_r+0x768>
 4005cec:	8804d4ba 	srli	r2,r17,18
 4005cf0:	12001f44 	addi	r8,r2,125
 4005cf4:	11c01f04 	addi	r7,r2,124
 4005cf8:	4209883a 	add	r4,r8,r8
 4005cfc:	003e5906 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 4005d00:	ad400404 	addi	r21,r21,16
 4005d04:	003f1706 	br	4005964 <__alt_mem_onchip_memory+0xfbffd964>
 4005d08:	00c01504 	movi	r3,84
 4005d0c:	18802336 	bltu	r3,r2,4005d9c <_malloc_r+0x7b0>
 4005d10:	3804d33a 	srli	r2,r7,12
 4005d14:	11401bc4 	addi	r5,r2,111
 4005d18:	10c01b84 	addi	r3,r2,110
 4005d1c:	294b883a 	add	r5,r5,r5
 4005d20:	003f7b06 	br	4005b10 <__alt_mem_onchip_memory+0xfbffdb10>
 4005d24:	9c000217 	ldw	r16,8(r19)
 4005d28:	00bfff04 	movi	r2,-4
 4005d2c:	80c00117 	ldw	r3,4(r16)
 4005d30:	1886703a 	and	r3,r3,r2
 4005d34:	003f5306 	br	4005a84 <__alt_mem_onchip_memory+0xfbffda84>
 4005d38:	3083ffcc 	andi	r2,r6,4095
 4005d3c:	103f181e 	bne	r2,zero,40059a0 <__alt_mem_onchip_memory+0xfbffd9a0>
 4005d40:	99000217 	ldw	r4,8(r19)
 4005d44:	b545883a 	add	r2,r22,r21
 4005d48:	10800054 	ori	r2,r2,1
 4005d4c:	20800115 	stw	r2,4(r4)
 4005d50:	003f3e06 	br	4005a4c <__alt_mem_onchip_memory+0xfbffda4c>
 4005d54:	01003f84 	movi	r4,254
 4005d58:	02001fc4 	movi	r8,127
 4005d5c:	01c01f84 	movi	r7,126
 4005d60:	003e4006 	br	4005664 <__alt_mem_onchip_memory+0xfbffd664>
 4005d64:	00810074 	movhi	r2,1025
 4005d68:	1085bb04 	addi	r2,r2,5868
 4005d6c:	15000015 	stw	r20,0(r2)
 4005d70:	003f1106 	br	40059b8 <__alt_mem_onchip_memory+0xfbffd9b8>
 4005d74:	00800044 	movi	r2,1
 4005d78:	002b883a 	mov	r21,zero
 4005d7c:	003f1f06 	br	40059fc <__alt_mem_onchip_memory+0xfbffd9fc>
 4005d80:	81400204 	addi	r5,r16,8
 4005d84:	9009883a 	mov	r4,r18
 4005d88:	40049f40 	call	40049f4 <_free_r>
 4005d8c:	00810074 	movhi	r2,1025
 4005d90:	108c9304 	addi	r2,r2,12876
 4005d94:	10c00017 	ldw	r3,0(r2)
 4005d98:	003f2c06 	br	4005a4c <__alt_mem_onchip_memory+0xfbffda4c>
 4005d9c:	00c05504 	movi	r3,340
 4005da0:	18800536 	bltu	r3,r2,4005db8 <_malloc_r+0x7cc>
 4005da4:	3804d3fa 	srli	r2,r7,15
 4005da8:	11401e04 	addi	r5,r2,120
 4005dac:	10c01dc4 	addi	r3,r2,119
 4005db0:	294b883a 	add	r5,r5,r5
 4005db4:	003f5606 	br	4005b10 <__alt_mem_onchip_memory+0xfbffdb10>
 4005db8:	00c15504 	movi	r3,1364
 4005dbc:	18800536 	bltu	r3,r2,4005dd4 <_malloc_r+0x7e8>
 4005dc0:	3804d4ba 	srli	r2,r7,18
 4005dc4:	11401f44 	addi	r5,r2,125
 4005dc8:	10c01f04 	addi	r3,r2,124
 4005dcc:	294b883a 	add	r5,r5,r5
 4005dd0:	003f4f06 	br	4005b10 <__alt_mem_onchip_memory+0xfbffdb10>
 4005dd4:	01403f84 	movi	r5,254
 4005dd8:	00c01f84 	movi	r3,126
 4005ddc:	003f4c06 	br	4005b10 <__alt_mem_onchip_memory+0xfbffdb10>
 4005de0:	98800117 	ldw	r2,4(r19)
 4005de4:	003fa006 	br	4005c68 <__alt_mem_onchip_memory+0xfbffdc68>
 4005de8:	8808d0fa 	srli	r4,r17,3
 4005dec:	20800044 	addi	r2,r4,1
 4005df0:	1085883a 	add	r2,r2,r2
 4005df4:	003e9006 	br	4005838 <__alt_mem_onchip_memory+0xfbffd838>

04005df8 <memchr>:
 4005df8:	208000cc 	andi	r2,r4,3
 4005dfc:	280f883a 	mov	r7,r5
 4005e00:	10003426 	beq	r2,zero,4005ed4 <memchr+0xdc>
 4005e04:	30bfffc4 	addi	r2,r6,-1
 4005e08:	30001a26 	beq	r6,zero,4005e74 <memchr+0x7c>
 4005e0c:	20c00003 	ldbu	r3,0(r4)
 4005e10:	29803fcc 	andi	r6,r5,255
 4005e14:	30c0051e 	bne	r6,r3,4005e2c <memchr+0x34>
 4005e18:	00001806 	br	4005e7c <memchr+0x84>
 4005e1c:	10001526 	beq	r2,zero,4005e74 <memchr+0x7c>
 4005e20:	20c00003 	ldbu	r3,0(r4)
 4005e24:	10bfffc4 	addi	r2,r2,-1
 4005e28:	30c01426 	beq	r6,r3,4005e7c <memchr+0x84>
 4005e2c:	21000044 	addi	r4,r4,1
 4005e30:	20c000cc 	andi	r3,r4,3
 4005e34:	183ff91e 	bne	r3,zero,4005e1c <__alt_mem_onchip_memory+0xfbffde1c>
 4005e38:	020000c4 	movi	r8,3
 4005e3c:	40801136 	bltu	r8,r2,4005e84 <memchr+0x8c>
 4005e40:	10000c26 	beq	r2,zero,4005e74 <memchr+0x7c>
 4005e44:	20c00003 	ldbu	r3,0(r4)
 4005e48:	29403fcc 	andi	r5,r5,255
 4005e4c:	28c00b26 	beq	r5,r3,4005e7c <memchr+0x84>
 4005e50:	20c00044 	addi	r3,r4,1
 4005e54:	39803fcc 	andi	r6,r7,255
 4005e58:	2089883a 	add	r4,r4,r2
 4005e5c:	00000306 	br	4005e6c <memchr+0x74>
 4005e60:	18c00044 	addi	r3,r3,1
 4005e64:	197fffc3 	ldbu	r5,-1(r3)
 4005e68:	31400526 	beq	r6,r5,4005e80 <memchr+0x88>
 4005e6c:	1805883a 	mov	r2,r3
 4005e70:	20fffb1e 	bne	r4,r3,4005e60 <__alt_mem_onchip_memory+0xfbffde60>
 4005e74:	0005883a 	mov	r2,zero
 4005e78:	f800283a 	ret
 4005e7c:	2005883a 	mov	r2,r4
 4005e80:	f800283a 	ret
 4005e84:	28c03fcc 	andi	r3,r5,255
 4005e88:	1812923a 	slli	r9,r3,8
 4005e8c:	02ffbff4 	movhi	r11,65279
 4005e90:	02a02074 	movhi	r10,32897
 4005e94:	48d2b03a 	or	r9,r9,r3
 4005e98:	4806943a 	slli	r3,r9,16
 4005e9c:	5affbfc4 	addi	r11,r11,-257
 4005ea0:	52a02004 	addi	r10,r10,-32640
 4005ea4:	48d2b03a 	or	r9,r9,r3
 4005ea8:	20c00017 	ldw	r3,0(r4)
 4005eac:	48c6f03a 	xor	r3,r9,r3
 4005eb0:	1acd883a 	add	r6,r3,r11
 4005eb4:	00c6303a 	nor	r3,zero,r3
 4005eb8:	30c6703a 	and	r3,r6,r3
 4005ebc:	1a86703a 	and	r3,r3,r10
 4005ec0:	183fe01e 	bne	r3,zero,4005e44 <__alt_mem_onchip_memory+0xfbffde44>
 4005ec4:	10bfff04 	addi	r2,r2,-4
 4005ec8:	21000104 	addi	r4,r4,4
 4005ecc:	40bff636 	bltu	r8,r2,4005ea8 <__alt_mem_onchip_memory+0xfbffdea8>
 4005ed0:	003fdb06 	br	4005e40 <__alt_mem_onchip_memory+0xfbffde40>
 4005ed4:	3005883a 	mov	r2,r6
 4005ed8:	003fd706 	br	4005e38 <__alt_mem_onchip_memory+0xfbffde38>

04005edc <memcpy>:
 4005edc:	defffd04 	addi	sp,sp,-12
 4005ee0:	dfc00215 	stw	ra,8(sp)
 4005ee4:	dc400115 	stw	r17,4(sp)
 4005ee8:	dc000015 	stw	r16,0(sp)
 4005eec:	00c003c4 	movi	r3,15
 4005ef0:	2005883a 	mov	r2,r4
 4005ef4:	1980452e 	bgeu	r3,r6,400600c <memcpy+0x130>
 4005ef8:	2906b03a 	or	r3,r5,r4
 4005efc:	18c000cc 	andi	r3,r3,3
 4005f00:	1800441e 	bne	r3,zero,4006014 <memcpy+0x138>
 4005f04:	347ffc04 	addi	r17,r6,-16
 4005f08:	8822d13a 	srli	r17,r17,4
 4005f0c:	28c00104 	addi	r3,r5,4
 4005f10:	23400104 	addi	r13,r4,4
 4005f14:	8820913a 	slli	r16,r17,4
 4005f18:	2b000204 	addi	r12,r5,8
 4005f1c:	22c00204 	addi	r11,r4,8
 4005f20:	84000504 	addi	r16,r16,20
 4005f24:	2a800304 	addi	r10,r5,12
 4005f28:	22400304 	addi	r9,r4,12
 4005f2c:	2c21883a 	add	r16,r5,r16
 4005f30:	2811883a 	mov	r8,r5
 4005f34:	200f883a 	mov	r7,r4
 4005f38:	41000017 	ldw	r4,0(r8)
 4005f3c:	1fc00017 	ldw	ra,0(r3)
 4005f40:	63c00017 	ldw	r15,0(r12)
 4005f44:	39000015 	stw	r4,0(r7)
 4005f48:	53800017 	ldw	r14,0(r10)
 4005f4c:	6fc00015 	stw	ra,0(r13)
 4005f50:	5bc00015 	stw	r15,0(r11)
 4005f54:	4b800015 	stw	r14,0(r9)
 4005f58:	18c00404 	addi	r3,r3,16
 4005f5c:	39c00404 	addi	r7,r7,16
 4005f60:	42000404 	addi	r8,r8,16
 4005f64:	6b400404 	addi	r13,r13,16
 4005f68:	63000404 	addi	r12,r12,16
 4005f6c:	5ac00404 	addi	r11,r11,16
 4005f70:	52800404 	addi	r10,r10,16
 4005f74:	4a400404 	addi	r9,r9,16
 4005f78:	1c3fef1e 	bne	r3,r16,4005f38 <__alt_mem_onchip_memory+0xfbffdf38>
 4005f7c:	89c00044 	addi	r7,r17,1
 4005f80:	380e913a 	slli	r7,r7,4
 4005f84:	310003cc 	andi	r4,r6,15
 4005f88:	02c000c4 	movi	r11,3
 4005f8c:	11c7883a 	add	r3,r2,r7
 4005f90:	29cb883a 	add	r5,r5,r7
 4005f94:	5900212e 	bgeu	r11,r4,400601c <memcpy+0x140>
 4005f98:	1813883a 	mov	r9,r3
 4005f9c:	2811883a 	mov	r8,r5
 4005fa0:	200f883a 	mov	r7,r4
 4005fa4:	42800017 	ldw	r10,0(r8)
 4005fa8:	4a400104 	addi	r9,r9,4
 4005fac:	39ffff04 	addi	r7,r7,-4
 4005fb0:	4abfff15 	stw	r10,-4(r9)
 4005fb4:	42000104 	addi	r8,r8,4
 4005fb8:	59fffa36 	bltu	r11,r7,4005fa4 <__alt_mem_onchip_memory+0xfbffdfa4>
 4005fbc:	213fff04 	addi	r4,r4,-4
 4005fc0:	2008d0ba 	srli	r4,r4,2
 4005fc4:	318000cc 	andi	r6,r6,3
 4005fc8:	21000044 	addi	r4,r4,1
 4005fcc:	2109883a 	add	r4,r4,r4
 4005fd0:	2109883a 	add	r4,r4,r4
 4005fd4:	1907883a 	add	r3,r3,r4
 4005fd8:	290b883a 	add	r5,r5,r4
 4005fdc:	30000626 	beq	r6,zero,4005ff8 <memcpy+0x11c>
 4005fe0:	198d883a 	add	r6,r3,r6
 4005fe4:	29c00003 	ldbu	r7,0(r5)
 4005fe8:	18c00044 	addi	r3,r3,1
 4005fec:	29400044 	addi	r5,r5,1
 4005ff0:	19ffffc5 	stb	r7,-1(r3)
 4005ff4:	19bffb1e 	bne	r3,r6,4005fe4 <__alt_mem_onchip_memory+0xfbffdfe4>
 4005ff8:	dfc00217 	ldw	ra,8(sp)
 4005ffc:	dc400117 	ldw	r17,4(sp)
 4006000:	dc000017 	ldw	r16,0(sp)
 4006004:	dec00304 	addi	sp,sp,12
 4006008:	f800283a 	ret
 400600c:	2007883a 	mov	r3,r4
 4006010:	003ff206 	br	4005fdc <__alt_mem_onchip_memory+0xfbffdfdc>
 4006014:	2007883a 	mov	r3,r4
 4006018:	003ff106 	br	4005fe0 <__alt_mem_onchip_memory+0xfbffdfe0>
 400601c:	200d883a 	mov	r6,r4
 4006020:	003fee06 	br	4005fdc <__alt_mem_onchip_memory+0xfbffdfdc>

04006024 <memmove>:
 4006024:	2005883a 	mov	r2,r4
 4006028:	29000b2e 	bgeu	r5,r4,4006058 <memmove+0x34>
 400602c:	298f883a 	add	r7,r5,r6
 4006030:	21c0092e 	bgeu	r4,r7,4006058 <memmove+0x34>
 4006034:	2187883a 	add	r3,r4,r6
 4006038:	198bc83a 	sub	r5,r3,r6
 400603c:	30004826 	beq	r6,zero,4006160 <memmove+0x13c>
 4006040:	39ffffc4 	addi	r7,r7,-1
 4006044:	39000003 	ldbu	r4,0(r7)
 4006048:	18ffffc4 	addi	r3,r3,-1
 400604c:	19000005 	stb	r4,0(r3)
 4006050:	28fffb1e 	bne	r5,r3,4006040 <__alt_mem_onchip_memory+0xfbffe040>
 4006054:	f800283a 	ret
 4006058:	00c003c4 	movi	r3,15
 400605c:	1980412e 	bgeu	r3,r6,4006164 <memmove+0x140>
 4006060:	2886b03a 	or	r3,r5,r2
 4006064:	18c000cc 	andi	r3,r3,3
 4006068:	1800401e 	bne	r3,zero,400616c <memmove+0x148>
 400606c:	33fffc04 	addi	r15,r6,-16
 4006070:	781ed13a 	srli	r15,r15,4
 4006074:	28c00104 	addi	r3,r5,4
 4006078:	13400104 	addi	r13,r2,4
 400607c:	781c913a 	slli	r14,r15,4
 4006080:	2b000204 	addi	r12,r5,8
 4006084:	12c00204 	addi	r11,r2,8
 4006088:	73800504 	addi	r14,r14,20
 400608c:	2a800304 	addi	r10,r5,12
 4006090:	12400304 	addi	r9,r2,12
 4006094:	2b9d883a 	add	r14,r5,r14
 4006098:	2811883a 	mov	r8,r5
 400609c:	100f883a 	mov	r7,r2
 40060a0:	41000017 	ldw	r4,0(r8)
 40060a4:	39c00404 	addi	r7,r7,16
 40060a8:	18c00404 	addi	r3,r3,16
 40060ac:	393ffc15 	stw	r4,-16(r7)
 40060b0:	193ffc17 	ldw	r4,-16(r3)
 40060b4:	6b400404 	addi	r13,r13,16
 40060b8:	5ac00404 	addi	r11,r11,16
 40060bc:	693ffc15 	stw	r4,-16(r13)
 40060c0:	61000017 	ldw	r4,0(r12)
 40060c4:	4a400404 	addi	r9,r9,16
 40060c8:	42000404 	addi	r8,r8,16
 40060cc:	593ffc15 	stw	r4,-16(r11)
 40060d0:	51000017 	ldw	r4,0(r10)
 40060d4:	63000404 	addi	r12,r12,16
 40060d8:	52800404 	addi	r10,r10,16
 40060dc:	493ffc15 	stw	r4,-16(r9)
 40060e0:	1bbfef1e 	bne	r3,r14,40060a0 <__alt_mem_onchip_memory+0xfbffe0a0>
 40060e4:	79000044 	addi	r4,r15,1
 40060e8:	2008913a 	slli	r4,r4,4
 40060ec:	328003cc 	andi	r10,r6,15
 40060f0:	02c000c4 	movi	r11,3
 40060f4:	1107883a 	add	r3,r2,r4
 40060f8:	290b883a 	add	r5,r5,r4
 40060fc:	5a801e2e 	bgeu	r11,r10,4006178 <memmove+0x154>
 4006100:	1813883a 	mov	r9,r3
 4006104:	2811883a 	mov	r8,r5
 4006108:	500f883a 	mov	r7,r10
 400610c:	41000017 	ldw	r4,0(r8)
 4006110:	4a400104 	addi	r9,r9,4
 4006114:	39ffff04 	addi	r7,r7,-4
 4006118:	493fff15 	stw	r4,-4(r9)
 400611c:	42000104 	addi	r8,r8,4
 4006120:	59fffa36 	bltu	r11,r7,400610c <__alt_mem_onchip_memory+0xfbffe10c>
 4006124:	513fff04 	addi	r4,r10,-4
 4006128:	2008d0ba 	srli	r4,r4,2
 400612c:	318000cc 	andi	r6,r6,3
 4006130:	21000044 	addi	r4,r4,1
 4006134:	2109883a 	add	r4,r4,r4
 4006138:	2109883a 	add	r4,r4,r4
 400613c:	1907883a 	add	r3,r3,r4
 4006140:	290b883a 	add	r5,r5,r4
 4006144:	30000b26 	beq	r6,zero,4006174 <memmove+0x150>
 4006148:	198d883a 	add	r6,r3,r6
 400614c:	29c00003 	ldbu	r7,0(r5)
 4006150:	18c00044 	addi	r3,r3,1
 4006154:	29400044 	addi	r5,r5,1
 4006158:	19ffffc5 	stb	r7,-1(r3)
 400615c:	19bffb1e 	bne	r3,r6,400614c <__alt_mem_onchip_memory+0xfbffe14c>
 4006160:	f800283a 	ret
 4006164:	1007883a 	mov	r3,r2
 4006168:	003ff606 	br	4006144 <__alt_mem_onchip_memory+0xfbffe144>
 400616c:	1007883a 	mov	r3,r2
 4006170:	003ff506 	br	4006148 <__alt_mem_onchip_memory+0xfbffe148>
 4006174:	f800283a 	ret
 4006178:	500d883a 	mov	r6,r10
 400617c:	003ff106 	br	4006144 <__alt_mem_onchip_memory+0xfbffe144>

04006180 <memset>:
 4006180:	20c000cc 	andi	r3,r4,3
 4006184:	2005883a 	mov	r2,r4
 4006188:	18004426 	beq	r3,zero,400629c <memset+0x11c>
 400618c:	31ffffc4 	addi	r7,r6,-1
 4006190:	30004026 	beq	r6,zero,4006294 <memset+0x114>
 4006194:	2813883a 	mov	r9,r5
 4006198:	200d883a 	mov	r6,r4
 400619c:	2007883a 	mov	r3,r4
 40061a0:	00000406 	br	40061b4 <memset+0x34>
 40061a4:	3a3fffc4 	addi	r8,r7,-1
 40061a8:	31800044 	addi	r6,r6,1
 40061ac:	38003926 	beq	r7,zero,4006294 <memset+0x114>
 40061b0:	400f883a 	mov	r7,r8
 40061b4:	18c00044 	addi	r3,r3,1
 40061b8:	32400005 	stb	r9,0(r6)
 40061bc:	1a0000cc 	andi	r8,r3,3
 40061c0:	403ff81e 	bne	r8,zero,40061a4 <__alt_mem_onchip_memory+0xfbffe1a4>
 40061c4:	010000c4 	movi	r4,3
 40061c8:	21c02d2e 	bgeu	r4,r7,4006280 <memset+0x100>
 40061cc:	29003fcc 	andi	r4,r5,255
 40061d0:	200c923a 	slli	r6,r4,8
 40061d4:	3108b03a 	or	r4,r6,r4
 40061d8:	200c943a 	slli	r6,r4,16
 40061dc:	218cb03a 	or	r6,r4,r6
 40061e0:	010003c4 	movi	r4,15
 40061e4:	21c0182e 	bgeu	r4,r7,4006248 <memset+0xc8>
 40061e8:	3b3ffc04 	addi	r12,r7,-16
 40061ec:	6018d13a 	srli	r12,r12,4
 40061f0:	1a000104 	addi	r8,r3,4
 40061f4:	1ac00204 	addi	r11,r3,8
 40061f8:	6008913a 	slli	r4,r12,4
 40061fc:	1a800304 	addi	r10,r3,12
 4006200:	1813883a 	mov	r9,r3
 4006204:	21000504 	addi	r4,r4,20
 4006208:	1909883a 	add	r4,r3,r4
 400620c:	49800015 	stw	r6,0(r9)
 4006210:	41800015 	stw	r6,0(r8)
 4006214:	59800015 	stw	r6,0(r11)
 4006218:	51800015 	stw	r6,0(r10)
 400621c:	42000404 	addi	r8,r8,16
 4006220:	4a400404 	addi	r9,r9,16
 4006224:	5ac00404 	addi	r11,r11,16
 4006228:	52800404 	addi	r10,r10,16
 400622c:	413ff71e 	bne	r8,r4,400620c <__alt_mem_onchip_memory+0xfbffe20c>
 4006230:	63000044 	addi	r12,r12,1
 4006234:	6018913a 	slli	r12,r12,4
 4006238:	39c003cc 	andi	r7,r7,15
 400623c:	010000c4 	movi	r4,3
 4006240:	1b07883a 	add	r3,r3,r12
 4006244:	21c00e2e 	bgeu	r4,r7,4006280 <memset+0x100>
 4006248:	1813883a 	mov	r9,r3
 400624c:	3811883a 	mov	r8,r7
 4006250:	010000c4 	movi	r4,3
 4006254:	49800015 	stw	r6,0(r9)
 4006258:	423fff04 	addi	r8,r8,-4
 400625c:	4a400104 	addi	r9,r9,4
 4006260:	223ffc36 	bltu	r4,r8,4006254 <__alt_mem_onchip_memory+0xfbffe254>
 4006264:	393fff04 	addi	r4,r7,-4
 4006268:	2008d0ba 	srli	r4,r4,2
 400626c:	39c000cc 	andi	r7,r7,3
 4006270:	21000044 	addi	r4,r4,1
 4006274:	2109883a 	add	r4,r4,r4
 4006278:	2109883a 	add	r4,r4,r4
 400627c:	1907883a 	add	r3,r3,r4
 4006280:	38000526 	beq	r7,zero,4006298 <memset+0x118>
 4006284:	19cf883a 	add	r7,r3,r7
 4006288:	19400005 	stb	r5,0(r3)
 400628c:	18c00044 	addi	r3,r3,1
 4006290:	38fffd1e 	bne	r7,r3,4006288 <__alt_mem_onchip_memory+0xfbffe288>
 4006294:	f800283a 	ret
 4006298:	f800283a 	ret
 400629c:	2007883a 	mov	r3,r4
 40062a0:	300f883a 	mov	r7,r6
 40062a4:	003fc706 	br	40061c4 <__alt_mem_onchip_memory+0xfbffe1c4>

040062a8 <_Balloc>:
 40062a8:	20801317 	ldw	r2,76(r4)
 40062ac:	defffc04 	addi	sp,sp,-16
 40062b0:	dc400115 	stw	r17,4(sp)
 40062b4:	dc000015 	stw	r16,0(sp)
 40062b8:	dfc00315 	stw	ra,12(sp)
 40062bc:	dc800215 	stw	r18,8(sp)
 40062c0:	2023883a 	mov	r17,r4
 40062c4:	2821883a 	mov	r16,r5
 40062c8:	10000f26 	beq	r2,zero,4006308 <_Balloc+0x60>
 40062cc:	8407883a 	add	r3,r16,r16
 40062d0:	18c7883a 	add	r3,r3,r3
 40062d4:	10c7883a 	add	r3,r2,r3
 40062d8:	18800017 	ldw	r2,0(r3)
 40062dc:	10001126 	beq	r2,zero,4006324 <_Balloc+0x7c>
 40062e0:	11000017 	ldw	r4,0(r2)
 40062e4:	19000015 	stw	r4,0(r3)
 40062e8:	10000415 	stw	zero,16(r2)
 40062ec:	10000315 	stw	zero,12(r2)
 40062f0:	dfc00317 	ldw	ra,12(sp)
 40062f4:	dc800217 	ldw	r18,8(sp)
 40062f8:	dc400117 	ldw	r17,4(sp)
 40062fc:	dc000017 	ldw	r16,0(sp)
 4006300:	dec00404 	addi	sp,sp,16
 4006304:	f800283a 	ret
 4006308:	01800844 	movi	r6,33
 400630c:	01400104 	movi	r5,4
 4006310:	40093500 	call	4009350 <_calloc_r>
 4006314:	88801315 	stw	r2,76(r17)
 4006318:	103fec1e 	bne	r2,zero,40062cc <__alt_mem_onchip_memory+0xfbffe2cc>
 400631c:	0005883a 	mov	r2,zero
 4006320:	003ff306 	br	40062f0 <__alt_mem_onchip_memory+0xfbffe2f0>
 4006324:	01400044 	movi	r5,1
 4006328:	2c24983a 	sll	r18,r5,r16
 400632c:	8809883a 	mov	r4,r17
 4006330:	91800144 	addi	r6,r18,5
 4006334:	318d883a 	add	r6,r6,r6
 4006338:	318d883a 	add	r6,r6,r6
 400633c:	40093500 	call	4009350 <_calloc_r>
 4006340:	103ff626 	beq	r2,zero,400631c <__alt_mem_onchip_memory+0xfbffe31c>
 4006344:	14000115 	stw	r16,4(r2)
 4006348:	14800215 	stw	r18,8(r2)
 400634c:	003fe606 	br	40062e8 <__alt_mem_onchip_memory+0xfbffe2e8>

04006350 <_Bfree>:
 4006350:	28000826 	beq	r5,zero,4006374 <_Bfree+0x24>
 4006354:	28c00117 	ldw	r3,4(r5)
 4006358:	20801317 	ldw	r2,76(r4)
 400635c:	18c7883a 	add	r3,r3,r3
 4006360:	18c7883a 	add	r3,r3,r3
 4006364:	10c5883a 	add	r2,r2,r3
 4006368:	10c00017 	ldw	r3,0(r2)
 400636c:	28c00015 	stw	r3,0(r5)
 4006370:	11400015 	stw	r5,0(r2)
 4006374:	f800283a 	ret

04006378 <__multadd>:
 4006378:	defff704 	addi	sp,sp,-36
 400637c:	dc800215 	stw	r18,8(sp)
 4006380:	2c800417 	ldw	r18,16(r5)
 4006384:	dd800615 	stw	r22,24(sp)
 4006388:	dd400515 	stw	r21,20(sp)
 400638c:	dd000415 	stw	r20,16(sp)
 4006390:	dcc00315 	stw	r19,12(sp)
 4006394:	dc400115 	stw	r17,4(sp)
 4006398:	dc000015 	stw	r16,0(sp)
 400639c:	dfc00815 	stw	ra,32(sp)
 40063a0:	ddc00715 	stw	r23,28(sp)
 40063a4:	2827883a 	mov	r19,r5
 40063a8:	2029883a 	mov	r20,r4
 40063ac:	3023883a 	mov	r17,r6
 40063b0:	3821883a 	mov	r16,r7
 40063b4:	2d400504 	addi	r21,r5,20
 40063b8:	002d883a 	mov	r22,zero
 40063bc:	adc00017 	ldw	r23,0(r21)
 40063c0:	880b883a 	mov	r5,r17
 40063c4:	ad400104 	addi	r21,r21,4
 40063c8:	b93fffcc 	andi	r4,r23,65535
 40063cc:	400a95c0 	call	400a95c <__mulsi3>
 40063d0:	b808d43a 	srli	r4,r23,16
 40063d4:	880b883a 	mov	r5,r17
 40063d8:	1421883a 	add	r16,r2,r16
 40063dc:	400a95c0 	call	400a95c <__mulsi3>
 40063e0:	800ed43a 	srli	r7,r16,16
 40063e4:	80ffffcc 	andi	r3,r16,65535
 40063e8:	b5800044 	addi	r22,r22,1
 40063ec:	11c5883a 	add	r2,r2,r7
 40063f0:	100e943a 	slli	r7,r2,16
 40063f4:	1020d43a 	srli	r16,r2,16
 40063f8:	38c7883a 	add	r3,r7,r3
 40063fc:	a8ffff15 	stw	r3,-4(r21)
 4006400:	b4bfee16 	blt	r22,r18,40063bc <__alt_mem_onchip_memory+0xfbffe3bc>
 4006404:	80000926 	beq	r16,zero,400642c <__multadd+0xb4>
 4006408:	98800217 	ldw	r2,8(r19)
 400640c:	9080130e 	bge	r18,r2,400645c <__multadd+0xe4>
 4006410:	90800144 	addi	r2,r18,5
 4006414:	1085883a 	add	r2,r2,r2
 4006418:	1085883a 	add	r2,r2,r2
 400641c:	9885883a 	add	r2,r19,r2
 4006420:	14000015 	stw	r16,0(r2)
 4006424:	94800044 	addi	r18,r18,1
 4006428:	9c800415 	stw	r18,16(r19)
 400642c:	9805883a 	mov	r2,r19
 4006430:	dfc00817 	ldw	ra,32(sp)
 4006434:	ddc00717 	ldw	r23,28(sp)
 4006438:	dd800617 	ldw	r22,24(sp)
 400643c:	dd400517 	ldw	r21,20(sp)
 4006440:	dd000417 	ldw	r20,16(sp)
 4006444:	dcc00317 	ldw	r19,12(sp)
 4006448:	dc800217 	ldw	r18,8(sp)
 400644c:	dc400117 	ldw	r17,4(sp)
 4006450:	dc000017 	ldw	r16,0(sp)
 4006454:	dec00904 	addi	sp,sp,36
 4006458:	f800283a 	ret
 400645c:	99400117 	ldw	r5,4(r19)
 4006460:	a009883a 	mov	r4,r20
 4006464:	29400044 	addi	r5,r5,1
 4006468:	40062a80 	call	40062a8 <_Balloc>
 400646c:	99800417 	ldw	r6,16(r19)
 4006470:	99400304 	addi	r5,r19,12
 4006474:	11000304 	addi	r4,r2,12
 4006478:	31800084 	addi	r6,r6,2
 400647c:	318d883a 	add	r6,r6,r6
 4006480:	318d883a 	add	r6,r6,r6
 4006484:	1023883a 	mov	r17,r2
 4006488:	4005edc0 	call	4005edc <memcpy>
 400648c:	98000a26 	beq	r19,zero,40064b8 <__multadd+0x140>
 4006490:	98c00117 	ldw	r3,4(r19)
 4006494:	a0801317 	ldw	r2,76(r20)
 4006498:	18c7883a 	add	r3,r3,r3
 400649c:	18c7883a 	add	r3,r3,r3
 40064a0:	10c5883a 	add	r2,r2,r3
 40064a4:	10c00017 	ldw	r3,0(r2)
 40064a8:	98c00015 	stw	r3,0(r19)
 40064ac:	14c00015 	stw	r19,0(r2)
 40064b0:	8827883a 	mov	r19,r17
 40064b4:	003fd606 	br	4006410 <__alt_mem_onchip_memory+0xfbffe410>
 40064b8:	8827883a 	mov	r19,r17
 40064bc:	003fd406 	br	4006410 <__alt_mem_onchip_memory+0xfbffe410>

040064c0 <__s2b>:
 40064c0:	defff904 	addi	sp,sp,-28
 40064c4:	dc400115 	stw	r17,4(sp)
 40064c8:	dc000015 	stw	r16,0(sp)
 40064cc:	2023883a 	mov	r17,r4
 40064d0:	2821883a 	mov	r16,r5
 40064d4:	39000204 	addi	r4,r7,8
 40064d8:	01400244 	movi	r5,9
 40064dc:	dcc00315 	stw	r19,12(sp)
 40064e0:	dc800215 	stw	r18,8(sp)
 40064e4:	dfc00615 	stw	ra,24(sp)
 40064e8:	dd400515 	stw	r21,20(sp)
 40064ec:	dd000415 	stw	r20,16(sp)
 40064f0:	3825883a 	mov	r18,r7
 40064f4:	3027883a 	mov	r19,r6
 40064f8:	400a7a80 	call	400a7a8 <__divsi3>
 40064fc:	00c00044 	movi	r3,1
 4006500:	000b883a 	mov	r5,zero
 4006504:	1880030e 	bge	r3,r2,4006514 <__s2b+0x54>
 4006508:	18c7883a 	add	r3,r3,r3
 400650c:	29400044 	addi	r5,r5,1
 4006510:	18bffd16 	blt	r3,r2,4006508 <__alt_mem_onchip_memory+0xfbffe508>
 4006514:	8809883a 	mov	r4,r17
 4006518:	40062a80 	call	40062a8 <_Balloc>
 400651c:	d8c00717 	ldw	r3,28(sp)
 4006520:	10c00515 	stw	r3,20(r2)
 4006524:	00c00044 	movi	r3,1
 4006528:	10c00415 	stw	r3,16(r2)
 400652c:	00c00244 	movi	r3,9
 4006530:	1cc0210e 	bge	r3,r19,40065b8 <__s2b+0xf8>
 4006534:	80eb883a 	add	r21,r16,r3
 4006538:	a829883a 	mov	r20,r21
 400653c:	84e1883a 	add	r16,r16,r19
 4006540:	a1c00007 	ldb	r7,0(r20)
 4006544:	01800284 	movi	r6,10
 4006548:	a5000044 	addi	r20,r20,1
 400654c:	100b883a 	mov	r5,r2
 4006550:	39fff404 	addi	r7,r7,-48
 4006554:	8809883a 	mov	r4,r17
 4006558:	40063780 	call	4006378 <__multadd>
 400655c:	a43ff81e 	bne	r20,r16,4006540 <__alt_mem_onchip_memory+0xfbffe540>
 4006560:	ace1883a 	add	r16,r21,r19
 4006564:	843ffe04 	addi	r16,r16,-8
 4006568:	9c800a0e 	bge	r19,r18,4006594 <__s2b+0xd4>
 400656c:	94e5c83a 	sub	r18,r18,r19
 4006570:	84a5883a 	add	r18,r16,r18
 4006574:	81c00007 	ldb	r7,0(r16)
 4006578:	01800284 	movi	r6,10
 400657c:	84000044 	addi	r16,r16,1
 4006580:	100b883a 	mov	r5,r2
 4006584:	39fff404 	addi	r7,r7,-48
 4006588:	8809883a 	mov	r4,r17
 400658c:	40063780 	call	4006378 <__multadd>
 4006590:	84bff81e 	bne	r16,r18,4006574 <__alt_mem_onchip_memory+0xfbffe574>
 4006594:	dfc00617 	ldw	ra,24(sp)
 4006598:	dd400517 	ldw	r21,20(sp)
 400659c:	dd000417 	ldw	r20,16(sp)
 40065a0:	dcc00317 	ldw	r19,12(sp)
 40065a4:	dc800217 	ldw	r18,8(sp)
 40065a8:	dc400117 	ldw	r17,4(sp)
 40065ac:	dc000017 	ldw	r16,0(sp)
 40065b0:	dec00704 	addi	sp,sp,28
 40065b4:	f800283a 	ret
 40065b8:	84000284 	addi	r16,r16,10
 40065bc:	1827883a 	mov	r19,r3
 40065c0:	003fe906 	br	4006568 <__alt_mem_onchip_memory+0xfbffe568>

040065c4 <__hi0bits>:
 40065c4:	20bfffec 	andhi	r2,r4,65535
 40065c8:	1000141e 	bne	r2,zero,400661c <__hi0bits+0x58>
 40065cc:	2008943a 	slli	r4,r4,16
 40065d0:	00800404 	movi	r2,16
 40065d4:	20ffc02c 	andhi	r3,r4,65280
 40065d8:	1800021e 	bne	r3,zero,40065e4 <__hi0bits+0x20>
 40065dc:	2008923a 	slli	r4,r4,8
 40065e0:	10800204 	addi	r2,r2,8
 40065e4:	20fc002c 	andhi	r3,r4,61440
 40065e8:	1800021e 	bne	r3,zero,40065f4 <__hi0bits+0x30>
 40065ec:	2008913a 	slli	r4,r4,4
 40065f0:	10800104 	addi	r2,r2,4
 40065f4:	20f0002c 	andhi	r3,r4,49152
 40065f8:	1800031e 	bne	r3,zero,4006608 <__hi0bits+0x44>
 40065fc:	2109883a 	add	r4,r4,r4
 4006600:	10800084 	addi	r2,r2,2
 4006604:	2109883a 	add	r4,r4,r4
 4006608:	20000316 	blt	r4,zero,4006618 <__hi0bits+0x54>
 400660c:	2110002c 	andhi	r4,r4,16384
 4006610:	2000041e 	bne	r4,zero,4006624 <__hi0bits+0x60>
 4006614:	00800804 	movi	r2,32
 4006618:	f800283a 	ret
 400661c:	0005883a 	mov	r2,zero
 4006620:	003fec06 	br	40065d4 <__alt_mem_onchip_memory+0xfbffe5d4>
 4006624:	10800044 	addi	r2,r2,1
 4006628:	f800283a 	ret

0400662c <__lo0bits>:
 400662c:	20c00017 	ldw	r3,0(r4)
 4006630:	188001cc 	andi	r2,r3,7
 4006634:	10000826 	beq	r2,zero,4006658 <__lo0bits+0x2c>
 4006638:	1880004c 	andi	r2,r3,1
 400663c:	1000211e 	bne	r2,zero,40066c4 <__lo0bits+0x98>
 4006640:	1880008c 	andi	r2,r3,2
 4006644:	1000211e 	bne	r2,zero,40066cc <__lo0bits+0xa0>
 4006648:	1806d0ba 	srli	r3,r3,2
 400664c:	00800084 	movi	r2,2
 4006650:	20c00015 	stw	r3,0(r4)
 4006654:	f800283a 	ret
 4006658:	18bfffcc 	andi	r2,r3,65535
 400665c:	10001326 	beq	r2,zero,40066ac <__lo0bits+0x80>
 4006660:	0005883a 	mov	r2,zero
 4006664:	19403fcc 	andi	r5,r3,255
 4006668:	2800021e 	bne	r5,zero,4006674 <__lo0bits+0x48>
 400666c:	1806d23a 	srli	r3,r3,8
 4006670:	10800204 	addi	r2,r2,8
 4006674:	194003cc 	andi	r5,r3,15
 4006678:	2800021e 	bne	r5,zero,4006684 <__lo0bits+0x58>
 400667c:	1806d13a 	srli	r3,r3,4
 4006680:	10800104 	addi	r2,r2,4
 4006684:	194000cc 	andi	r5,r3,3
 4006688:	2800021e 	bne	r5,zero,4006694 <__lo0bits+0x68>
 400668c:	1806d0ba 	srli	r3,r3,2
 4006690:	10800084 	addi	r2,r2,2
 4006694:	1940004c 	andi	r5,r3,1
 4006698:	2800081e 	bne	r5,zero,40066bc <__lo0bits+0x90>
 400669c:	1806d07a 	srli	r3,r3,1
 40066a0:	1800051e 	bne	r3,zero,40066b8 <__lo0bits+0x8c>
 40066a4:	00800804 	movi	r2,32
 40066a8:	f800283a 	ret
 40066ac:	1806d43a 	srli	r3,r3,16
 40066b0:	00800404 	movi	r2,16
 40066b4:	003feb06 	br	4006664 <__alt_mem_onchip_memory+0xfbffe664>
 40066b8:	10800044 	addi	r2,r2,1
 40066bc:	20c00015 	stw	r3,0(r4)
 40066c0:	f800283a 	ret
 40066c4:	0005883a 	mov	r2,zero
 40066c8:	f800283a 	ret
 40066cc:	1806d07a 	srli	r3,r3,1
 40066d0:	00800044 	movi	r2,1
 40066d4:	20c00015 	stw	r3,0(r4)
 40066d8:	f800283a 	ret

040066dc <__i2b>:
 40066dc:	defffd04 	addi	sp,sp,-12
 40066e0:	dc000015 	stw	r16,0(sp)
 40066e4:	04000044 	movi	r16,1
 40066e8:	dc400115 	stw	r17,4(sp)
 40066ec:	2823883a 	mov	r17,r5
 40066f0:	800b883a 	mov	r5,r16
 40066f4:	dfc00215 	stw	ra,8(sp)
 40066f8:	40062a80 	call	40062a8 <_Balloc>
 40066fc:	14400515 	stw	r17,20(r2)
 4006700:	14000415 	stw	r16,16(r2)
 4006704:	dfc00217 	ldw	ra,8(sp)
 4006708:	dc400117 	ldw	r17,4(sp)
 400670c:	dc000017 	ldw	r16,0(sp)
 4006710:	dec00304 	addi	sp,sp,12
 4006714:	f800283a 	ret

04006718 <__multiply>:
 4006718:	deffef04 	addi	sp,sp,-68
 400671c:	dc400815 	stw	r17,32(sp)
 4006720:	dc000715 	stw	r16,28(sp)
 4006724:	34400417 	ldw	r17,16(r6)
 4006728:	2c000417 	ldw	r16,16(r5)
 400672c:	dd800d15 	stw	r22,52(sp)
 4006730:	dc800915 	stw	r18,36(sp)
 4006734:	dfc01015 	stw	ra,64(sp)
 4006738:	df000f15 	stw	fp,60(sp)
 400673c:	ddc00e15 	stw	r23,56(sp)
 4006740:	dd400c15 	stw	r21,48(sp)
 4006744:	dd000b15 	stw	r20,44(sp)
 4006748:	dcc00a15 	stw	r19,40(sp)
 400674c:	2825883a 	mov	r18,r5
 4006750:	302d883a 	mov	r22,r6
 4006754:	8440050e 	bge	r16,r17,400676c <__multiply+0x54>
 4006758:	8007883a 	mov	r3,r16
 400675c:	3025883a 	mov	r18,r6
 4006760:	8821883a 	mov	r16,r17
 4006764:	282d883a 	mov	r22,r5
 4006768:	1823883a 	mov	r17,r3
 400676c:	90800217 	ldw	r2,8(r18)
 4006770:	8447883a 	add	r3,r16,r17
 4006774:	d8c00215 	stw	r3,8(sp)
 4006778:	91400117 	ldw	r5,4(r18)
 400677c:	10c0010e 	bge	r2,r3,4006784 <__multiply+0x6c>
 4006780:	29400044 	addi	r5,r5,1
 4006784:	40062a80 	call	40062a8 <_Balloc>
 4006788:	d8c00217 	ldw	r3,8(sp)
 400678c:	d8800615 	stw	r2,24(sp)
 4006790:	18eb883a 	add	r21,r3,r3
 4006794:	ad6b883a 	add	r21,r21,r21
 4006798:	10c00504 	addi	r3,r2,20
 400679c:	1d6b883a 	add	r21,r3,r21
 40067a0:	d8c00115 	stw	r3,4(sp)
 40067a4:	dd400315 	stw	r21,12(sp)
 40067a8:	1805883a 	mov	r2,r3
 40067ac:	1d40042e 	bgeu	r3,r21,40067c0 <__multiply+0xa8>
 40067b0:	d8c00317 	ldw	r3,12(sp)
 40067b4:	10000015 	stw	zero,0(r2)
 40067b8:	10800104 	addi	r2,r2,4
 40067bc:	10fffc36 	bltu	r2,r3,40067b0 <__alt_mem_onchip_memory+0xfbffe7b0>
 40067c0:	8c63883a 	add	r17,r17,r17
 40067c4:	b5800504 	addi	r22,r22,20
 40067c8:	8c63883a 	add	r17,r17,r17
 40067cc:	94800504 	addi	r18,r18,20
 40067d0:	8421883a 	add	r16,r16,r16
 40067d4:	b463883a 	add	r17,r22,r17
 40067d8:	8421883a 	add	r16,r16,r16
 40067dc:	dd800015 	stw	r22,0(sp)
 40067e0:	dc800415 	stw	r18,16(sp)
 40067e4:	dc400515 	stw	r17,20(sp)
 40067e8:	9429883a 	add	r20,r18,r16
 40067ec:	b4404f2e 	bgeu	r22,r17,400692c <__multiply+0x214>
 40067f0:	d8c00017 	ldw	r3,0(sp)
 40067f4:	1c800017 	ldw	r18,0(r3)
 40067f8:	947fffcc 	andi	r17,r18,65535
 40067fc:	88001e26 	beq	r17,zero,4006878 <__multiply+0x160>
 4006800:	dd800117 	ldw	r22,4(sp)
 4006804:	dd400417 	ldw	r21,16(sp)
 4006808:	0027883a 	mov	r19,zero
 400680c:	ac800017 	ldw	r18,0(r21)
 4006810:	b4000017 	ldw	r16,0(r22)
 4006814:	880b883a 	mov	r5,r17
 4006818:	913fffcc 	andi	r4,r18,65535
 400681c:	400a95c0 	call	400a95c <__mulsi3>
 4006820:	9008d43a 	srli	r4,r18,16
 4006824:	84bfffcc 	andi	r18,r16,65535
 4006828:	1485883a 	add	r2,r2,r18
 400682c:	14e5883a 	add	r18,r2,r19
 4006830:	8020d43a 	srli	r16,r16,16
 4006834:	9026d43a 	srli	r19,r18,16
 4006838:	880b883a 	mov	r5,r17
 400683c:	400a95c0 	call	400a95c <__mulsi3>
 4006840:	1405883a 	add	r2,r2,r16
 4006844:	14e1883a 	add	r16,r2,r19
 4006848:	90ffffcc 	andi	r3,r18,65535
 400684c:	8024943a 	slli	r18,r16,16
 4006850:	ad400104 	addi	r21,r21,4
 4006854:	b005883a 	mov	r2,r22
 4006858:	90c6b03a 	or	r3,r18,r3
 400685c:	b0c00015 	stw	r3,0(r22)
 4006860:	8026d43a 	srli	r19,r16,16
 4006864:	b5800104 	addi	r22,r22,4
 4006868:	ad3fe836 	bltu	r21,r20,400680c <__alt_mem_onchip_memory+0xfbffe80c>
 400686c:	d8c00017 	ldw	r3,0(sp)
 4006870:	14c00115 	stw	r19,4(r2)
 4006874:	1c800017 	ldw	r18,0(r3)
 4006878:	9024d43a 	srli	r18,r18,16
 400687c:	90002226 	beq	r18,zero,4006908 <__multiply+0x1f0>
 4006880:	d8c00117 	ldw	r3,4(sp)
 4006884:	dd800417 	ldw	r22,16(sp)
 4006888:	002f883a 	mov	r23,zero
 400688c:	1f000017 	ldw	fp,0(r3)
 4006890:	1823883a 	mov	r17,r3
 4006894:	182b883a 	mov	r21,r3
 4006898:	e021883a 	mov	r16,fp
 400689c:	00000106 	br	40068a4 <__multiply+0x18c>
 40068a0:	982b883a 	mov	r21,r19
 40068a4:	b100000b 	ldhu	r4,0(r22)
 40068a8:	8020d43a 	srli	r16,r16,16
 40068ac:	900b883a 	mov	r5,r18
 40068b0:	400a95c0 	call	400a95c <__mulsi3>
 40068b4:	1405883a 	add	r2,r2,r16
 40068b8:	15ef883a 	add	r23,r2,r23
 40068bc:	b804943a 	slli	r2,r23,16
 40068c0:	e0ffffcc 	andi	r3,fp,65535
 40068c4:	8c400104 	addi	r17,r17,4
 40068c8:	10c6b03a 	or	r3,r2,r3
 40068cc:	88ffff15 	stw	r3,-4(r17)
 40068d0:	b5800104 	addi	r22,r22,4
 40068d4:	b13fff17 	ldw	r4,-4(r22)
 40068d8:	acc00104 	addi	r19,r21,4
 40068dc:	900b883a 	mov	r5,r18
 40068e0:	2008d43a 	srli	r4,r4,16
 40068e4:	9c000017 	ldw	r16,0(r19)
 40068e8:	400a95c0 	call	400a95c <__mulsi3>
 40068ec:	b806d43a 	srli	r3,r23,16
 40068f0:	813fffcc 	andi	r4,r16,65535
 40068f4:	1105883a 	add	r2,r2,r4
 40068f8:	10f9883a 	add	fp,r2,r3
 40068fc:	e02ed43a 	srli	r23,fp,16
 4006900:	b53fe736 	bltu	r22,r20,40068a0 <__alt_mem_onchip_memory+0xfbffe8a0>
 4006904:	af000115 	stw	fp,4(r21)
 4006908:	d8c00017 	ldw	r3,0(sp)
 400690c:	d9000517 	ldw	r4,20(sp)
 4006910:	18c00104 	addi	r3,r3,4
 4006914:	d8c00015 	stw	r3,0(sp)
 4006918:	d8c00117 	ldw	r3,4(sp)
 400691c:	18c00104 	addi	r3,r3,4
 4006920:	d8c00115 	stw	r3,4(sp)
 4006924:	d8c00017 	ldw	r3,0(sp)
 4006928:	193fb136 	bltu	r3,r4,40067f0 <__alt_mem_onchip_memory+0xfbffe7f0>
 400692c:	d8c00217 	ldw	r3,8(sp)
 4006930:	00c00c0e 	bge	zero,r3,4006964 <__multiply+0x24c>
 4006934:	d8c00317 	ldw	r3,12(sp)
 4006938:	18bfff17 	ldw	r2,-4(r3)
 400693c:	1d7fff04 	addi	r21,r3,-4
 4006940:	10000326 	beq	r2,zero,4006950 <__multiply+0x238>
 4006944:	00000706 	br	4006964 <__multiply+0x24c>
 4006948:	a8800017 	ldw	r2,0(r21)
 400694c:	1000051e 	bne	r2,zero,4006964 <__multiply+0x24c>
 4006950:	d8c00217 	ldw	r3,8(sp)
 4006954:	ad7fff04 	addi	r21,r21,-4
 4006958:	18ffffc4 	addi	r3,r3,-1
 400695c:	d8c00215 	stw	r3,8(sp)
 4006960:	183ff91e 	bne	r3,zero,4006948 <__alt_mem_onchip_memory+0xfbffe948>
 4006964:	d8c00617 	ldw	r3,24(sp)
 4006968:	d9000217 	ldw	r4,8(sp)
 400696c:	1805883a 	mov	r2,r3
 4006970:	19000415 	stw	r4,16(r3)
 4006974:	dfc01017 	ldw	ra,64(sp)
 4006978:	df000f17 	ldw	fp,60(sp)
 400697c:	ddc00e17 	ldw	r23,56(sp)
 4006980:	dd800d17 	ldw	r22,52(sp)
 4006984:	dd400c17 	ldw	r21,48(sp)
 4006988:	dd000b17 	ldw	r20,44(sp)
 400698c:	dcc00a17 	ldw	r19,40(sp)
 4006990:	dc800917 	ldw	r18,36(sp)
 4006994:	dc400817 	ldw	r17,32(sp)
 4006998:	dc000717 	ldw	r16,28(sp)
 400699c:	dec01104 	addi	sp,sp,68
 40069a0:	f800283a 	ret

040069a4 <__pow5mult>:
 40069a4:	defffa04 	addi	sp,sp,-24
 40069a8:	dcc00315 	stw	r19,12(sp)
 40069ac:	dc000015 	stw	r16,0(sp)
 40069b0:	dfc00515 	stw	ra,20(sp)
 40069b4:	dd000415 	stw	r20,16(sp)
 40069b8:	dc800215 	stw	r18,8(sp)
 40069bc:	dc400115 	stw	r17,4(sp)
 40069c0:	308000cc 	andi	r2,r6,3
 40069c4:	3021883a 	mov	r16,r6
 40069c8:	2027883a 	mov	r19,r4
 40069cc:	10002f1e 	bne	r2,zero,4006a8c <__pow5mult+0xe8>
 40069d0:	2825883a 	mov	r18,r5
 40069d4:	8021d0ba 	srai	r16,r16,2
 40069d8:	80001a26 	beq	r16,zero,4006a44 <__pow5mult+0xa0>
 40069dc:	9c401217 	ldw	r17,72(r19)
 40069e0:	8800061e 	bne	r17,zero,40069fc <__pow5mult+0x58>
 40069e4:	00003406 	br	4006ab8 <__pow5mult+0x114>
 40069e8:	8021d07a 	srai	r16,r16,1
 40069ec:	80001526 	beq	r16,zero,4006a44 <__pow5mult+0xa0>
 40069f0:	88800017 	ldw	r2,0(r17)
 40069f4:	10001c26 	beq	r2,zero,4006a68 <__pow5mult+0xc4>
 40069f8:	1023883a 	mov	r17,r2
 40069fc:	8080004c 	andi	r2,r16,1
 4006a00:	103ff926 	beq	r2,zero,40069e8 <__alt_mem_onchip_memory+0xfbffe9e8>
 4006a04:	880d883a 	mov	r6,r17
 4006a08:	900b883a 	mov	r5,r18
 4006a0c:	9809883a 	mov	r4,r19
 4006a10:	40067180 	call	4006718 <__multiply>
 4006a14:	90001b26 	beq	r18,zero,4006a84 <__pow5mult+0xe0>
 4006a18:	91000117 	ldw	r4,4(r18)
 4006a1c:	98c01317 	ldw	r3,76(r19)
 4006a20:	8021d07a 	srai	r16,r16,1
 4006a24:	2109883a 	add	r4,r4,r4
 4006a28:	2109883a 	add	r4,r4,r4
 4006a2c:	1907883a 	add	r3,r3,r4
 4006a30:	19000017 	ldw	r4,0(r3)
 4006a34:	91000015 	stw	r4,0(r18)
 4006a38:	1c800015 	stw	r18,0(r3)
 4006a3c:	1025883a 	mov	r18,r2
 4006a40:	803feb1e 	bne	r16,zero,40069f0 <__alt_mem_onchip_memory+0xfbffe9f0>
 4006a44:	9005883a 	mov	r2,r18
 4006a48:	dfc00517 	ldw	ra,20(sp)
 4006a4c:	dd000417 	ldw	r20,16(sp)
 4006a50:	dcc00317 	ldw	r19,12(sp)
 4006a54:	dc800217 	ldw	r18,8(sp)
 4006a58:	dc400117 	ldw	r17,4(sp)
 4006a5c:	dc000017 	ldw	r16,0(sp)
 4006a60:	dec00604 	addi	sp,sp,24
 4006a64:	f800283a 	ret
 4006a68:	880d883a 	mov	r6,r17
 4006a6c:	880b883a 	mov	r5,r17
 4006a70:	9809883a 	mov	r4,r19
 4006a74:	40067180 	call	4006718 <__multiply>
 4006a78:	88800015 	stw	r2,0(r17)
 4006a7c:	10000015 	stw	zero,0(r2)
 4006a80:	003fdd06 	br	40069f8 <__alt_mem_onchip_memory+0xfbffe9f8>
 4006a84:	1025883a 	mov	r18,r2
 4006a88:	003fd706 	br	40069e8 <__alt_mem_onchip_memory+0xfbffe9e8>
 4006a8c:	10bfffc4 	addi	r2,r2,-1
 4006a90:	1085883a 	add	r2,r2,r2
 4006a94:	00c10074 	movhi	r3,1025
 4006a98:	18fe7104 	addi	r3,r3,-1596
 4006a9c:	1085883a 	add	r2,r2,r2
 4006aa0:	1885883a 	add	r2,r3,r2
 4006aa4:	11800017 	ldw	r6,0(r2)
 4006aa8:	000f883a 	mov	r7,zero
 4006aac:	40063780 	call	4006378 <__multadd>
 4006ab0:	1025883a 	mov	r18,r2
 4006ab4:	003fc706 	br	40069d4 <__alt_mem_onchip_memory+0xfbffe9d4>
 4006ab8:	05000044 	movi	r20,1
 4006abc:	a00b883a 	mov	r5,r20
 4006ac0:	9809883a 	mov	r4,r19
 4006ac4:	40062a80 	call	40062a8 <_Balloc>
 4006ac8:	1023883a 	mov	r17,r2
 4006acc:	00809c44 	movi	r2,625
 4006ad0:	88800515 	stw	r2,20(r17)
 4006ad4:	8d000415 	stw	r20,16(r17)
 4006ad8:	9c401215 	stw	r17,72(r19)
 4006adc:	88000015 	stw	zero,0(r17)
 4006ae0:	003fc606 	br	40069fc <__alt_mem_onchip_memory+0xfbffe9fc>

04006ae4 <__lshift>:
 4006ae4:	defff904 	addi	sp,sp,-28
 4006ae8:	dd400515 	stw	r21,20(sp)
 4006aec:	dcc00315 	stw	r19,12(sp)
 4006af0:	302bd17a 	srai	r21,r6,5
 4006af4:	2cc00417 	ldw	r19,16(r5)
 4006af8:	28800217 	ldw	r2,8(r5)
 4006afc:	dd000415 	stw	r20,16(sp)
 4006b00:	ace7883a 	add	r19,r21,r19
 4006b04:	dc800215 	stw	r18,8(sp)
 4006b08:	dc400115 	stw	r17,4(sp)
 4006b0c:	dc000015 	stw	r16,0(sp)
 4006b10:	dfc00615 	stw	ra,24(sp)
 4006b14:	9c000044 	addi	r16,r19,1
 4006b18:	2823883a 	mov	r17,r5
 4006b1c:	3029883a 	mov	r20,r6
 4006b20:	2025883a 	mov	r18,r4
 4006b24:	29400117 	ldw	r5,4(r5)
 4006b28:	1400030e 	bge	r2,r16,4006b38 <__lshift+0x54>
 4006b2c:	1085883a 	add	r2,r2,r2
 4006b30:	29400044 	addi	r5,r5,1
 4006b34:	143ffd16 	blt	r2,r16,4006b2c <__alt_mem_onchip_memory+0xfbffeb2c>
 4006b38:	9009883a 	mov	r4,r18
 4006b3c:	40062a80 	call	40062a8 <_Balloc>
 4006b40:	10c00504 	addi	r3,r2,20
 4006b44:	0540070e 	bge	zero,r21,4006b64 <__lshift+0x80>
 4006b48:	ad6b883a 	add	r21,r21,r21
 4006b4c:	ad6b883a 	add	r21,r21,r21
 4006b50:	1809883a 	mov	r4,r3
 4006b54:	1d47883a 	add	r3,r3,r21
 4006b58:	20000015 	stw	zero,0(r4)
 4006b5c:	21000104 	addi	r4,r4,4
 4006b60:	193ffd1e 	bne	r3,r4,4006b58 <__alt_mem_onchip_memory+0xfbffeb58>
 4006b64:	8a000417 	ldw	r8,16(r17)
 4006b68:	89000504 	addi	r4,r17,20
 4006b6c:	a18007cc 	andi	r6,r20,31
 4006b70:	4211883a 	add	r8,r8,r8
 4006b74:	4211883a 	add	r8,r8,r8
 4006b78:	2211883a 	add	r8,r4,r8
 4006b7c:	30002326 	beq	r6,zero,4006c0c <__lshift+0x128>
 4006b80:	02400804 	movi	r9,32
 4006b84:	4993c83a 	sub	r9,r9,r6
 4006b88:	000b883a 	mov	r5,zero
 4006b8c:	21c00017 	ldw	r7,0(r4)
 4006b90:	1815883a 	mov	r10,r3
 4006b94:	18c00104 	addi	r3,r3,4
 4006b98:	398e983a 	sll	r7,r7,r6
 4006b9c:	21000104 	addi	r4,r4,4
 4006ba0:	394ab03a 	or	r5,r7,r5
 4006ba4:	197fff15 	stw	r5,-4(r3)
 4006ba8:	217fff17 	ldw	r5,-4(r4)
 4006bac:	2a4ad83a 	srl	r5,r5,r9
 4006bb0:	223ff636 	bltu	r4,r8,4006b8c <__alt_mem_onchip_memory+0xfbffeb8c>
 4006bb4:	51400115 	stw	r5,4(r10)
 4006bb8:	28001a1e 	bne	r5,zero,4006c24 <__lshift+0x140>
 4006bbc:	843fffc4 	addi	r16,r16,-1
 4006bc0:	14000415 	stw	r16,16(r2)
 4006bc4:	88000826 	beq	r17,zero,4006be8 <__lshift+0x104>
 4006bc8:	89000117 	ldw	r4,4(r17)
 4006bcc:	90c01317 	ldw	r3,76(r18)
 4006bd0:	2109883a 	add	r4,r4,r4
 4006bd4:	2109883a 	add	r4,r4,r4
 4006bd8:	1907883a 	add	r3,r3,r4
 4006bdc:	19000017 	ldw	r4,0(r3)
 4006be0:	89000015 	stw	r4,0(r17)
 4006be4:	1c400015 	stw	r17,0(r3)
 4006be8:	dfc00617 	ldw	ra,24(sp)
 4006bec:	dd400517 	ldw	r21,20(sp)
 4006bf0:	dd000417 	ldw	r20,16(sp)
 4006bf4:	dcc00317 	ldw	r19,12(sp)
 4006bf8:	dc800217 	ldw	r18,8(sp)
 4006bfc:	dc400117 	ldw	r17,4(sp)
 4006c00:	dc000017 	ldw	r16,0(sp)
 4006c04:	dec00704 	addi	sp,sp,28
 4006c08:	f800283a 	ret
 4006c0c:	21400017 	ldw	r5,0(r4)
 4006c10:	18c00104 	addi	r3,r3,4
 4006c14:	21000104 	addi	r4,r4,4
 4006c18:	197fff15 	stw	r5,-4(r3)
 4006c1c:	223ffb36 	bltu	r4,r8,4006c0c <__alt_mem_onchip_memory+0xfbffec0c>
 4006c20:	003fe606 	br	4006bbc <__alt_mem_onchip_memory+0xfbffebbc>
 4006c24:	9c000084 	addi	r16,r19,2
 4006c28:	003fe406 	br	4006bbc <__alt_mem_onchip_memory+0xfbffebbc>

04006c2c <__mcmp>:
 4006c2c:	20800417 	ldw	r2,16(r4)
 4006c30:	28c00417 	ldw	r3,16(r5)
 4006c34:	10c5c83a 	sub	r2,r2,r3
 4006c38:	1000111e 	bne	r2,zero,4006c80 <__mcmp+0x54>
 4006c3c:	18c7883a 	add	r3,r3,r3
 4006c40:	18c7883a 	add	r3,r3,r3
 4006c44:	21000504 	addi	r4,r4,20
 4006c48:	29400504 	addi	r5,r5,20
 4006c4c:	20c5883a 	add	r2,r4,r3
 4006c50:	28cb883a 	add	r5,r5,r3
 4006c54:	00000106 	br	4006c5c <__mcmp+0x30>
 4006c58:	20800a2e 	bgeu	r4,r2,4006c84 <__mcmp+0x58>
 4006c5c:	10bfff04 	addi	r2,r2,-4
 4006c60:	297fff04 	addi	r5,r5,-4
 4006c64:	11800017 	ldw	r6,0(r2)
 4006c68:	28c00017 	ldw	r3,0(r5)
 4006c6c:	30fffa26 	beq	r6,r3,4006c58 <__alt_mem_onchip_memory+0xfbffec58>
 4006c70:	30c00236 	bltu	r6,r3,4006c7c <__mcmp+0x50>
 4006c74:	00800044 	movi	r2,1
 4006c78:	f800283a 	ret
 4006c7c:	00bfffc4 	movi	r2,-1
 4006c80:	f800283a 	ret
 4006c84:	0005883a 	mov	r2,zero
 4006c88:	f800283a 	ret

04006c8c <__mdiff>:
 4006c8c:	28c00417 	ldw	r3,16(r5)
 4006c90:	30800417 	ldw	r2,16(r6)
 4006c94:	defffa04 	addi	sp,sp,-24
 4006c98:	dcc00315 	stw	r19,12(sp)
 4006c9c:	dc800215 	stw	r18,8(sp)
 4006ca0:	dfc00515 	stw	ra,20(sp)
 4006ca4:	dd000415 	stw	r20,16(sp)
 4006ca8:	dc400115 	stw	r17,4(sp)
 4006cac:	dc000015 	stw	r16,0(sp)
 4006cb0:	1887c83a 	sub	r3,r3,r2
 4006cb4:	2825883a 	mov	r18,r5
 4006cb8:	3027883a 	mov	r19,r6
 4006cbc:	1800141e 	bne	r3,zero,4006d10 <__mdiff+0x84>
 4006cc0:	1085883a 	add	r2,r2,r2
 4006cc4:	1085883a 	add	r2,r2,r2
 4006cc8:	2a000504 	addi	r8,r5,20
 4006ccc:	34000504 	addi	r16,r6,20
 4006cd0:	4087883a 	add	r3,r8,r2
 4006cd4:	8085883a 	add	r2,r16,r2
 4006cd8:	00000106 	br	4006ce0 <__mdiff+0x54>
 4006cdc:	40c0592e 	bgeu	r8,r3,4006e44 <__mdiff+0x1b8>
 4006ce0:	18ffff04 	addi	r3,r3,-4
 4006ce4:	10bfff04 	addi	r2,r2,-4
 4006ce8:	19c00017 	ldw	r7,0(r3)
 4006cec:	11400017 	ldw	r5,0(r2)
 4006cf0:	397ffa26 	beq	r7,r5,4006cdc <__alt_mem_onchip_memory+0xfbffecdc>
 4006cf4:	3940592e 	bgeu	r7,r5,4006e5c <__mdiff+0x1d0>
 4006cf8:	9005883a 	mov	r2,r18
 4006cfc:	4023883a 	mov	r17,r8
 4006d00:	9825883a 	mov	r18,r19
 4006d04:	05000044 	movi	r20,1
 4006d08:	1027883a 	mov	r19,r2
 4006d0c:	00000406 	br	4006d20 <__mdiff+0x94>
 4006d10:	18005616 	blt	r3,zero,4006e6c <__mdiff+0x1e0>
 4006d14:	34400504 	addi	r17,r6,20
 4006d18:	2c000504 	addi	r16,r5,20
 4006d1c:	0029883a 	mov	r20,zero
 4006d20:	91400117 	ldw	r5,4(r18)
 4006d24:	40062a80 	call	40062a8 <_Balloc>
 4006d28:	92400417 	ldw	r9,16(r18)
 4006d2c:	9b000417 	ldw	r12,16(r19)
 4006d30:	12c00504 	addi	r11,r2,20
 4006d34:	4a51883a 	add	r8,r9,r9
 4006d38:	6319883a 	add	r12,r12,r12
 4006d3c:	4211883a 	add	r8,r8,r8
 4006d40:	6319883a 	add	r12,r12,r12
 4006d44:	15000315 	stw	r20,12(r2)
 4006d48:	8211883a 	add	r8,r16,r8
 4006d4c:	8b19883a 	add	r12,r17,r12
 4006d50:	0007883a 	mov	r3,zero
 4006d54:	81400017 	ldw	r5,0(r16)
 4006d58:	89c00017 	ldw	r7,0(r17)
 4006d5c:	59800104 	addi	r6,r11,4
 4006d60:	293fffcc 	andi	r4,r5,65535
 4006d64:	20c7883a 	add	r3,r4,r3
 4006d68:	393fffcc 	andi	r4,r7,65535
 4006d6c:	1909c83a 	sub	r4,r3,r4
 4006d70:	280ad43a 	srli	r5,r5,16
 4006d74:	380ed43a 	srli	r7,r7,16
 4006d78:	2007d43a 	srai	r3,r4,16
 4006d7c:	213fffcc 	andi	r4,r4,65535
 4006d80:	29cbc83a 	sub	r5,r5,r7
 4006d84:	28c7883a 	add	r3,r5,r3
 4006d88:	180a943a 	slli	r5,r3,16
 4006d8c:	8c400104 	addi	r17,r17,4
 4006d90:	84000104 	addi	r16,r16,4
 4006d94:	2908b03a 	or	r4,r5,r4
 4006d98:	59000015 	stw	r4,0(r11)
 4006d9c:	1807d43a 	srai	r3,r3,16
 4006da0:	3015883a 	mov	r10,r6
 4006da4:	3017883a 	mov	r11,r6
 4006da8:	8b3fea36 	bltu	r17,r12,4006d54 <__alt_mem_onchip_memory+0xfbffed54>
 4006dac:	8200162e 	bgeu	r16,r8,4006e08 <__mdiff+0x17c>
 4006db0:	8017883a 	mov	r11,r16
 4006db4:	59400017 	ldw	r5,0(r11)
 4006db8:	31800104 	addi	r6,r6,4
 4006dbc:	5ac00104 	addi	r11,r11,4
 4006dc0:	293fffcc 	andi	r4,r5,65535
 4006dc4:	20c7883a 	add	r3,r4,r3
 4006dc8:	280ed43a 	srli	r7,r5,16
 4006dcc:	180bd43a 	srai	r5,r3,16
 4006dd0:	193fffcc 	andi	r4,r3,65535
 4006dd4:	3947883a 	add	r3,r7,r5
 4006dd8:	180a943a 	slli	r5,r3,16
 4006ddc:	1807d43a 	srai	r3,r3,16
 4006de0:	2908b03a 	or	r4,r5,r4
 4006de4:	313fff15 	stw	r4,-4(r6)
 4006de8:	5a3ff236 	bltu	r11,r8,4006db4 <__alt_mem_onchip_memory+0xfbffedb4>
 4006dec:	0406303a 	nor	r3,zero,r16
 4006df0:	1a07883a 	add	r3,r3,r8
 4006df4:	1806d0ba 	srli	r3,r3,2
 4006df8:	18c00044 	addi	r3,r3,1
 4006dfc:	18c7883a 	add	r3,r3,r3
 4006e00:	18c7883a 	add	r3,r3,r3
 4006e04:	50d5883a 	add	r10,r10,r3
 4006e08:	50ffff04 	addi	r3,r10,-4
 4006e0c:	2000041e 	bne	r4,zero,4006e20 <__mdiff+0x194>
 4006e10:	18ffff04 	addi	r3,r3,-4
 4006e14:	19000017 	ldw	r4,0(r3)
 4006e18:	4a7fffc4 	addi	r9,r9,-1
 4006e1c:	203ffc26 	beq	r4,zero,4006e10 <__alt_mem_onchip_memory+0xfbffee10>
 4006e20:	12400415 	stw	r9,16(r2)
 4006e24:	dfc00517 	ldw	ra,20(sp)
 4006e28:	dd000417 	ldw	r20,16(sp)
 4006e2c:	dcc00317 	ldw	r19,12(sp)
 4006e30:	dc800217 	ldw	r18,8(sp)
 4006e34:	dc400117 	ldw	r17,4(sp)
 4006e38:	dc000017 	ldw	r16,0(sp)
 4006e3c:	dec00604 	addi	sp,sp,24
 4006e40:	f800283a 	ret
 4006e44:	000b883a 	mov	r5,zero
 4006e48:	40062a80 	call	40062a8 <_Balloc>
 4006e4c:	00c00044 	movi	r3,1
 4006e50:	10c00415 	stw	r3,16(r2)
 4006e54:	10000515 	stw	zero,20(r2)
 4006e58:	003ff206 	br	4006e24 <__alt_mem_onchip_memory+0xfbffee24>
 4006e5c:	8023883a 	mov	r17,r16
 4006e60:	0029883a 	mov	r20,zero
 4006e64:	4021883a 	mov	r16,r8
 4006e68:	003fad06 	br	4006d20 <__alt_mem_onchip_memory+0xfbffed20>
 4006e6c:	9005883a 	mov	r2,r18
 4006e70:	94400504 	addi	r17,r18,20
 4006e74:	9c000504 	addi	r16,r19,20
 4006e78:	9825883a 	mov	r18,r19
 4006e7c:	05000044 	movi	r20,1
 4006e80:	1027883a 	mov	r19,r2
 4006e84:	003fa606 	br	4006d20 <__alt_mem_onchip_memory+0xfbffed20>

04006e88 <__ulp>:
 4006e88:	295ffc2c 	andhi	r5,r5,32752
 4006e8c:	00bf3034 	movhi	r2,64704
 4006e90:	2887883a 	add	r3,r5,r2
 4006e94:	00c0020e 	bge	zero,r3,4006ea0 <__ulp+0x18>
 4006e98:	0005883a 	mov	r2,zero
 4006e9c:	f800283a 	ret
 4006ea0:	00c7c83a 	sub	r3,zero,r3
 4006ea4:	1807d53a 	srai	r3,r3,20
 4006ea8:	008004c4 	movi	r2,19
 4006eac:	10c00b0e 	bge	r2,r3,4006edc <__ulp+0x54>
 4006eb0:	18bffb04 	addi	r2,r3,-20
 4006eb4:	01000784 	movi	r4,30
 4006eb8:	0007883a 	mov	r3,zero
 4006ebc:	20800516 	blt	r4,r2,4006ed4 <__ulp+0x4c>
 4006ec0:	010007c4 	movi	r4,31
 4006ec4:	2089c83a 	sub	r4,r4,r2
 4006ec8:	00800044 	movi	r2,1
 4006ecc:	1104983a 	sll	r2,r2,r4
 4006ed0:	f800283a 	ret
 4006ed4:	00800044 	movi	r2,1
 4006ed8:	f800283a 	ret
 4006edc:	01400234 	movhi	r5,8
 4006ee0:	28c7d83a 	sra	r3,r5,r3
 4006ee4:	0005883a 	mov	r2,zero
 4006ee8:	f800283a 	ret

04006eec <__b2d>:
 4006eec:	defffa04 	addi	sp,sp,-24
 4006ef0:	dc000015 	stw	r16,0(sp)
 4006ef4:	24000417 	ldw	r16,16(r4)
 4006ef8:	dc400115 	stw	r17,4(sp)
 4006efc:	24400504 	addi	r17,r4,20
 4006f00:	8421883a 	add	r16,r16,r16
 4006f04:	8421883a 	add	r16,r16,r16
 4006f08:	8c21883a 	add	r16,r17,r16
 4006f0c:	dc800215 	stw	r18,8(sp)
 4006f10:	84bfff17 	ldw	r18,-4(r16)
 4006f14:	dd000415 	stw	r20,16(sp)
 4006f18:	dcc00315 	stw	r19,12(sp)
 4006f1c:	9009883a 	mov	r4,r18
 4006f20:	2829883a 	mov	r20,r5
 4006f24:	dfc00515 	stw	ra,20(sp)
 4006f28:	40065c40 	call	40065c4 <__hi0bits>
 4006f2c:	00c00804 	movi	r3,32
 4006f30:	1889c83a 	sub	r4,r3,r2
 4006f34:	a1000015 	stw	r4,0(r20)
 4006f38:	01000284 	movi	r4,10
 4006f3c:	84ffff04 	addi	r19,r16,-4
 4006f40:	20801216 	blt	r4,r2,4006f8c <__b2d+0xa0>
 4006f44:	018002c4 	movi	r6,11
 4006f48:	308dc83a 	sub	r6,r6,r2
 4006f4c:	9186d83a 	srl	r3,r18,r6
 4006f50:	18cffc34 	orhi	r3,r3,16368
 4006f54:	8cc0212e 	bgeu	r17,r19,4006fdc <__b2d+0xf0>
 4006f58:	813ffe17 	ldw	r4,-8(r16)
 4006f5c:	218cd83a 	srl	r6,r4,r6
 4006f60:	10800544 	addi	r2,r2,21
 4006f64:	9084983a 	sll	r2,r18,r2
 4006f68:	1184b03a 	or	r2,r2,r6
 4006f6c:	dfc00517 	ldw	ra,20(sp)
 4006f70:	dd000417 	ldw	r20,16(sp)
 4006f74:	dcc00317 	ldw	r19,12(sp)
 4006f78:	dc800217 	ldw	r18,8(sp)
 4006f7c:	dc400117 	ldw	r17,4(sp)
 4006f80:	dc000017 	ldw	r16,0(sp)
 4006f84:	dec00604 	addi	sp,sp,24
 4006f88:	f800283a 	ret
 4006f8c:	8cc00f2e 	bgeu	r17,r19,4006fcc <__b2d+0xe0>
 4006f90:	117ffd44 	addi	r5,r2,-11
 4006f94:	80bffe17 	ldw	r2,-8(r16)
 4006f98:	28000e26 	beq	r5,zero,4006fd4 <__b2d+0xe8>
 4006f9c:	1949c83a 	sub	r4,r3,r5
 4006fa0:	9164983a 	sll	r18,r18,r5
 4006fa4:	1106d83a 	srl	r3,r2,r4
 4006fa8:	81bffe04 	addi	r6,r16,-8
 4006fac:	948ffc34 	orhi	r18,r18,16368
 4006fb0:	90c6b03a 	or	r3,r18,r3
 4006fb4:	89800e2e 	bgeu	r17,r6,4006ff0 <__b2d+0x104>
 4006fb8:	81bffd17 	ldw	r6,-12(r16)
 4006fbc:	1144983a 	sll	r2,r2,r5
 4006fc0:	310ad83a 	srl	r5,r6,r4
 4006fc4:	2884b03a 	or	r2,r5,r2
 4006fc8:	003fe806 	br	4006f6c <__alt_mem_onchip_memory+0xfbffef6c>
 4006fcc:	10bffd44 	addi	r2,r2,-11
 4006fd0:	1000041e 	bne	r2,zero,4006fe4 <__b2d+0xf8>
 4006fd4:	90cffc34 	orhi	r3,r18,16368
 4006fd8:	003fe406 	br	4006f6c <__alt_mem_onchip_memory+0xfbffef6c>
 4006fdc:	000d883a 	mov	r6,zero
 4006fe0:	003fdf06 	br	4006f60 <__alt_mem_onchip_memory+0xfbffef60>
 4006fe4:	90a4983a 	sll	r18,r18,r2
 4006fe8:	0005883a 	mov	r2,zero
 4006fec:	003ff906 	br	4006fd4 <__alt_mem_onchip_memory+0xfbffefd4>
 4006ff0:	1144983a 	sll	r2,r2,r5
 4006ff4:	003fdd06 	br	4006f6c <__alt_mem_onchip_memory+0xfbffef6c>

04006ff8 <__d2b>:
 4006ff8:	defff804 	addi	sp,sp,-32
 4006ffc:	dc000215 	stw	r16,8(sp)
 4007000:	3021883a 	mov	r16,r6
 4007004:	dc400315 	stw	r17,12(sp)
 4007008:	8022907a 	slli	r17,r16,1
 400700c:	dd000615 	stw	r20,24(sp)
 4007010:	2829883a 	mov	r20,r5
 4007014:	01400044 	movi	r5,1
 4007018:	dcc00515 	stw	r19,20(sp)
 400701c:	dc800415 	stw	r18,16(sp)
 4007020:	dfc00715 	stw	ra,28(sp)
 4007024:	3825883a 	mov	r18,r7
 4007028:	8822d57a 	srli	r17,r17,21
 400702c:	40062a80 	call	40062a8 <_Balloc>
 4007030:	1027883a 	mov	r19,r2
 4007034:	00800434 	movhi	r2,16
 4007038:	10bfffc4 	addi	r2,r2,-1
 400703c:	808c703a 	and	r6,r16,r2
 4007040:	88000126 	beq	r17,zero,4007048 <__d2b+0x50>
 4007044:	31800434 	orhi	r6,r6,16
 4007048:	d9800015 	stw	r6,0(sp)
 400704c:	a0002426 	beq	r20,zero,40070e0 <__d2b+0xe8>
 4007050:	d9000104 	addi	r4,sp,4
 4007054:	dd000115 	stw	r20,4(sp)
 4007058:	400662c0 	call	400662c <__lo0bits>
 400705c:	d8c00017 	ldw	r3,0(sp)
 4007060:	10002f1e 	bne	r2,zero,4007120 <__d2b+0x128>
 4007064:	d9000117 	ldw	r4,4(sp)
 4007068:	99000515 	stw	r4,20(r19)
 400706c:	1821003a 	cmpeq	r16,r3,zero
 4007070:	01000084 	movi	r4,2
 4007074:	2421c83a 	sub	r16,r4,r16
 4007078:	98c00615 	stw	r3,24(r19)
 400707c:	9c000415 	stw	r16,16(r19)
 4007080:	88001f1e 	bne	r17,zero,4007100 <__d2b+0x108>
 4007084:	10bef384 	addi	r2,r2,-1074
 4007088:	90800015 	stw	r2,0(r18)
 400708c:	00900034 	movhi	r2,16384
 4007090:	10bfffc4 	addi	r2,r2,-1
 4007094:	8085883a 	add	r2,r16,r2
 4007098:	1085883a 	add	r2,r2,r2
 400709c:	1085883a 	add	r2,r2,r2
 40070a0:	9885883a 	add	r2,r19,r2
 40070a4:	11000517 	ldw	r4,20(r2)
 40070a8:	8020917a 	slli	r16,r16,5
 40070ac:	40065c40 	call	40065c4 <__hi0bits>
 40070b0:	d8c00817 	ldw	r3,32(sp)
 40070b4:	8085c83a 	sub	r2,r16,r2
 40070b8:	18800015 	stw	r2,0(r3)
 40070bc:	9805883a 	mov	r2,r19
 40070c0:	dfc00717 	ldw	ra,28(sp)
 40070c4:	dd000617 	ldw	r20,24(sp)
 40070c8:	dcc00517 	ldw	r19,20(sp)
 40070cc:	dc800417 	ldw	r18,16(sp)
 40070d0:	dc400317 	ldw	r17,12(sp)
 40070d4:	dc000217 	ldw	r16,8(sp)
 40070d8:	dec00804 	addi	sp,sp,32
 40070dc:	f800283a 	ret
 40070e0:	d809883a 	mov	r4,sp
 40070e4:	400662c0 	call	400662c <__lo0bits>
 40070e8:	d8c00017 	ldw	r3,0(sp)
 40070ec:	04000044 	movi	r16,1
 40070f0:	9c000415 	stw	r16,16(r19)
 40070f4:	98c00515 	stw	r3,20(r19)
 40070f8:	10800804 	addi	r2,r2,32
 40070fc:	883fe126 	beq	r17,zero,4007084 <__alt_mem_onchip_memory+0xfbfff084>
 4007100:	00c00d44 	movi	r3,53
 4007104:	8c7ef344 	addi	r17,r17,-1075
 4007108:	88a3883a 	add	r17,r17,r2
 400710c:	1885c83a 	sub	r2,r3,r2
 4007110:	d8c00817 	ldw	r3,32(sp)
 4007114:	94400015 	stw	r17,0(r18)
 4007118:	18800015 	stw	r2,0(r3)
 400711c:	003fe706 	br	40070bc <__alt_mem_onchip_memory+0xfbfff0bc>
 4007120:	01000804 	movi	r4,32
 4007124:	2089c83a 	sub	r4,r4,r2
 4007128:	1908983a 	sll	r4,r3,r4
 400712c:	d9400117 	ldw	r5,4(sp)
 4007130:	1886d83a 	srl	r3,r3,r2
 4007134:	2148b03a 	or	r4,r4,r5
 4007138:	99000515 	stw	r4,20(r19)
 400713c:	d8c00015 	stw	r3,0(sp)
 4007140:	003fca06 	br	400706c <__alt_mem_onchip_memory+0xfbfff06c>

04007144 <__ratio>:
 4007144:	defff904 	addi	sp,sp,-28
 4007148:	dc400315 	stw	r17,12(sp)
 400714c:	2823883a 	mov	r17,r5
 4007150:	d9400104 	addi	r5,sp,4
 4007154:	dfc00615 	stw	ra,24(sp)
 4007158:	dcc00515 	stw	r19,20(sp)
 400715c:	dc800415 	stw	r18,16(sp)
 4007160:	2027883a 	mov	r19,r4
 4007164:	dc000215 	stw	r16,8(sp)
 4007168:	4006eec0 	call	4006eec <__b2d>
 400716c:	d80b883a 	mov	r5,sp
 4007170:	8809883a 	mov	r4,r17
 4007174:	1025883a 	mov	r18,r2
 4007178:	1821883a 	mov	r16,r3
 400717c:	4006eec0 	call	4006eec <__b2d>
 4007180:	8a000417 	ldw	r8,16(r17)
 4007184:	99000417 	ldw	r4,16(r19)
 4007188:	d9400117 	ldw	r5,4(sp)
 400718c:	2209c83a 	sub	r4,r4,r8
 4007190:	2010917a 	slli	r8,r4,5
 4007194:	d9000017 	ldw	r4,0(sp)
 4007198:	2909c83a 	sub	r4,r5,r4
 400719c:	4109883a 	add	r4,r8,r4
 40071a0:	01000e0e 	bge	zero,r4,40071dc <__ratio+0x98>
 40071a4:	2008953a 	slli	r4,r4,20
 40071a8:	2421883a 	add	r16,r4,r16
 40071ac:	100d883a 	mov	r6,r2
 40071b0:	180f883a 	mov	r7,r3
 40071b4:	9009883a 	mov	r4,r18
 40071b8:	800b883a 	mov	r5,r16
 40071bc:	400b2300 	call	400b230 <__divdf3>
 40071c0:	dfc00617 	ldw	ra,24(sp)
 40071c4:	dcc00517 	ldw	r19,20(sp)
 40071c8:	dc800417 	ldw	r18,16(sp)
 40071cc:	dc400317 	ldw	r17,12(sp)
 40071d0:	dc000217 	ldw	r16,8(sp)
 40071d4:	dec00704 	addi	sp,sp,28
 40071d8:	f800283a 	ret
 40071dc:	2008953a 	slli	r4,r4,20
 40071e0:	1907c83a 	sub	r3,r3,r4
 40071e4:	003ff106 	br	40071ac <__alt_mem_onchip_memory+0xfbfff1ac>

040071e8 <_mprec_log10>:
 40071e8:	defffe04 	addi	sp,sp,-8
 40071ec:	dc000015 	stw	r16,0(sp)
 40071f0:	dfc00115 	stw	ra,4(sp)
 40071f4:	008005c4 	movi	r2,23
 40071f8:	2021883a 	mov	r16,r4
 40071fc:	11000d0e 	bge	r2,r4,4007234 <_mprec_log10+0x4c>
 4007200:	0005883a 	mov	r2,zero
 4007204:	00cffc34 	movhi	r3,16368
 4007208:	843fffc4 	addi	r16,r16,-1
 400720c:	000d883a 	mov	r6,zero
 4007210:	01d00934 	movhi	r7,16420
 4007214:	1009883a 	mov	r4,r2
 4007218:	180b883a 	mov	r5,r3
 400721c:	400be580 	call	400be58 <__muldf3>
 4007220:	803ff91e 	bne	r16,zero,4007208 <__alt_mem_onchip_memory+0xfbfff208>
 4007224:	dfc00117 	ldw	ra,4(sp)
 4007228:	dc000017 	ldw	r16,0(sp)
 400722c:	dec00204 	addi	sp,sp,8
 4007230:	f800283a 	ret
 4007234:	202090fa 	slli	r16,r4,3
 4007238:	00810074 	movhi	r2,1025
 400723c:	10be8804 	addi	r2,r2,-1504
 4007240:	1421883a 	add	r16,r2,r16
 4007244:	80800017 	ldw	r2,0(r16)
 4007248:	80c00117 	ldw	r3,4(r16)
 400724c:	dfc00117 	ldw	ra,4(sp)
 4007250:	dc000017 	ldw	r16,0(sp)
 4007254:	dec00204 	addi	sp,sp,8
 4007258:	f800283a 	ret

0400725c <__copybits>:
 400725c:	297fffc4 	addi	r5,r5,-1
 4007260:	280fd17a 	srai	r7,r5,5
 4007264:	30c00417 	ldw	r3,16(r6)
 4007268:	30800504 	addi	r2,r6,20
 400726c:	39c00044 	addi	r7,r7,1
 4007270:	18c7883a 	add	r3,r3,r3
 4007274:	39cf883a 	add	r7,r7,r7
 4007278:	18c7883a 	add	r3,r3,r3
 400727c:	39cf883a 	add	r7,r7,r7
 4007280:	10c7883a 	add	r3,r2,r3
 4007284:	21cf883a 	add	r7,r4,r7
 4007288:	10c00d2e 	bgeu	r2,r3,40072c0 <__copybits+0x64>
 400728c:	200b883a 	mov	r5,r4
 4007290:	12000017 	ldw	r8,0(r2)
 4007294:	29400104 	addi	r5,r5,4
 4007298:	10800104 	addi	r2,r2,4
 400729c:	2a3fff15 	stw	r8,-4(r5)
 40072a0:	10fffb36 	bltu	r2,r3,4007290 <__alt_mem_onchip_memory+0xfbfff290>
 40072a4:	1985c83a 	sub	r2,r3,r6
 40072a8:	10bffac4 	addi	r2,r2,-21
 40072ac:	1004d0ba 	srli	r2,r2,2
 40072b0:	10800044 	addi	r2,r2,1
 40072b4:	1085883a 	add	r2,r2,r2
 40072b8:	1085883a 	add	r2,r2,r2
 40072bc:	2089883a 	add	r4,r4,r2
 40072c0:	21c0032e 	bgeu	r4,r7,40072d0 <__copybits+0x74>
 40072c4:	20000015 	stw	zero,0(r4)
 40072c8:	21000104 	addi	r4,r4,4
 40072cc:	21fffd36 	bltu	r4,r7,40072c4 <__alt_mem_onchip_memory+0xfbfff2c4>
 40072d0:	f800283a 	ret

040072d4 <__any_on>:
 40072d4:	20c00417 	ldw	r3,16(r4)
 40072d8:	2805d17a 	srai	r2,r5,5
 40072dc:	21000504 	addi	r4,r4,20
 40072e0:	18800d0e 	bge	r3,r2,4007318 <__any_on+0x44>
 40072e4:	18c7883a 	add	r3,r3,r3
 40072e8:	18c7883a 	add	r3,r3,r3
 40072ec:	20c7883a 	add	r3,r4,r3
 40072f0:	20c0192e 	bgeu	r4,r3,4007358 <__any_on+0x84>
 40072f4:	18bfff17 	ldw	r2,-4(r3)
 40072f8:	18ffff04 	addi	r3,r3,-4
 40072fc:	1000041e 	bne	r2,zero,4007310 <__any_on+0x3c>
 4007300:	20c0142e 	bgeu	r4,r3,4007354 <__any_on+0x80>
 4007304:	18ffff04 	addi	r3,r3,-4
 4007308:	19400017 	ldw	r5,0(r3)
 400730c:	283ffc26 	beq	r5,zero,4007300 <__alt_mem_onchip_memory+0xfbfff300>
 4007310:	00800044 	movi	r2,1
 4007314:	f800283a 	ret
 4007318:	10c00a0e 	bge	r2,r3,4007344 <__any_on+0x70>
 400731c:	1085883a 	add	r2,r2,r2
 4007320:	1085883a 	add	r2,r2,r2
 4007324:	294007cc 	andi	r5,r5,31
 4007328:	2087883a 	add	r3,r4,r2
 400732c:	283ff026 	beq	r5,zero,40072f0 <__alt_mem_onchip_memory+0xfbfff2f0>
 4007330:	19800017 	ldw	r6,0(r3)
 4007334:	3144d83a 	srl	r2,r6,r5
 4007338:	114a983a 	sll	r5,r2,r5
 400733c:	317ff41e 	bne	r6,r5,4007310 <__alt_mem_onchip_memory+0xfbfff310>
 4007340:	003feb06 	br	40072f0 <__alt_mem_onchip_memory+0xfbfff2f0>
 4007344:	1085883a 	add	r2,r2,r2
 4007348:	1085883a 	add	r2,r2,r2
 400734c:	2087883a 	add	r3,r4,r2
 4007350:	003fe706 	br	40072f0 <__alt_mem_onchip_memory+0xfbfff2f0>
 4007354:	f800283a 	ret
 4007358:	0005883a 	mov	r2,zero
 400735c:	f800283a 	ret

04007360 <_realloc_r>:
 4007360:	defff604 	addi	sp,sp,-40
 4007364:	dc800215 	stw	r18,8(sp)
 4007368:	dfc00915 	stw	ra,36(sp)
 400736c:	df000815 	stw	fp,32(sp)
 4007370:	ddc00715 	stw	r23,28(sp)
 4007374:	dd800615 	stw	r22,24(sp)
 4007378:	dd400515 	stw	r21,20(sp)
 400737c:	dd000415 	stw	r20,16(sp)
 4007380:	dcc00315 	stw	r19,12(sp)
 4007384:	dc400115 	stw	r17,4(sp)
 4007388:	dc000015 	stw	r16,0(sp)
 400738c:	3025883a 	mov	r18,r6
 4007390:	2800b726 	beq	r5,zero,4007670 <_realloc_r+0x310>
 4007394:	282b883a 	mov	r21,r5
 4007398:	2029883a 	mov	r20,r4
 400739c:	400d7c40 	call	400d7c4 <__malloc_lock>
 40073a0:	a8bfff17 	ldw	r2,-4(r21)
 40073a4:	043fff04 	movi	r16,-4
 40073a8:	90c002c4 	addi	r3,r18,11
 40073ac:	01000584 	movi	r4,22
 40073b0:	acfffe04 	addi	r19,r21,-8
 40073b4:	1420703a 	and	r16,r2,r16
 40073b8:	20c0332e 	bgeu	r4,r3,4007488 <_realloc_r+0x128>
 40073bc:	047ffe04 	movi	r17,-8
 40073c0:	1c62703a 	and	r17,r3,r17
 40073c4:	8807883a 	mov	r3,r17
 40073c8:	88005816 	blt	r17,zero,400752c <_realloc_r+0x1cc>
 40073cc:	8c805736 	bltu	r17,r18,400752c <_realloc_r+0x1cc>
 40073d0:	80c0300e 	bge	r16,r3,4007494 <_realloc_r+0x134>
 40073d4:	07010074 	movhi	fp,1025
 40073d8:	e7003404 	addi	fp,fp,208
 40073dc:	e1c00217 	ldw	r7,8(fp)
 40073e0:	9c09883a 	add	r4,r19,r16
 40073e4:	22000117 	ldw	r8,4(r4)
 40073e8:	21c06326 	beq	r4,r7,4007578 <_realloc_r+0x218>
 40073ec:	017fff84 	movi	r5,-2
 40073f0:	414a703a 	and	r5,r8,r5
 40073f4:	214b883a 	add	r5,r4,r5
 40073f8:	29800117 	ldw	r6,4(r5)
 40073fc:	3180004c 	andi	r6,r6,1
 4007400:	30003f26 	beq	r6,zero,4007500 <_realloc_r+0x1a0>
 4007404:	1080004c 	andi	r2,r2,1
 4007408:	10008326 	beq	r2,zero,4007618 <_realloc_r+0x2b8>
 400740c:	900b883a 	mov	r5,r18
 4007410:	a009883a 	mov	r4,r20
 4007414:	40055ec0 	call	40055ec <_malloc_r>
 4007418:	1025883a 	mov	r18,r2
 400741c:	10011e26 	beq	r2,zero,4007898 <_realloc_r+0x538>
 4007420:	a93fff17 	ldw	r4,-4(r21)
 4007424:	10fffe04 	addi	r3,r2,-8
 4007428:	00bfff84 	movi	r2,-2
 400742c:	2084703a 	and	r2,r4,r2
 4007430:	9885883a 	add	r2,r19,r2
 4007434:	1880ee26 	beq	r3,r2,40077f0 <_realloc_r+0x490>
 4007438:	81bfff04 	addi	r6,r16,-4
 400743c:	00800904 	movi	r2,36
 4007440:	1180b836 	bltu	r2,r6,4007724 <_realloc_r+0x3c4>
 4007444:	00c004c4 	movi	r3,19
 4007448:	19809636 	bltu	r3,r6,40076a4 <_realloc_r+0x344>
 400744c:	9005883a 	mov	r2,r18
 4007450:	a807883a 	mov	r3,r21
 4007454:	19000017 	ldw	r4,0(r3)
 4007458:	11000015 	stw	r4,0(r2)
 400745c:	19000117 	ldw	r4,4(r3)
 4007460:	11000115 	stw	r4,4(r2)
 4007464:	18c00217 	ldw	r3,8(r3)
 4007468:	10c00215 	stw	r3,8(r2)
 400746c:	a80b883a 	mov	r5,r21
 4007470:	a009883a 	mov	r4,r20
 4007474:	40049f40 	call	40049f4 <_free_r>
 4007478:	a009883a 	mov	r4,r20
 400747c:	400d7e80 	call	400d7e8 <__malloc_unlock>
 4007480:	9005883a 	mov	r2,r18
 4007484:	00001206 	br	40074d0 <_realloc_r+0x170>
 4007488:	00c00404 	movi	r3,16
 400748c:	1823883a 	mov	r17,r3
 4007490:	003fce06 	br	40073cc <__alt_mem_onchip_memory+0xfbfff3cc>
 4007494:	a825883a 	mov	r18,r21
 4007498:	8445c83a 	sub	r2,r16,r17
 400749c:	00c003c4 	movi	r3,15
 40074a0:	18802636 	bltu	r3,r2,400753c <_realloc_r+0x1dc>
 40074a4:	99800117 	ldw	r6,4(r19)
 40074a8:	9c07883a 	add	r3,r19,r16
 40074ac:	3180004c 	andi	r6,r6,1
 40074b0:	3420b03a 	or	r16,r6,r16
 40074b4:	9c000115 	stw	r16,4(r19)
 40074b8:	18800117 	ldw	r2,4(r3)
 40074bc:	10800054 	ori	r2,r2,1
 40074c0:	18800115 	stw	r2,4(r3)
 40074c4:	a009883a 	mov	r4,r20
 40074c8:	400d7e80 	call	400d7e8 <__malloc_unlock>
 40074cc:	9005883a 	mov	r2,r18
 40074d0:	dfc00917 	ldw	ra,36(sp)
 40074d4:	df000817 	ldw	fp,32(sp)
 40074d8:	ddc00717 	ldw	r23,28(sp)
 40074dc:	dd800617 	ldw	r22,24(sp)
 40074e0:	dd400517 	ldw	r21,20(sp)
 40074e4:	dd000417 	ldw	r20,16(sp)
 40074e8:	dcc00317 	ldw	r19,12(sp)
 40074ec:	dc800217 	ldw	r18,8(sp)
 40074f0:	dc400117 	ldw	r17,4(sp)
 40074f4:	dc000017 	ldw	r16,0(sp)
 40074f8:	dec00a04 	addi	sp,sp,40
 40074fc:	f800283a 	ret
 4007500:	017fff04 	movi	r5,-4
 4007504:	414a703a 	and	r5,r8,r5
 4007508:	814d883a 	add	r6,r16,r5
 400750c:	30c01f16 	blt	r6,r3,400758c <_realloc_r+0x22c>
 4007510:	20800317 	ldw	r2,12(r4)
 4007514:	20c00217 	ldw	r3,8(r4)
 4007518:	a825883a 	mov	r18,r21
 400751c:	3021883a 	mov	r16,r6
 4007520:	18800315 	stw	r2,12(r3)
 4007524:	10c00215 	stw	r3,8(r2)
 4007528:	003fdb06 	br	4007498 <__alt_mem_onchip_memory+0xfbfff498>
 400752c:	00800304 	movi	r2,12
 4007530:	a0800015 	stw	r2,0(r20)
 4007534:	0005883a 	mov	r2,zero
 4007538:	003fe506 	br	40074d0 <__alt_mem_onchip_memory+0xfbfff4d0>
 400753c:	98c00117 	ldw	r3,4(r19)
 4007540:	9c4b883a 	add	r5,r19,r17
 4007544:	11000054 	ori	r4,r2,1
 4007548:	18c0004c 	andi	r3,r3,1
 400754c:	1c62b03a 	or	r17,r3,r17
 4007550:	9c400115 	stw	r17,4(r19)
 4007554:	29000115 	stw	r4,4(r5)
 4007558:	2885883a 	add	r2,r5,r2
 400755c:	10c00117 	ldw	r3,4(r2)
 4007560:	29400204 	addi	r5,r5,8
 4007564:	a009883a 	mov	r4,r20
 4007568:	18c00054 	ori	r3,r3,1
 400756c:	10c00115 	stw	r3,4(r2)
 4007570:	40049f40 	call	40049f4 <_free_r>
 4007574:	003fd306 	br	40074c4 <__alt_mem_onchip_memory+0xfbfff4c4>
 4007578:	017fff04 	movi	r5,-4
 400757c:	414a703a 	and	r5,r8,r5
 4007580:	89800404 	addi	r6,r17,16
 4007584:	8151883a 	add	r8,r16,r5
 4007588:	4180590e 	bge	r8,r6,40076f0 <_realloc_r+0x390>
 400758c:	1080004c 	andi	r2,r2,1
 4007590:	103f9e1e 	bne	r2,zero,400740c <__alt_mem_onchip_memory+0xfbfff40c>
 4007594:	adbffe17 	ldw	r22,-8(r21)
 4007598:	00bfff04 	movi	r2,-4
 400759c:	9dadc83a 	sub	r22,r19,r22
 40075a0:	b1800117 	ldw	r6,4(r22)
 40075a4:	3084703a 	and	r2,r6,r2
 40075a8:	20002026 	beq	r4,zero,400762c <_realloc_r+0x2cc>
 40075ac:	80af883a 	add	r23,r16,r2
 40075b0:	b96f883a 	add	r23,r23,r5
 40075b4:	21c05f26 	beq	r4,r7,4007734 <_realloc_r+0x3d4>
 40075b8:	b8c01c16 	blt	r23,r3,400762c <_realloc_r+0x2cc>
 40075bc:	20800317 	ldw	r2,12(r4)
 40075c0:	20c00217 	ldw	r3,8(r4)
 40075c4:	81bfff04 	addi	r6,r16,-4
 40075c8:	01000904 	movi	r4,36
 40075cc:	18800315 	stw	r2,12(r3)
 40075d0:	10c00215 	stw	r3,8(r2)
 40075d4:	b0c00217 	ldw	r3,8(r22)
 40075d8:	b0800317 	ldw	r2,12(r22)
 40075dc:	b4800204 	addi	r18,r22,8
 40075e0:	18800315 	stw	r2,12(r3)
 40075e4:	10c00215 	stw	r3,8(r2)
 40075e8:	21801b36 	bltu	r4,r6,4007658 <_realloc_r+0x2f8>
 40075ec:	008004c4 	movi	r2,19
 40075f0:	1180352e 	bgeu	r2,r6,40076c8 <_realloc_r+0x368>
 40075f4:	a8800017 	ldw	r2,0(r21)
 40075f8:	b0800215 	stw	r2,8(r22)
 40075fc:	a8800117 	ldw	r2,4(r21)
 4007600:	b0800315 	stw	r2,12(r22)
 4007604:	008006c4 	movi	r2,27
 4007608:	11807f36 	bltu	r2,r6,4007808 <_realloc_r+0x4a8>
 400760c:	b0800404 	addi	r2,r22,16
 4007610:	ad400204 	addi	r21,r21,8
 4007614:	00002d06 	br	40076cc <_realloc_r+0x36c>
 4007618:	adbffe17 	ldw	r22,-8(r21)
 400761c:	00bfff04 	movi	r2,-4
 4007620:	9dadc83a 	sub	r22,r19,r22
 4007624:	b1000117 	ldw	r4,4(r22)
 4007628:	2084703a 	and	r2,r4,r2
 400762c:	b03f7726 	beq	r22,zero,400740c <__alt_mem_onchip_memory+0xfbfff40c>
 4007630:	80af883a 	add	r23,r16,r2
 4007634:	b8ff7516 	blt	r23,r3,400740c <__alt_mem_onchip_memory+0xfbfff40c>
 4007638:	b0800317 	ldw	r2,12(r22)
 400763c:	b0c00217 	ldw	r3,8(r22)
 4007640:	81bfff04 	addi	r6,r16,-4
 4007644:	01000904 	movi	r4,36
 4007648:	18800315 	stw	r2,12(r3)
 400764c:	10c00215 	stw	r3,8(r2)
 4007650:	b4800204 	addi	r18,r22,8
 4007654:	21bfe52e 	bgeu	r4,r6,40075ec <__alt_mem_onchip_memory+0xfbfff5ec>
 4007658:	a80b883a 	mov	r5,r21
 400765c:	9009883a 	mov	r4,r18
 4007660:	40060240 	call	4006024 <memmove>
 4007664:	b821883a 	mov	r16,r23
 4007668:	b027883a 	mov	r19,r22
 400766c:	003f8a06 	br	4007498 <__alt_mem_onchip_memory+0xfbfff498>
 4007670:	300b883a 	mov	r5,r6
 4007674:	dfc00917 	ldw	ra,36(sp)
 4007678:	df000817 	ldw	fp,32(sp)
 400767c:	ddc00717 	ldw	r23,28(sp)
 4007680:	dd800617 	ldw	r22,24(sp)
 4007684:	dd400517 	ldw	r21,20(sp)
 4007688:	dd000417 	ldw	r20,16(sp)
 400768c:	dcc00317 	ldw	r19,12(sp)
 4007690:	dc800217 	ldw	r18,8(sp)
 4007694:	dc400117 	ldw	r17,4(sp)
 4007698:	dc000017 	ldw	r16,0(sp)
 400769c:	dec00a04 	addi	sp,sp,40
 40076a0:	40055ec1 	jmpi	40055ec <_malloc_r>
 40076a4:	a8c00017 	ldw	r3,0(r21)
 40076a8:	90c00015 	stw	r3,0(r18)
 40076ac:	a8c00117 	ldw	r3,4(r21)
 40076b0:	90c00115 	stw	r3,4(r18)
 40076b4:	00c006c4 	movi	r3,27
 40076b8:	19804536 	bltu	r3,r6,40077d0 <_realloc_r+0x470>
 40076bc:	90800204 	addi	r2,r18,8
 40076c0:	a8c00204 	addi	r3,r21,8
 40076c4:	003f6306 	br	4007454 <__alt_mem_onchip_memory+0xfbfff454>
 40076c8:	9005883a 	mov	r2,r18
 40076cc:	a8c00017 	ldw	r3,0(r21)
 40076d0:	b821883a 	mov	r16,r23
 40076d4:	b027883a 	mov	r19,r22
 40076d8:	10c00015 	stw	r3,0(r2)
 40076dc:	a8c00117 	ldw	r3,4(r21)
 40076e0:	10c00115 	stw	r3,4(r2)
 40076e4:	a8c00217 	ldw	r3,8(r21)
 40076e8:	10c00215 	stw	r3,8(r2)
 40076ec:	003f6a06 	br	4007498 <__alt_mem_onchip_memory+0xfbfff498>
 40076f0:	9c67883a 	add	r19,r19,r17
 40076f4:	4445c83a 	sub	r2,r8,r17
 40076f8:	e4c00215 	stw	r19,8(fp)
 40076fc:	10800054 	ori	r2,r2,1
 4007700:	98800115 	stw	r2,4(r19)
 4007704:	a8bfff17 	ldw	r2,-4(r21)
 4007708:	a009883a 	mov	r4,r20
 400770c:	1080004c 	andi	r2,r2,1
 4007710:	1462b03a 	or	r17,r2,r17
 4007714:	ac7fff15 	stw	r17,-4(r21)
 4007718:	400d7e80 	call	400d7e8 <__malloc_unlock>
 400771c:	a805883a 	mov	r2,r21
 4007720:	003f6b06 	br	40074d0 <__alt_mem_onchip_memory+0xfbfff4d0>
 4007724:	a80b883a 	mov	r5,r21
 4007728:	9009883a 	mov	r4,r18
 400772c:	40060240 	call	4006024 <memmove>
 4007730:	003f4e06 	br	400746c <__alt_mem_onchip_memory+0xfbfff46c>
 4007734:	89000404 	addi	r4,r17,16
 4007738:	b93fbc16 	blt	r23,r4,400762c <__alt_mem_onchip_memory+0xfbfff62c>
 400773c:	b0800317 	ldw	r2,12(r22)
 4007740:	b0c00217 	ldw	r3,8(r22)
 4007744:	81bfff04 	addi	r6,r16,-4
 4007748:	01000904 	movi	r4,36
 400774c:	18800315 	stw	r2,12(r3)
 4007750:	10c00215 	stw	r3,8(r2)
 4007754:	b4800204 	addi	r18,r22,8
 4007758:	21804336 	bltu	r4,r6,4007868 <_realloc_r+0x508>
 400775c:	008004c4 	movi	r2,19
 4007760:	11803f2e 	bgeu	r2,r6,4007860 <_realloc_r+0x500>
 4007764:	a8800017 	ldw	r2,0(r21)
 4007768:	b0800215 	stw	r2,8(r22)
 400776c:	a8800117 	ldw	r2,4(r21)
 4007770:	b0800315 	stw	r2,12(r22)
 4007774:	008006c4 	movi	r2,27
 4007778:	11803f36 	bltu	r2,r6,4007878 <_realloc_r+0x518>
 400777c:	b0800404 	addi	r2,r22,16
 4007780:	ad400204 	addi	r21,r21,8
 4007784:	a8c00017 	ldw	r3,0(r21)
 4007788:	10c00015 	stw	r3,0(r2)
 400778c:	a8c00117 	ldw	r3,4(r21)
 4007790:	10c00115 	stw	r3,4(r2)
 4007794:	a8c00217 	ldw	r3,8(r21)
 4007798:	10c00215 	stw	r3,8(r2)
 400779c:	b447883a 	add	r3,r22,r17
 40077a0:	bc45c83a 	sub	r2,r23,r17
 40077a4:	e0c00215 	stw	r3,8(fp)
 40077a8:	10800054 	ori	r2,r2,1
 40077ac:	18800115 	stw	r2,4(r3)
 40077b0:	b0800117 	ldw	r2,4(r22)
 40077b4:	a009883a 	mov	r4,r20
 40077b8:	1080004c 	andi	r2,r2,1
 40077bc:	1462b03a 	or	r17,r2,r17
 40077c0:	b4400115 	stw	r17,4(r22)
 40077c4:	400d7e80 	call	400d7e8 <__malloc_unlock>
 40077c8:	9005883a 	mov	r2,r18
 40077cc:	003f4006 	br	40074d0 <__alt_mem_onchip_memory+0xfbfff4d0>
 40077d0:	a8c00217 	ldw	r3,8(r21)
 40077d4:	90c00215 	stw	r3,8(r18)
 40077d8:	a8c00317 	ldw	r3,12(r21)
 40077dc:	90c00315 	stw	r3,12(r18)
 40077e0:	30801126 	beq	r6,r2,4007828 <_realloc_r+0x4c8>
 40077e4:	90800404 	addi	r2,r18,16
 40077e8:	a8c00404 	addi	r3,r21,16
 40077ec:	003f1906 	br	4007454 <__alt_mem_onchip_memory+0xfbfff454>
 40077f0:	90ffff17 	ldw	r3,-4(r18)
 40077f4:	00bfff04 	movi	r2,-4
 40077f8:	a825883a 	mov	r18,r21
 40077fc:	1884703a 	and	r2,r3,r2
 4007800:	80a1883a 	add	r16,r16,r2
 4007804:	003f2406 	br	4007498 <__alt_mem_onchip_memory+0xfbfff498>
 4007808:	a8800217 	ldw	r2,8(r21)
 400780c:	b0800415 	stw	r2,16(r22)
 4007810:	a8800317 	ldw	r2,12(r21)
 4007814:	b0800515 	stw	r2,20(r22)
 4007818:	31000a26 	beq	r6,r4,4007844 <_realloc_r+0x4e4>
 400781c:	b0800604 	addi	r2,r22,24
 4007820:	ad400404 	addi	r21,r21,16
 4007824:	003fa906 	br	40076cc <__alt_mem_onchip_memory+0xfbfff6cc>
 4007828:	a9000417 	ldw	r4,16(r21)
 400782c:	90800604 	addi	r2,r18,24
 4007830:	a8c00604 	addi	r3,r21,24
 4007834:	91000415 	stw	r4,16(r18)
 4007838:	a9000517 	ldw	r4,20(r21)
 400783c:	91000515 	stw	r4,20(r18)
 4007840:	003f0406 	br	4007454 <__alt_mem_onchip_memory+0xfbfff454>
 4007844:	a8c00417 	ldw	r3,16(r21)
 4007848:	ad400604 	addi	r21,r21,24
 400784c:	b0800804 	addi	r2,r22,32
 4007850:	b0c00615 	stw	r3,24(r22)
 4007854:	a8ffff17 	ldw	r3,-4(r21)
 4007858:	b0c00715 	stw	r3,28(r22)
 400785c:	003f9b06 	br	40076cc <__alt_mem_onchip_memory+0xfbfff6cc>
 4007860:	9005883a 	mov	r2,r18
 4007864:	003fc706 	br	4007784 <__alt_mem_onchip_memory+0xfbfff784>
 4007868:	a80b883a 	mov	r5,r21
 400786c:	9009883a 	mov	r4,r18
 4007870:	40060240 	call	4006024 <memmove>
 4007874:	003fc906 	br	400779c <__alt_mem_onchip_memory+0xfbfff79c>
 4007878:	a8800217 	ldw	r2,8(r21)
 400787c:	b0800415 	stw	r2,16(r22)
 4007880:	a8800317 	ldw	r2,12(r21)
 4007884:	b0800515 	stw	r2,20(r22)
 4007888:	31000726 	beq	r6,r4,40078a8 <_realloc_r+0x548>
 400788c:	b0800604 	addi	r2,r22,24
 4007890:	ad400404 	addi	r21,r21,16
 4007894:	003fbb06 	br	4007784 <__alt_mem_onchip_memory+0xfbfff784>
 4007898:	a009883a 	mov	r4,r20
 400789c:	400d7e80 	call	400d7e8 <__malloc_unlock>
 40078a0:	0005883a 	mov	r2,zero
 40078a4:	003f0a06 	br	40074d0 <__alt_mem_onchip_memory+0xfbfff4d0>
 40078a8:	a8c00417 	ldw	r3,16(r21)
 40078ac:	ad400604 	addi	r21,r21,24
 40078b0:	b0800804 	addi	r2,r22,32
 40078b4:	b0c00615 	stw	r3,24(r22)
 40078b8:	a8ffff17 	ldw	r3,-4(r21)
 40078bc:	b0c00715 	stw	r3,28(r22)
 40078c0:	003fb006 	br	4007784 <__alt_mem_onchip_memory+0xfbfff784>

040078c4 <__fpclassifyd>:
 40078c4:	00a00034 	movhi	r2,32768
 40078c8:	10bfffc4 	addi	r2,r2,-1
 40078cc:	2884703a 	and	r2,r5,r2
 40078d0:	10000726 	beq	r2,zero,40078f0 <__fpclassifyd+0x2c>
 40078d4:	00fffc34 	movhi	r3,65520
 40078d8:	019ff834 	movhi	r6,32736
 40078dc:	28c7883a 	add	r3,r5,r3
 40078e0:	31bfffc4 	addi	r6,r6,-1
 40078e4:	30c00536 	bltu	r6,r3,40078fc <__fpclassifyd+0x38>
 40078e8:	00800104 	movi	r2,4
 40078ec:	f800283a 	ret
 40078f0:	2000021e 	bne	r4,zero,40078fc <__fpclassifyd+0x38>
 40078f4:	00800084 	movi	r2,2
 40078f8:	f800283a 	ret
 40078fc:	00dffc34 	movhi	r3,32752
 4007900:	019ff834 	movhi	r6,32736
 4007904:	28cb883a 	add	r5,r5,r3
 4007908:	31bfffc4 	addi	r6,r6,-1
 400790c:	317ff62e 	bgeu	r6,r5,40078e8 <__alt_mem_onchip_memory+0xfbfff8e8>
 4007910:	01400434 	movhi	r5,16
 4007914:	297fffc4 	addi	r5,r5,-1
 4007918:	28800236 	bltu	r5,r2,4007924 <__fpclassifyd+0x60>
 400791c:	008000c4 	movi	r2,3
 4007920:	f800283a 	ret
 4007924:	10c00226 	beq	r2,r3,4007930 <__fpclassifyd+0x6c>
 4007928:	0005883a 	mov	r2,zero
 400792c:	f800283a 	ret
 4007930:	2005003a 	cmpeq	r2,r4,zero
 4007934:	f800283a 	ret

04007938 <_sbrk_r>:
 4007938:	defffd04 	addi	sp,sp,-12
 400793c:	dc000015 	stw	r16,0(sp)
 4007940:	04010074 	movhi	r16,1025
 4007944:	dc400115 	stw	r17,4(sp)
 4007948:	840c8904 	addi	r16,r16,12836
 400794c:	2023883a 	mov	r17,r4
 4007950:	2809883a 	mov	r4,r5
 4007954:	dfc00215 	stw	ra,8(sp)
 4007958:	80000015 	stw	zero,0(r16)
 400795c:	400d9d00 	call	400d9d0 <sbrk>
 4007960:	00ffffc4 	movi	r3,-1
 4007964:	10c00526 	beq	r2,r3,400797c <_sbrk_r+0x44>
 4007968:	dfc00217 	ldw	ra,8(sp)
 400796c:	dc400117 	ldw	r17,4(sp)
 4007970:	dc000017 	ldw	r16,0(sp)
 4007974:	dec00304 	addi	sp,sp,12
 4007978:	f800283a 	ret
 400797c:	80c00017 	ldw	r3,0(r16)
 4007980:	183ff926 	beq	r3,zero,4007968 <__alt_mem_onchip_memory+0xfbfff968>
 4007984:	88c00015 	stw	r3,0(r17)
 4007988:	003ff706 	br	4007968 <__alt_mem_onchip_memory+0xfbfff968>

0400798c <__sread>:
 400798c:	defffe04 	addi	sp,sp,-8
 4007990:	dc000015 	stw	r16,0(sp)
 4007994:	2821883a 	mov	r16,r5
 4007998:	2940038f 	ldh	r5,14(r5)
 400799c:	dfc00115 	stw	ra,4(sp)
 40079a0:	40098480 	call	4009848 <_read_r>
 40079a4:	10000716 	blt	r2,zero,40079c4 <__sread+0x38>
 40079a8:	80c01417 	ldw	r3,80(r16)
 40079ac:	1887883a 	add	r3,r3,r2
 40079b0:	80c01415 	stw	r3,80(r16)
 40079b4:	dfc00117 	ldw	ra,4(sp)
 40079b8:	dc000017 	ldw	r16,0(sp)
 40079bc:	dec00204 	addi	sp,sp,8
 40079c0:	f800283a 	ret
 40079c4:	80c0030b 	ldhu	r3,12(r16)
 40079c8:	18fbffcc 	andi	r3,r3,61439
 40079cc:	80c0030d 	sth	r3,12(r16)
 40079d0:	dfc00117 	ldw	ra,4(sp)
 40079d4:	dc000017 	ldw	r16,0(sp)
 40079d8:	dec00204 	addi	sp,sp,8
 40079dc:	f800283a 	ret

040079e0 <__seofread>:
 40079e0:	0005883a 	mov	r2,zero
 40079e4:	f800283a 	ret

040079e8 <__swrite>:
 40079e8:	2880030b 	ldhu	r2,12(r5)
 40079ec:	defffb04 	addi	sp,sp,-20
 40079f0:	dcc00315 	stw	r19,12(sp)
 40079f4:	dc800215 	stw	r18,8(sp)
 40079f8:	dc400115 	stw	r17,4(sp)
 40079fc:	dc000015 	stw	r16,0(sp)
 4007a00:	dfc00415 	stw	ra,16(sp)
 4007a04:	10c0400c 	andi	r3,r2,256
 4007a08:	2821883a 	mov	r16,r5
 4007a0c:	2023883a 	mov	r17,r4
 4007a10:	3025883a 	mov	r18,r6
 4007a14:	3827883a 	mov	r19,r7
 4007a18:	18000526 	beq	r3,zero,4007a30 <__swrite+0x48>
 4007a1c:	2940038f 	ldh	r5,14(r5)
 4007a20:	01c00084 	movi	r7,2
 4007a24:	000d883a 	mov	r6,zero
 4007a28:	40097e80 	call	40097e8 <_lseek_r>
 4007a2c:	8080030b 	ldhu	r2,12(r16)
 4007a30:	8140038f 	ldh	r5,14(r16)
 4007a34:	10bbffcc 	andi	r2,r2,61439
 4007a38:	980f883a 	mov	r7,r19
 4007a3c:	900d883a 	mov	r6,r18
 4007a40:	8809883a 	mov	r4,r17
 4007a44:	8080030d 	sth	r2,12(r16)
 4007a48:	dfc00417 	ldw	ra,16(sp)
 4007a4c:	dcc00317 	ldw	r19,12(sp)
 4007a50:	dc800217 	ldw	r18,8(sp)
 4007a54:	dc400117 	ldw	r17,4(sp)
 4007a58:	dc000017 	ldw	r16,0(sp)
 4007a5c:	dec00504 	addi	sp,sp,20
 4007a60:	400929c1 	jmpi	400929c <_write_r>

04007a64 <__sseek>:
 4007a64:	defffe04 	addi	sp,sp,-8
 4007a68:	dc000015 	stw	r16,0(sp)
 4007a6c:	2821883a 	mov	r16,r5
 4007a70:	2940038f 	ldh	r5,14(r5)
 4007a74:	dfc00115 	stw	ra,4(sp)
 4007a78:	40097e80 	call	40097e8 <_lseek_r>
 4007a7c:	00ffffc4 	movi	r3,-1
 4007a80:	10c00826 	beq	r2,r3,4007aa4 <__sseek+0x40>
 4007a84:	80c0030b 	ldhu	r3,12(r16)
 4007a88:	80801415 	stw	r2,80(r16)
 4007a8c:	18c40014 	ori	r3,r3,4096
 4007a90:	80c0030d 	sth	r3,12(r16)
 4007a94:	dfc00117 	ldw	ra,4(sp)
 4007a98:	dc000017 	ldw	r16,0(sp)
 4007a9c:	dec00204 	addi	sp,sp,8
 4007aa0:	f800283a 	ret
 4007aa4:	80c0030b 	ldhu	r3,12(r16)
 4007aa8:	18fbffcc 	andi	r3,r3,61439
 4007aac:	80c0030d 	sth	r3,12(r16)
 4007ab0:	dfc00117 	ldw	ra,4(sp)
 4007ab4:	dc000017 	ldw	r16,0(sp)
 4007ab8:	dec00204 	addi	sp,sp,8
 4007abc:	f800283a 	ret

04007ac0 <__sclose>:
 4007ac0:	2940038f 	ldh	r5,14(r5)
 4007ac4:	40092fc1 	jmpi	40092fc <_close_r>

04007ac8 <strcmp>:
 4007ac8:	2144b03a 	or	r2,r4,r5
 4007acc:	108000cc 	andi	r2,r2,3
 4007ad0:	1000171e 	bne	r2,zero,4007b30 <strcmp+0x68>
 4007ad4:	20800017 	ldw	r2,0(r4)
 4007ad8:	28c00017 	ldw	r3,0(r5)
 4007adc:	10c0141e 	bne	r2,r3,4007b30 <strcmp+0x68>
 4007ae0:	027fbff4 	movhi	r9,65279
 4007ae4:	4a7fbfc4 	addi	r9,r9,-257
 4007ae8:	0086303a 	nor	r3,zero,r2
 4007aec:	02202074 	movhi	r8,32897
 4007af0:	1245883a 	add	r2,r2,r9
 4007af4:	42202004 	addi	r8,r8,-32640
 4007af8:	10c4703a 	and	r2,r2,r3
 4007afc:	1204703a 	and	r2,r2,r8
 4007b00:	10000226 	beq	r2,zero,4007b0c <strcmp+0x44>
 4007b04:	00002306 	br	4007b94 <strcmp+0xcc>
 4007b08:	1000221e 	bne	r2,zero,4007b94 <strcmp+0xcc>
 4007b0c:	21000104 	addi	r4,r4,4
 4007b10:	20c00017 	ldw	r3,0(r4)
 4007b14:	29400104 	addi	r5,r5,4
 4007b18:	29800017 	ldw	r6,0(r5)
 4007b1c:	1a4f883a 	add	r7,r3,r9
 4007b20:	00c4303a 	nor	r2,zero,r3
 4007b24:	3884703a 	and	r2,r7,r2
 4007b28:	1204703a 	and	r2,r2,r8
 4007b2c:	19bff626 	beq	r3,r6,4007b08 <__alt_mem_onchip_memory+0xfbfffb08>
 4007b30:	20800003 	ldbu	r2,0(r4)
 4007b34:	10c03fcc 	andi	r3,r2,255
 4007b38:	18c0201c 	xori	r3,r3,128
 4007b3c:	18ffe004 	addi	r3,r3,-128
 4007b40:	18000c26 	beq	r3,zero,4007b74 <strcmp+0xac>
 4007b44:	29800007 	ldb	r6,0(r5)
 4007b48:	19800326 	beq	r3,r6,4007b58 <strcmp+0x90>
 4007b4c:	00001306 	br	4007b9c <strcmp+0xd4>
 4007b50:	29800007 	ldb	r6,0(r5)
 4007b54:	11800b1e 	bne	r2,r6,4007b84 <strcmp+0xbc>
 4007b58:	21000044 	addi	r4,r4,1
 4007b5c:	20c00003 	ldbu	r3,0(r4)
 4007b60:	29400044 	addi	r5,r5,1
 4007b64:	18803fcc 	andi	r2,r3,255
 4007b68:	1080201c 	xori	r2,r2,128
 4007b6c:	10bfe004 	addi	r2,r2,-128
 4007b70:	103ff71e 	bne	r2,zero,4007b50 <__alt_mem_onchip_memory+0xfbfffb50>
 4007b74:	0007883a 	mov	r3,zero
 4007b78:	28800003 	ldbu	r2,0(r5)
 4007b7c:	1885c83a 	sub	r2,r3,r2
 4007b80:	f800283a 	ret
 4007b84:	28800003 	ldbu	r2,0(r5)
 4007b88:	18c03fcc 	andi	r3,r3,255
 4007b8c:	1885c83a 	sub	r2,r3,r2
 4007b90:	f800283a 	ret
 4007b94:	0005883a 	mov	r2,zero
 4007b98:	f800283a 	ret
 4007b9c:	10c03fcc 	andi	r3,r2,255
 4007ba0:	003ff506 	br	4007b78 <__alt_mem_onchip_memory+0xfbfffb78>

04007ba4 <__sprint_r.part.0>:
 4007ba4:	28801917 	ldw	r2,100(r5)
 4007ba8:	defff604 	addi	sp,sp,-40
 4007bac:	dd400515 	stw	r21,20(sp)
 4007bb0:	dfc00915 	stw	ra,36(sp)
 4007bb4:	df000815 	stw	fp,32(sp)
 4007bb8:	ddc00715 	stw	r23,28(sp)
 4007bbc:	dd800615 	stw	r22,24(sp)
 4007bc0:	dd000415 	stw	r20,16(sp)
 4007bc4:	dcc00315 	stw	r19,12(sp)
 4007bc8:	dc800215 	stw	r18,8(sp)
 4007bcc:	dc400115 	stw	r17,4(sp)
 4007bd0:	dc000015 	stw	r16,0(sp)
 4007bd4:	1088000c 	andi	r2,r2,8192
 4007bd8:	302b883a 	mov	r21,r6
 4007bdc:	10002e26 	beq	r2,zero,4007c98 <__sprint_r.part.0+0xf4>
 4007be0:	30800217 	ldw	r2,8(r6)
 4007be4:	35800017 	ldw	r22,0(r6)
 4007be8:	10002926 	beq	r2,zero,4007c90 <__sprint_r.part.0+0xec>
 4007bec:	2827883a 	mov	r19,r5
 4007bf0:	2029883a 	mov	r20,r4
 4007bf4:	b5c00104 	addi	r23,r22,4
 4007bf8:	04bfffc4 	movi	r18,-1
 4007bfc:	bc400017 	ldw	r17,0(r23)
 4007c00:	b4000017 	ldw	r16,0(r22)
 4007c04:	0039883a 	mov	fp,zero
 4007c08:	8822d0ba 	srli	r17,r17,2
 4007c0c:	8800031e 	bne	r17,zero,4007c1c <__sprint_r.part.0+0x78>
 4007c10:	00001806 	br	4007c74 <__sprint_r.part.0+0xd0>
 4007c14:	84000104 	addi	r16,r16,4
 4007c18:	8f001526 	beq	r17,fp,4007c70 <__sprint_r.part.0+0xcc>
 4007c1c:	81400017 	ldw	r5,0(r16)
 4007c20:	980d883a 	mov	r6,r19
 4007c24:	a009883a 	mov	r4,r20
 4007c28:	40096940 	call	4009694 <_fputwc_r>
 4007c2c:	e7000044 	addi	fp,fp,1
 4007c30:	14bff81e 	bne	r2,r18,4007c14 <__alt_mem_onchip_memory+0xfbfffc14>
 4007c34:	9005883a 	mov	r2,r18
 4007c38:	a8000215 	stw	zero,8(r21)
 4007c3c:	a8000115 	stw	zero,4(r21)
 4007c40:	dfc00917 	ldw	ra,36(sp)
 4007c44:	df000817 	ldw	fp,32(sp)
 4007c48:	ddc00717 	ldw	r23,28(sp)
 4007c4c:	dd800617 	ldw	r22,24(sp)
 4007c50:	dd400517 	ldw	r21,20(sp)
 4007c54:	dd000417 	ldw	r20,16(sp)
 4007c58:	dcc00317 	ldw	r19,12(sp)
 4007c5c:	dc800217 	ldw	r18,8(sp)
 4007c60:	dc400117 	ldw	r17,4(sp)
 4007c64:	dc000017 	ldw	r16,0(sp)
 4007c68:	dec00a04 	addi	sp,sp,40
 4007c6c:	f800283a 	ret
 4007c70:	a8800217 	ldw	r2,8(r21)
 4007c74:	8c63883a 	add	r17,r17,r17
 4007c78:	8c63883a 	add	r17,r17,r17
 4007c7c:	1445c83a 	sub	r2,r2,r17
 4007c80:	a8800215 	stw	r2,8(r21)
 4007c84:	b5800204 	addi	r22,r22,8
 4007c88:	bdc00204 	addi	r23,r23,8
 4007c8c:	103fdb1e 	bne	r2,zero,4007bfc <__alt_mem_onchip_memory+0xfbfffbfc>
 4007c90:	0005883a 	mov	r2,zero
 4007c94:	003fe806 	br	4007c38 <__alt_mem_onchip_memory+0xfbfffc38>
 4007c98:	4004d040 	call	4004d04 <__sfvwrite_r>
 4007c9c:	003fe606 	br	4007c38 <__alt_mem_onchip_memory+0xfbfffc38>

04007ca0 <__sprint_r>:
 4007ca0:	30c00217 	ldw	r3,8(r6)
 4007ca4:	18000126 	beq	r3,zero,4007cac <__sprint_r+0xc>
 4007ca8:	4007ba41 	jmpi	4007ba4 <__sprint_r.part.0>
 4007cac:	30000115 	stw	zero,4(r6)
 4007cb0:	0005883a 	mov	r2,zero
 4007cb4:	f800283a 	ret

04007cb8 <___vfiprintf_internal_r>:
 4007cb8:	deffca04 	addi	sp,sp,-216
 4007cbc:	dd403115 	stw	r21,196(sp)
 4007cc0:	dfc03515 	stw	ra,212(sp)
 4007cc4:	df003415 	stw	fp,208(sp)
 4007cc8:	ddc03315 	stw	r23,204(sp)
 4007ccc:	dd803215 	stw	r22,200(sp)
 4007cd0:	dd003015 	stw	r20,192(sp)
 4007cd4:	dcc02f15 	stw	r19,188(sp)
 4007cd8:	dc802e15 	stw	r18,184(sp)
 4007cdc:	dc402d15 	stw	r17,180(sp)
 4007ce0:	dc002c15 	stw	r16,176(sp)
 4007ce4:	d9002115 	stw	r4,132(sp)
 4007ce8:	d9402015 	stw	r5,128(sp)
 4007cec:	d9c02215 	stw	r7,136(sp)
 4007cf0:	302b883a 	mov	r21,r6
 4007cf4:	20000226 	beq	r4,zero,4007d00 <___vfiprintf_internal_r+0x48>
 4007cf8:	20800e17 	ldw	r2,56(r4)
 4007cfc:	1000cf26 	beq	r2,zero,400803c <___vfiprintf_internal_r+0x384>
 4007d00:	d8c02017 	ldw	r3,128(sp)
 4007d04:	1880030b 	ldhu	r2,12(r3)
 4007d08:	10c8000c 	andi	r3,r2,8192
 4007d0c:	1800071e 	bne	r3,zero,4007d2c <___vfiprintf_internal_r+0x74>
 4007d10:	d9402017 	ldw	r5,128(sp)
 4007d14:	00f7ffc4 	movi	r3,-8193
 4007d18:	10880014 	ori	r2,r2,8192
 4007d1c:	29001917 	ldw	r4,100(r5)
 4007d20:	2880030d 	sth	r2,12(r5)
 4007d24:	20c6703a 	and	r3,r4,r3
 4007d28:	28c01915 	stw	r3,100(r5)
 4007d2c:	10c0020c 	andi	r3,r2,8
 4007d30:	1800a526 	beq	r3,zero,4007fc8 <___vfiprintf_internal_r+0x310>
 4007d34:	d9002017 	ldw	r4,128(sp)
 4007d38:	20c00417 	ldw	r3,16(r4)
 4007d3c:	1800a226 	beq	r3,zero,4007fc8 <___vfiprintf_internal_r+0x310>
 4007d40:	1080068c 	andi	r2,r2,26
 4007d44:	00c00284 	movi	r3,10
 4007d48:	10c0a826 	beq	r2,r3,4007fec <___vfiprintf_internal_r+0x334>
 4007d4c:	d9001a04 	addi	r4,sp,104
 4007d50:	d94019c4 	addi	r5,sp,103
 4007d54:	04810074 	movhi	r18,1025
 4007d58:	2145c83a 	sub	r2,r4,r5
 4007d5c:	94beba04 	addi	r18,r18,-1304
 4007d60:	d9001e15 	stw	r4,120(sp)
 4007d64:	d9401f15 	stw	r5,124(sp)
 4007d68:	dec01a15 	stw	sp,104(sp)
 4007d6c:	d8001c15 	stw	zero,112(sp)
 4007d70:	d8001b15 	stw	zero,108(sp)
 4007d74:	d811883a 	mov	r8,sp
 4007d78:	d8002615 	stw	zero,152(sp)
 4007d7c:	d8002415 	stw	zero,144(sp)
 4007d80:	d8802815 	stw	r2,160(sp)
 4007d84:	a82d883a 	mov	r22,r21
 4007d88:	b0800007 	ldb	r2,0(r22)
 4007d8c:	10040d26 	beq	r2,zero,4008dc4 <___vfiprintf_internal_r+0x110c>
 4007d90:	00c00944 	movi	r3,37
 4007d94:	b029883a 	mov	r20,r22
 4007d98:	10c0021e 	bne	r2,r3,4007da4 <___vfiprintf_internal_r+0xec>
 4007d9c:	00001606 	br	4007df8 <___vfiprintf_internal_r+0x140>
 4007da0:	10c00326 	beq	r2,r3,4007db0 <___vfiprintf_internal_r+0xf8>
 4007da4:	a5000044 	addi	r20,r20,1
 4007da8:	a0800007 	ldb	r2,0(r20)
 4007dac:	103ffc1e 	bne	r2,zero,4007da0 <__alt_mem_onchip_memory+0xfbfffda0>
 4007db0:	a5a1c83a 	sub	r16,r20,r22
 4007db4:	80001026 	beq	r16,zero,4007df8 <___vfiprintf_internal_r+0x140>
 4007db8:	d8c01c17 	ldw	r3,112(sp)
 4007dbc:	d8801b17 	ldw	r2,108(sp)
 4007dc0:	45800015 	stw	r22,0(r8)
 4007dc4:	80c7883a 	add	r3,r16,r3
 4007dc8:	10800044 	addi	r2,r2,1
 4007dcc:	44000115 	stw	r16,4(r8)
 4007dd0:	d8c01c15 	stw	r3,112(sp)
 4007dd4:	d8801b15 	stw	r2,108(sp)
 4007dd8:	010001c4 	movi	r4,7
 4007ddc:	2080750e 	bge	r4,r2,4007fb4 <___vfiprintf_internal_r+0x2fc>
 4007de0:	1803951e 	bne	r3,zero,4008c38 <___vfiprintf_internal_r+0xf80>
 4007de4:	d8c02417 	ldw	r3,144(sp)
 4007de8:	d8001b15 	stw	zero,108(sp)
 4007dec:	d811883a 	mov	r8,sp
 4007df0:	1c07883a 	add	r3,r3,r16
 4007df4:	d8c02415 	stw	r3,144(sp)
 4007df8:	a0800007 	ldb	r2,0(r20)
 4007dfc:	1002e026 	beq	r2,zero,4008980 <___vfiprintf_internal_r+0xcc8>
 4007e00:	a5800044 	addi	r22,r20,1
 4007e04:	a0c00047 	ldb	r3,1(r20)
 4007e08:	d8001d85 	stb	zero,118(sp)
 4007e0c:	0027883a 	mov	r19,zero
 4007e10:	d8002305 	stb	zero,140(sp)
 4007e14:	043fffc4 	movi	r16,-1
 4007e18:	d8002515 	stw	zero,148(sp)
 4007e1c:	0023883a 	mov	r17,zero
 4007e20:	05001604 	movi	r20,88
 4007e24:	05400244 	movi	r21,9
 4007e28:	402f883a 	mov	r23,r8
 4007e2c:	b5800044 	addi	r22,r22,1
 4007e30:	18bff804 	addi	r2,r3,-32
 4007e34:	a0827736 	bltu	r20,r2,4008814 <___vfiprintf_internal_r+0xb5c>
 4007e38:	100490ba 	slli	r2,r2,2
 4007e3c:	01010034 	movhi	r4,1024
 4007e40:	211f9404 	addi	r4,r4,32336
 4007e44:	1105883a 	add	r2,r2,r4
 4007e48:	10800017 	ldw	r2,0(r2)
 4007e4c:	1000683a 	jmp	r2
 4007e50:	04008514 	movui	r16,532
 4007e54:	04008814 	movui	r16,544
 4007e58:	04008814 	movui	r16,544
 4007e5c:	04008530 	cmpltui	r16,zero,532
 4007e60:	04008814 	movui	r16,544
 4007e64:	04008814 	movui	r16,544
 4007e68:	04008814 	movui	r16,544
 4007e6c:	04008814 	movui	r16,544
 4007e70:	04008814 	movui	r16,544
 4007e74:	04008814 	movui	r16,544
 4007e78:	04008738 	rdprs	r16,zero,540
 4007e7c:	0400875c 	xori	r16,zero,541
 4007e80:	04008814 	movui	r16,544
 4007e84:	04008054 	movui	r16,513
 4007e88:	04008770 	cmpltui	r16,zero,541
 4007e8c:	04008814 	movui	r16,544
 4007e90:	0400853c 	xorhi	r16,zero,532
 4007e94:	04008548 	cmpgei	r16,zero,533
 4007e98:	04008548 	cmpgei	r16,zero,533
 4007e9c:	04008548 	cmpgei	r16,zero,533
 4007ea0:	04008548 	cmpgei	r16,zero,533
 4007ea4:	04008548 	cmpgei	r16,zero,533
 4007ea8:	04008548 	cmpgei	r16,zero,533
 4007eac:	04008548 	cmpgei	r16,zero,533
 4007eb0:	04008548 	cmpgei	r16,zero,533
 4007eb4:	04008548 	cmpgei	r16,zero,533
 4007eb8:	04008814 	movui	r16,544
 4007ebc:	04008814 	movui	r16,544
 4007ec0:	04008814 	movui	r16,544
 4007ec4:	04008814 	movui	r16,544
 4007ec8:	04008814 	movui	r16,544
 4007ecc:	04008814 	movui	r16,544
 4007ed0:	04008814 	movui	r16,544
 4007ed4:	04008814 	movui	r16,544
 4007ed8:	04008814 	movui	r16,544
 4007edc:	04008814 	movui	r16,544
 4007ee0:	04008588 	cmpgei	r16,zero,534
 4007ee4:	04008814 	movui	r16,544
 4007ee8:	04008814 	movui	r16,544
 4007eec:	04008814 	movui	r16,544
 4007ef0:	04008814 	movui	r16,544
 4007ef4:	04008814 	movui	r16,544
 4007ef8:	04008814 	movui	r16,544
 4007efc:	04008814 	movui	r16,544
 4007f00:	04008814 	movui	r16,544
 4007f04:	04008814 	movui	r16,544
 4007f08:	04008814 	movui	r16,544
 4007f0c:	040085c4 	movi	r16,535
 4007f10:	04008814 	movui	r16,544
 4007f14:	04008814 	movui	r16,544
 4007f18:	04008814 	movui	r16,544
 4007f1c:	04008814 	movui	r16,544
 4007f20:	04008814 	movui	r16,544
 4007f24:	04008620 	cmpeqi	r16,zero,536
 4007f28:	04008814 	movui	r16,544
 4007f2c:	04008814 	movui	r16,544
 4007f30:	04008694 	movui	r16,538
 4007f34:	04008814 	movui	r16,544
 4007f38:	04008814 	movui	r16,544
 4007f3c:	04008814 	movui	r16,544
 4007f40:	04008814 	movui	r16,544
 4007f44:	04008814 	movui	r16,544
 4007f48:	04008814 	movui	r16,544
 4007f4c:	04008814 	movui	r16,544
 4007f50:	04008814 	movui	r16,544
 4007f54:	04008814 	movui	r16,544
 4007f58:	04008814 	movui	r16,544
 4007f5c:	0400843c 	xorhi	r16,zero,528
 4007f60:	0400846c 	andhi	r16,zero,529
 4007f64:	04008814 	movui	r16,544
 4007f68:	04008814 	movui	r16,544
 4007f6c:	04008814 	movui	r16,544
 4007f70:	040087bc 	xorhi	r16,zero,542
 4007f74:	0400846c 	andhi	r16,zero,529
 4007f78:	04008814 	movui	r16,544
 4007f7c:	04008814 	movui	r16,544
 4007f80:	04008314 	movui	r16,524
 4007f84:	04008814 	movui	r16,544
 4007f88:	04008328 	cmpgeui	r16,zero,524
 4007f8c:	04008360 	cmpeqi	r16,zero,525
 4007f90:	04008060 	cmpeqi	r16,zero,513
 4007f94:	04008308 	cmpgei	r16,zero,524
 4007f98:	04008814 	movui	r16,544
 4007f9c:	040086d4 	movui	r16,539
 4007fa0:	04008814 	movui	r16,544
 4007fa4:	04008720 	cmpeqi	r16,zero,540
 4007fa8:	04008814 	movui	r16,544
 4007fac:	04008814 	movui	r16,544
 4007fb0:	040083e4 	muli	r16,zero,527
 4007fb4:	42000204 	addi	r8,r8,8
 4007fb8:	d8c02417 	ldw	r3,144(sp)
 4007fbc:	1c07883a 	add	r3,r3,r16
 4007fc0:	d8c02415 	stw	r3,144(sp)
 4007fc4:	003f8c06 	br	4007df8 <__alt_mem_onchip_memory+0xfbfffdf8>
 4007fc8:	d9402017 	ldw	r5,128(sp)
 4007fcc:	d9002117 	ldw	r4,132(sp)
 4007fd0:	40028740 	call	4002874 <__swsetup_r>
 4007fd4:	1003c11e 	bne	r2,zero,4008edc <___vfiprintf_internal_r+0x1224>
 4007fd8:	d9402017 	ldw	r5,128(sp)
 4007fdc:	00c00284 	movi	r3,10
 4007fe0:	2880030b 	ldhu	r2,12(r5)
 4007fe4:	1080068c 	andi	r2,r2,26
 4007fe8:	10ff581e 	bne	r2,r3,4007d4c <__alt_mem_onchip_memory+0xfbfffd4c>
 4007fec:	d8c02017 	ldw	r3,128(sp)
 4007ff0:	1880038f 	ldh	r2,14(r3)
 4007ff4:	103f5516 	blt	r2,zero,4007d4c <__alt_mem_onchip_memory+0xfbfffd4c>
 4007ff8:	d9c02217 	ldw	r7,136(sp)
 4007ffc:	d9002117 	ldw	r4,132(sp)
 4008000:	a80d883a 	mov	r6,r21
 4008004:	180b883a 	mov	r5,r3
 4008008:	40091e00 	call	40091e0 <__sbprintf>
 400800c:	dfc03517 	ldw	ra,212(sp)
 4008010:	df003417 	ldw	fp,208(sp)
 4008014:	ddc03317 	ldw	r23,204(sp)
 4008018:	dd803217 	ldw	r22,200(sp)
 400801c:	dd403117 	ldw	r21,196(sp)
 4008020:	dd003017 	ldw	r20,192(sp)
 4008024:	dcc02f17 	ldw	r19,188(sp)
 4008028:	dc802e17 	ldw	r18,184(sp)
 400802c:	dc402d17 	ldw	r17,180(sp)
 4008030:	dc002c17 	ldw	r16,176(sp)
 4008034:	dec03604 	addi	sp,sp,216
 4008038:	f800283a 	ret
 400803c:	40048800 	call	4004880 <__sinit>
 4008040:	003f2f06 	br	4007d00 <__alt_mem_onchip_memory+0xfbfffd00>
 4008044:	d8c02517 	ldw	r3,148(sp)
 4008048:	d8802215 	stw	r2,136(sp)
 400804c:	00c7c83a 	sub	r3,zero,r3
 4008050:	d8c02515 	stw	r3,148(sp)
 4008054:	8c400114 	ori	r17,r17,4
 4008058:	b0c00007 	ldb	r3,0(r22)
 400805c:	003f7306 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008060:	00800c04 	movi	r2,48
 4008064:	d9402217 	ldw	r5,136(sp)
 4008068:	d8801d05 	stb	r2,116(sp)
 400806c:	00801e04 	movi	r2,120
 4008070:	d8801d45 	stb	r2,117(sp)
 4008074:	d8001d85 	stb	zero,118(sp)
 4008078:	b811883a 	mov	r8,r23
 400807c:	28c00104 	addi	r3,r5,4
 4008080:	2cc00017 	ldw	r19,0(r5)
 4008084:	0029883a 	mov	r20,zero
 4008088:	88800094 	ori	r2,r17,2
 400808c:	80032516 	blt	r16,zero,4008d24 <___vfiprintf_internal_r+0x106c>
 4008090:	00bfdfc4 	movi	r2,-129
 4008094:	88a2703a 	and	r17,r17,r2
 4008098:	d8c02215 	stw	r3,136(sp)
 400809c:	8c400094 	ori	r17,r17,2
 40080a0:	98032a1e 	bne	r19,zero,4008d4c <___vfiprintf_internal_r+0x1094>
 40080a4:	00810074 	movhi	r2,1025
 40080a8:	10be5904 	addi	r2,r2,-1692
 40080ac:	d8802615 	stw	r2,152(sp)
 40080b0:	002b883a 	mov	r21,zero
 40080b4:	8001741e 	bne	r16,zero,4008688 <___vfiprintf_internal_r+0x9d0>
 40080b8:	0021883a 	mov	r16,zero
 40080bc:	0029883a 	mov	r20,zero
 40080c0:	ddc01a04 	addi	r23,sp,104
 40080c4:	8027883a 	mov	r19,r16
 40080c8:	8500010e 	bge	r16,r20,40080d0 <___vfiprintf_internal_r+0x418>
 40080cc:	a027883a 	mov	r19,r20
 40080d0:	ad403fcc 	andi	r21,r21,255
 40080d4:	ad40201c 	xori	r21,r21,128
 40080d8:	ad7fe004 	addi	r21,r21,-128
 40080dc:	a8000126 	beq	r21,zero,40080e4 <___vfiprintf_internal_r+0x42c>
 40080e0:	9cc00044 	addi	r19,r19,1
 40080e4:	89c0008c 	andi	r7,r17,2
 40080e8:	38000126 	beq	r7,zero,40080f0 <___vfiprintf_internal_r+0x438>
 40080ec:	9cc00084 	addi	r19,r19,2
 40080f0:	88c0210c 	andi	r3,r17,132
 40080f4:	1801dd1e 	bne	r3,zero,400886c <___vfiprintf_internal_r+0xbb4>
 40080f8:	d9402517 	ldw	r5,148(sp)
 40080fc:	2cebc83a 	sub	r21,r5,r19
 4008100:	0541da0e 	bge	zero,r21,400886c <___vfiprintf_internal_r+0xbb4>
 4008104:	07000404 	movi	fp,16
 4008108:	d8801c17 	ldw	r2,112(sp)
 400810c:	e543be0e 	bge	fp,r21,4009008 <___vfiprintf_internal_r+0x1350>
 4008110:	01410074 	movhi	r5,1025
 4008114:	297ebe04 	addi	r5,r5,-1288
 4008118:	dc002715 	stw	r16,156(sp)
 400811c:	d9801b17 	ldw	r6,108(sp)
 4008120:	a821883a 	mov	r16,r21
 4008124:	d9402315 	stw	r5,140(sp)
 4008128:	028001c4 	movi	r10,7
 400812c:	d9c02915 	stw	r7,164(sp)
 4008130:	182b883a 	mov	r21,r3
 4008134:	00000506 	br	400814c <___vfiprintf_internal_r+0x494>
 4008138:	31000084 	addi	r4,r6,2
 400813c:	42000204 	addi	r8,r8,8
 4008140:	180d883a 	mov	r6,r3
 4008144:	843ffc04 	addi	r16,r16,-16
 4008148:	e4000f0e 	bge	fp,r16,4008188 <___vfiprintf_internal_r+0x4d0>
 400814c:	01010074 	movhi	r4,1025
 4008150:	10800404 	addi	r2,r2,16
 4008154:	30c00044 	addi	r3,r6,1
 4008158:	213ebe04 	addi	r4,r4,-1288
 400815c:	41000015 	stw	r4,0(r8)
 4008160:	47000115 	stw	fp,4(r8)
 4008164:	d8801c15 	stw	r2,112(sp)
 4008168:	d8c01b15 	stw	r3,108(sp)
 400816c:	50fff20e 	bge	r10,r3,4008138 <__alt_mem_onchip_memory+0xfc000138>
 4008170:	1001b21e 	bne	r2,zero,400883c <___vfiprintf_internal_r+0xb84>
 4008174:	843ffc04 	addi	r16,r16,-16
 4008178:	000d883a 	mov	r6,zero
 400817c:	01000044 	movi	r4,1
 4008180:	d811883a 	mov	r8,sp
 4008184:	e43ff116 	blt	fp,r16,400814c <__alt_mem_onchip_memory+0xfc00014c>
 4008188:	a807883a 	mov	r3,r21
 400818c:	d9c02917 	ldw	r7,164(sp)
 4008190:	802b883a 	mov	r21,r16
 4008194:	dc002717 	ldw	r16,156(sp)
 4008198:	d9402317 	ldw	r5,140(sp)
 400819c:	a885883a 	add	r2,r21,r2
 40081a0:	45400115 	stw	r21,4(r8)
 40081a4:	41400015 	stw	r5,0(r8)
 40081a8:	d8801c15 	stw	r2,112(sp)
 40081ac:	d9001b15 	stw	r4,108(sp)
 40081b0:	014001c4 	movi	r5,7
 40081b4:	29026216 	blt	r5,r4,4008b40 <___vfiprintf_internal_r+0xe88>
 40081b8:	d9801d87 	ldb	r6,118(sp)
 40081bc:	42000204 	addi	r8,r8,8
 40081c0:	21400044 	addi	r5,r4,1
 40081c4:	3001ae1e 	bne	r6,zero,4008880 <___vfiprintf_internal_r+0xbc8>
 40081c8:	3801bb26 	beq	r7,zero,40088b8 <___vfiprintf_internal_r+0xc00>
 40081cc:	d9001d04 	addi	r4,sp,116
 40081d0:	10800084 	addi	r2,r2,2
 40081d4:	41000015 	stw	r4,0(r8)
 40081d8:	01000084 	movi	r4,2
 40081dc:	41000115 	stw	r4,4(r8)
 40081e0:	d8801c15 	stw	r2,112(sp)
 40081e4:	d9401b15 	stw	r5,108(sp)
 40081e8:	010001c4 	movi	r4,7
 40081ec:	2142680e 	bge	r4,r5,4008b90 <___vfiprintf_internal_r+0xed8>
 40081f0:	1002b11e 	bne	r2,zero,4008cb8 <___vfiprintf_internal_r+0x1000>
 40081f4:	01802004 	movi	r6,128
 40081f8:	01400044 	movi	r5,1
 40081fc:	0009883a 	mov	r4,zero
 4008200:	d811883a 	mov	r8,sp
 4008204:	1981ae1e 	bne	r3,r6,40088c0 <___vfiprintf_internal_r+0xc08>
 4008208:	d8c02517 	ldw	r3,148(sp)
 400820c:	1cf9c83a 	sub	fp,r3,r19
 4008210:	0701ab0e 	bge	zero,fp,40088c0 <___vfiprintf_internal_r+0xc08>
 4008214:	05400404 	movi	r21,16
 4008218:	af03a90e 	bge	r21,fp,40090c0 <___vfiprintf_internal_r+0x1408>
 400821c:	01410074 	movhi	r5,1025
 4008220:	297eba04 	addi	r5,r5,-1304
 4008224:	d9402315 	stw	r5,140(sp)
 4008228:	01c001c4 	movi	r7,7
 400822c:	00000506 	br	4008244 <___vfiprintf_internal_r+0x58c>
 4008230:	21800084 	addi	r6,r4,2
 4008234:	42000204 	addi	r8,r8,8
 4008238:	1809883a 	mov	r4,r3
 400823c:	e73ffc04 	addi	fp,fp,-16
 4008240:	af000d0e 	bge	r21,fp,4008278 <___vfiprintf_internal_r+0x5c0>
 4008244:	10800404 	addi	r2,r2,16
 4008248:	20c00044 	addi	r3,r4,1
 400824c:	44800015 	stw	r18,0(r8)
 4008250:	45400115 	stw	r21,4(r8)
 4008254:	d8801c15 	stw	r2,112(sp)
 4008258:	d8c01b15 	stw	r3,108(sp)
 400825c:	38fff40e 	bge	r7,r3,4008230 <__alt_mem_onchip_memory+0xfc000230>
 4008260:	10022b1e 	bne	r2,zero,4008b10 <___vfiprintf_internal_r+0xe58>
 4008264:	e73ffc04 	addi	fp,fp,-16
 4008268:	01800044 	movi	r6,1
 400826c:	0009883a 	mov	r4,zero
 4008270:	d811883a 	mov	r8,sp
 4008274:	af3ff316 	blt	r21,fp,4008244 <__alt_mem_onchip_memory+0xfc000244>
 4008278:	d8c02317 	ldw	r3,140(sp)
 400827c:	1705883a 	add	r2,r2,fp
 4008280:	47000115 	stw	fp,4(r8)
 4008284:	40c00015 	stw	r3,0(r8)
 4008288:	d8801c15 	stw	r2,112(sp)
 400828c:	d9801b15 	stw	r6,108(sp)
 4008290:	00c001c4 	movi	r3,7
 4008294:	19829416 	blt	r3,r6,4008ce8 <___vfiprintf_internal_r+0x1030>
 4008298:	8521c83a 	sub	r16,r16,r20
 400829c:	42000204 	addi	r8,r8,8
 40082a0:	31400044 	addi	r5,r6,1
 40082a4:	3009883a 	mov	r4,r6
 40082a8:	04018716 	blt	zero,r16,40088c8 <___vfiprintf_internal_r+0xc10>
 40082ac:	a085883a 	add	r2,r20,r2
 40082b0:	45c00015 	stw	r23,0(r8)
 40082b4:	45000115 	stw	r20,4(r8)
 40082b8:	d8801c15 	stw	r2,112(sp)
 40082bc:	d9401b15 	stw	r5,108(sp)
 40082c0:	00c001c4 	movi	r3,7
 40082c4:	1941c20e 	bge	r3,r5,40089d0 <___vfiprintf_internal_r+0xd18>
 40082c8:	1002531e 	bne	r2,zero,4008c18 <___vfiprintf_internal_r+0xf60>
 40082cc:	d8001b15 	stw	zero,108(sp)
 40082d0:	8c40010c 	andi	r17,r17,4
 40082d4:	88023226 	beq	r17,zero,4008ba0 <___vfiprintf_internal_r+0xee8>
 40082d8:	d9002517 	ldw	r4,148(sp)
 40082dc:	24e3c83a 	sub	r17,r4,r19
 40082e0:	04432916 	blt	zero,r17,4008f88 <___vfiprintf_internal_r+0x12d0>
 40082e4:	d8802517 	ldw	r2,148(sp)
 40082e8:	14c0010e 	bge	r2,r19,40082f0 <___vfiprintf_internal_r+0x638>
 40082ec:	9805883a 	mov	r2,r19
 40082f0:	d8c02417 	ldw	r3,144(sp)
 40082f4:	1887883a 	add	r3,r3,r2
 40082f8:	d8c02415 	stw	r3,144(sp)
 40082fc:	d8001b15 	stw	zero,108(sp)
 4008300:	d811883a 	mov	r8,sp
 4008304:	003ea006 	br	4007d88 <__alt_mem_onchip_memory+0xfbfffd88>
 4008308:	8c400814 	ori	r17,r17,32
 400830c:	b0c00007 	ldb	r3,0(r22)
 4008310:	003ec606 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008314:	b0c00007 	ldb	r3,0(r22)
 4008318:	00801b04 	movi	r2,108
 400831c:	18832026 	beq	r3,r2,4008fa0 <___vfiprintf_internal_r+0x12e8>
 4008320:	8c400414 	ori	r17,r17,16
 4008324:	003ec106 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008328:	9cc03fcc 	andi	r19,r19,255
 400832c:	b811883a 	mov	r8,r23
 4008330:	9803981e 	bne	r19,zero,4009194 <___vfiprintf_internal_r+0x14dc>
 4008334:	8880080c 	andi	r2,r17,32
 4008338:	1002be26 	beq	r2,zero,4008e34 <___vfiprintf_internal_r+0x117c>
 400833c:	d9002217 	ldw	r4,136(sp)
 4008340:	d9402417 	ldw	r5,144(sp)
 4008344:	20800017 	ldw	r2,0(r4)
 4008348:	2807d7fa 	srai	r3,r5,31
 400834c:	21000104 	addi	r4,r4,4
 4008350:	d9002215 	stw	r4,136(sp)
 4008354:	11400015 	stw	r5,0(r2)
 4008358:	10c00115 	stw	r3,4(r2)
 400835c:	003e8a06 	br	4007d88 <__alt_mem_onchip_memory+0xfbfffd88>
 4008360:	9cc03fcc 	andi	r19,r19,255
 4008364:	b811883a 	mov	r8,r23
 4008368:	9803871e 	bne	r19,zero,4009188 <___vfiprintf_internal_r+0x14d0>
 400836c:	8880080c 	andi	r2,r17,32
 4008370:	10009a26 	beq	r2,zero,40085dc <___vfiprintf_internal_r+0x924>
 4008374:	d9002217 	ldw	r4,136(sp)
 4008378:	d8001d85 	stb	zero,118(sp)
 400837c:	20800204 	addi	r2,r4,8
 4008380:	24c00017 	ldw	r19,0(r4)
 4008384:	25000117 	ldw	r20,4(r4)
 4008388:	8002a416 	blt	r16,zero,4008e1c <___vfiprintf_internal_r+0x1164>
 400838c:	013fdfc4 	movi	r4,-129
 4008390:	9d06b03a 	or	r3,r19,r20
 4008394:	d8802215 	stw	r2,136(sp)
 4008398:	8922703a 	and	r17,r17,r4
 400839c:	18009b26 	beq	r3,zero,400860c <___vfiprintf_internal_r+0x954>
 40083a0:	002b883a 	mov	r21,zero
 40083a4:	ddc01a04 	addi	r23,sp,104
 40083a8:	9806d0fa 	srli	r3,r19,3
 40083ac:	a008977a 	slli	r4,r20,29
 40083b0:	a028d0fa 	srli	r20,r20,3
 40083b4:	9cc001cc 	andi	r19,r19,7
 40083b8:	98800c04 	addi	r2,r19,48
 40083bc:	bdffffc4 	addi	r23,r23,-1
 40083c0:	20e6b03a 	or	r19,r4,r3
 40083c4:	b8800005 	stb	r2,0(r23)
 40083c8:	9d06b03a 	or	r3,r19,r20
 40083cc:	183ff61e 	bne	r3,zero,40083a8 <__alt_mem_onchip_memory+0xfc0003a8>
 40083d0:	88c0004c 	andi	r3,r17,1
 40083d4:	18021f1e 	bne	r3,zero,4008c54 <___vfiprintf_internal_r+0xf9c>
 40083d8:	d9401e17 	ldw	r5,120(sp)
 40083dc:	2de9c83a 	sub	r20,r5,r23
 40083e0:	003f3806 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 40083e4:	9cc03fcc 	andi	r19,r19,255
 40083e8:	b811883a 	mov	r8,r23
 40083ec:	98034f1e 	bne	r19,zero,400912c <___vfiprintf_internal_r+0x1474>
 40083f0:	00810074 	movhi	r2,1025
 40083f4:	10be5904 	addi	r2,r2,-1692
 40083f8:	d8802615 	stw	r2,152(sp)
 40083fc:	8880080c 	andi	r2,r17,32
 4008400:	1000ac26 	beq	r2,zero,40086b4 <___vfiprintf_internal_r+0x9fc>
 4008404:	d9002217 	ldw	r4,136(sp)
 4008408:	24c00017 	ldw	r19,0(r4)
 400840c:	25000117 	ldw	r20,4(r4)
 4008410:	21000204 	addi	r4,r4,8
 4008414:	d9002215 	stw	r4,136(sp)
 4008418:	8880004c 	andi	r2,r17,1
 400841c:	1001e726 	beq	r2,zero,4008bbc <___vfiprintf_internal_r+0xf04>
 4008420:	9d04b03a 	or	r2,r19,r20
 4008424:	10025c1e 	bne	r2,zero,4008d98 <___vfiprintf_internal_r+0x10e0>
 4008428:	d8001d85 	stb	zero,118(sp)
 400842c:	80024416 	blt	r16,zero,4008d40 <___vfiprintf_internal_r+0x1088>
 4008430:	00bfdfc4 	movi	r2,-129
 4008434:	88a2703a 	and	r17,r17,r2
 4008438:	003f1d06 	br	40080b0 <__alt_mem_onchip_memory+0xfc0000b0>
 400843c:	d8c02217 	ldw	r3,136(sp)
 4008440:	04c00044 	movi	r19,1
 4008444:	b811883a 	mov	r8,r23
 4008448:	18800017 	ldw	r2,0(r3)
 400844c:	18c00104 	addi	r3,r3,4
 4008450:	d8001d85 	stb	zero,118(sp)
 4008454:	d8801005 	stb	r2,64(sp)
 4008458:	d8c02215 	stw	r3,136(sp)
 400845c:	9829883a 	mov	r20,r19
 4008460:	ddc01004 	addi	r23,sp,64
 4008464:	0021883a 	mov	r16,zero
 4008468:	003f1e06 	br	40080e4 <__alt_mem_onchip_memory+0xfc0000e4>
 400846c:	9cc03fcc 	andi	r19,r19,255
 4008470:	b811883a 	mov	r8,r23
 4008474:	9803331e 	bne	r19,zero,4009144 <___vfiprintf_internal_r+0x148c>
 4008478:	8880080c 	andi	r2,r17,32
 400847c:	10004826 	beq	r2,zero,40085a0 <___vfiprintf_internal_r+0x8e8>
 4008480:	d9002217 	ldw	r4,136(sp)
 4008484:	20800117 	ldw	r2,4(r4)
 4008488:	24c00017 	ldw	r19,0(r4)
 400848c:	21000204 	addi	r4,r4,8
 4008490:	d9002215 	stw	r4,136(sp)
 4008494:	1029883a 	mov	r20,r2
 4008498:	10024c16 	blt	r2,zero,4008dcc <___vfiprintf_internal_r+0x1114>
 400849c:	dd401d83 	ldbu	r21,118(sp)
 40084a0:	80007116 	blt	r16,zero,4008668 <___vfiprintf_internal_r+0x9b0>
 40084a4:	00ffdfc4 	movi	r3,-129
 40084a8:	9d04b03a 	or	r2,r19,r20
 40084ac:	88e2703a 	and	r17,r17,r3
 40084b0:	1000d126 	beq	r2,zero,40087f8 <___vfiprintf_internal_r+0xb40>
 40084b4:	a0023526 	beq	r20,zero,4008d8c <___vfiprintf_internal_r+0x10d4>
 40084b8:	ddc01a04 	addi	r23,sp,104
 40084bc:	4039883a 	mov	fp,r8
 40084c0:	9809883a 	mov	r4,r19
 40084c4:	a00b883a 	mov	r5,r20
 40084c8:	01800284 	movi	r6,10
 40084cc:	000f883a 	mov	r7,zero
 40084d0:	400a1e40 	call	400a1e4 <__umoddi3>
 40084d4:	10800c04 	addi	r2,r2,48
 40084d8:	bdffffc4 	addi	r23,r23,-1
 40084dc:	9809883a 	mov	r4,r19
 40084e0:	a00b883a 	mov	r5,r20
 40084e4:	b8800005 	stb	r2,0(r23)
 40084e8:	01800284 	movi	r6,10
 40084ec:	000f883a 	mov	r7,zero
 40084f0:	4009be80 	call	4009be8 <__udivdi3>
 40084f4:	1027883a 	mov	r19,r2
 40084f8:	10c4b03a 	or	r2,r2,r3
 40084fc:	1829883a 	mov	r20,r3
 4008500:	103fef1e 	bne	r2,zero,40084c0 <__alt_mem_onchip_memory+0xfc0004c0>
 4008504:	d9001e17 	ldw	r4,120(sp)
 4008508:	e011883a 	mov	r8,fp
 400850c:	25e9c83a 	sub	r20,r4,r23
 4008510:	003eec06 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008514:	d8802307 	ldb	r2,140(sp)
 4008518:	1002361e 	bne	r2,zero,4008df4 <___vfiprintf_internal_r+0x113c>
 400851c:	00c00804 	movi	r3,32
 4008520:	d8c02305 	stb	r3,140(sp)
 4008524:	04c00044 	movi	r19,1
 4008528:	b0c00007 	ldb	r3,0(r22)
 400852c:	003e3f06 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008530:	8c400054 	ori	r17,r17,1
 4008534:	b0c00007 	ldb	r3,0(r22)
 4008538:	003e3c06 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 400853c:	8c402014 	ori	r17,r17,128
 4008540:	b0c00007 	ldb	r3,0(r22)
 4008544:	003e3906 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008548:	dc002715 	stw	r16,156(sp)
 400854c:	d8002515 	stw	zero,148(sp)
 4008550:	1f3ff404 	addi	fp,r3,-48
 4008554:	0009883a 	mov	r4,zero
 4008558:	b021883a 	mov	r16,r22
 400855c:	01400284 	movi	r5,10
 4008560:	400a95c0 	call	400a95c <__mulsi3>
 4008564:	80c00007 	ldb	r3,0(r16)
 4008568:	e089883a 	add	r4,fp,r2
 400856c:	b5800044 	addi	r22,r22,1
 4008570:	1f3ff404 	addi	fp,r3,-48
 4008574:	b021883a 	mov	r16,r22
 4008578:	af3ff82e 	bgeu	r21,fp,400855c <__alt_mem_onchip_memory+0xfc00055c>
 400857c:	d9002515 	stw	r4,148(sp)
 4008580:	dc002717 	ldw	r16,156(sp)
 4008584:	003e2a06 	br	4007e30 <__alt_mem_onchip_memory+0xfbfffe30>
 4008588:	9cc03fcc 	andi	r19,r19,255
 400858c:	b811883a 	mov	r8,r23
 4008590:	9802e91e 	bne	r19,zero,4009138 <___vfiprintf_internal_r+0x1480>
 4008594:	8c400414 	ori	r17,r17,16
 4008598:	8880080c 	andi	r2,r17,32
 400859c:	103fb81e 	bne	r2,zero,4008480 <__alt_mem_onchip_memory+0xfc000480>
 40085a0:	8880040c 	andi	r2,r17,16
 40085a4:	10022e26 	beq	r2,zero,4008e60 <___vfiprintf_internal_r+0x11a8>
 40085a8:	d9402217 	ldw	r5,136(sp)
 40085ac:	2cc00017 	ldw	r19,0(r5)
 40085b0:	29400104 	addi	r5,r5,4
 40085b4:	d9402215 	stw	r5,136(sp)
 40085b8:	9829d7fa 	srai	r20,r19,31
 40085bc:	a005883a 	mov	r2,r20
 40085c0:	003fb506 	br	4008498 <__alt_mem_onchip_memory+0xfc000498>
 40085c4:	9cc03fcc 	andi	r19,r19,255
 40085c8:	b811883a 	mov	r8,r23
 40085cc:	9802fa1e 	bne	r19,zero,40091b8 <___vfiprintf_internal_r+0x1500>
 40085d0:	8c400414 	ori	r17,r17,16
 40085d4:	8880080c 	andi	r2,r17,32
 40085d8:	103f661e 	bne	r2,zero,4008374 <__alt_mem_onchip_memory+0xfc000374>
 40085dc:	8880040c 	andi	r2,r17,16
 40085e0:	10020626 	beq	r2,zero,4008dfc <___vfiprintf_internal_r+0x1144>
 40085e4:	d9402217 	ldw	r5,136(sp)
 40085e8:	d8001d85 	stb	zero,118(sp)
 40085ec:	0029883a 	mov	r20,zero
 40085f0:	28800104 	addi	r2,r5,4
 40085f4:	2cc00017 	ldw	r19,0(r5)
 40085f8:	80020816 	blt	r16,zero,4008e1c <___vfiprintf_internal_r+0x1164>
 40085fc:	00ffdfc4 	movi	r3,-129
 4008600:	d8802215 	stw	r2,136(sp)
 4008604:	88e2703a 	and	r17,r17,r3
 4008608:	983f651e 	bne	r19,zero,40083a0 <__alt_mem_onchip_memory+0xfc0003a0>
 400860c:	002b883a 	mov	r21,zero
 4008610:	8002cf26 	beq	r16,zero,4009150 <___vfiprintf_internal_r+0x1498>
 4008614:	0027883a 	mov	r19,zero
 4008618:	0029883a 	mov	r20,zero
 400861c:	003f6106 	br	40083a4 <__alt_mem_onchip_memory+0xfc0003a4>
 4008620:	9cc03fcc 	andi	r19,r19,255
 4008624:	b811883a 	mov	r8,r23
 4008628:	9802e01e 	bne	r19,zero,40091ac <___vfiprintf_internal_r+0x14f4>
 400862c:	8c400414 	ori	r17,r17,16
 4008630:	8880080c 	andi	r2,r17,32
 4008634:	1000641e 	bne	r2,zero,40087c8 <___vfiprintf_internal_r+0xb10>
 4008638:	8880040c 	andi	r2,r17,16
 400863c:	1001c81e 	bne	r2,zero,4008d60 <___vfiprintf_internal_r+0x10a8>
 4008640:	8880100c 	andi	r2,r17,64
 4008644:	d8001d85 	stb	zero,118(sp)
 4008648:	1002281e 	bne	r2,zero,4008eec <___vfiprintf_internal_r+0x1234>
 400864c:	d9002217 	ldw	r4,136(sp)
 4008650:	0029883a 	mov	r20,zero
 4008654:	20800104 	addi	r2,r4,4
 4008658:	24c00017 	ldw	r19,0(r4)
 400865c:	8001c60e 	bge	r16,zero,4008d78 <___vfiprintf_internal_r+0x10c0>
 4008660:	d8802215 	stw	r2,136(sp)
 4008664:	002b883a 	mov	r21,zero
 4008668:	9d04b03a 	or	r2,r19,r20
 400866c:	103f911e 	bne	r2,zero,40084b4 <__alt_mem_onchip_memory+0xfc0004b4>
 4008670:	00800044 	movi	r2,1
 4008674:	10803fcc 	andi	r2,r2,255
 4008678:	00c00044 	movi	r3,1
 400867c:	10c05f26 	beq	r2,r3,40087fc <___vfiprintf_internal_r+0xb44>
 4008680:	00c00084 	movi	r3,2
 4008684:	10ffe31e 	bne	r2,r3,4008614 <__alt_mem_onchip_memory+0xfc000614>
 4008688:	0027883a 	mov	r19,zero
 400868c:	0029883a 	mov	r20,zero
 4008690:	00015106 	br	4008bd8 <___vfiprintf_internal_r+0xf20>
 4008694:	9cc03fcc 	andi	r19,r19,255
 4008698:	b811883a 	mov	r8,r23
 400869c:	9802c01e 	bne	r19,zero,40091a0 <___vfiprintf_internal_r+0x14e8>
 40086a0:	01410074 	movhi	r5,1025
 40086a4:	297e5404 	addi	r5,r5,-1712
 40086a8:	d9402615 	stw	r5,152(sp)
 40086ac:	8880080c 	andi	r2,r17,32
 40086b0:	103f541e 	bne	r2,zero,4008404 <__alt_mem_onchip_memory+0xfc000404>
 40086b4:	8880040c 	andi	r2,r17,16
 40086b8:	1001f226 	beq	r2,zero,4008e84 <___vfiprintf_internal_r+0x11cc>
 40086bc:	d9402217 	ldw	r5,136(sp)
 40086c0:	0029883a 	mov	r20,zero
 40086c4:	2cc00017 	ldw	r19,0(r5)
 40086c8:	29400104 	addi	r5,r5,4
 40086cc:	d9402215 	stw	r5,136(sp)
 40086d0:	003f5106 	br	4008418 <__alt_mem_onchip_memory+0xfc000418>
 40086d4:	d8c02217 	ldw	r3,136(sp)
 40086d8:	b811883a 	mov	r8,r23
 40086dc:	d8001d85 	stb	zero,118(sp)
 40086e0:	1dc00017 	ldw	r23,0(r3)
 40086e4:	1f000104 	addi	fp,r3,4
 40086e8:	b8025926 	beq	r23,zero,4009050 <___vfiprintf_internal_r+0x1398>
 40086ec:	80023316 	blt	r16,zero,4008fbc <___vfiprintf_internal_r+0x1304>
 40086f0:	800d883a 	mov	r6,r16
 40086f4:	000b883a 	mov	r5,zero
 40086f8:	b809883a 	mov	r4,r23
 40086fc:	da002a15 	stw	r8,168(sp)
 4008700:	4005df80 	call	4005df8 <memchr>
 4008704:	da002a17 	ldw	r8,168(sp)
 4008708:	10026826 	beq	r2,zero,40090ac <___vfiprintf_internal_r+0x13f4>
 400870c:	15e9c83a 	sub	r20,r2,r23
 4008710:	dd401d83 	ldbu	r21,118(sp)
 4008714:	df002215 	stw	fp,136(sp)
 4008718:	0021883a 	mov	r16,zero
 400871c:	003e6906 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008720:	9cc03fcc 	andi	r19,r19,255
 4008724:	b811883a 	mov	r8,r23
 4008728:	983fc126 	beq	r19,zero,4008630 <__alt_mem_onchip_memory+0xfc000630>
 400872c:	d8c02303 	ldbu	r3,140(sp)
 4008730:	d8c01d85 	stb	r3,118(sp)
 4008734:	003fbe06 	br	4008630 <__alt_mem_onchip_memory+0xfc000630>
 4008738:	d9002217 	ldw	r4,136(sp)
 400873c:	d9402217 	ldw	r5,136(sp)
 4008740:	21000017 	ldw	r4,0(r4)
 4008744:	28800104 	addi	r2,r5,4
 4008748:	d9002515 	stw	r4,148(sp)
 400874c:	203e3d16 	blt	r4,zero,4008044 <__alt_mem_onchip_memory+0xfc000044>
 4008750:	d8802215 	stw	r2,136(sp)
 4008754:	b0c00007 	ldb	r3,0(r22)
 4008758:	003db406 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 400875c:	00c00ac4 	movi	r3,43
 4008760:	d8c02305 	stb	r3,140(sp)
 4008764:	04c00044 	movi	r19,1
 4008768:	b0c00007 	ldb	r3,0(r22)
 400876c:	003daf06 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008770:	b0c00007 	ldb	r3,0(r22)
 4008774:	01000a84 	movi	r4,42
 4008778:	b4000044 	addi	r16,r22,1
 400877c:	19025e26 	beq	r3,r4,40090f8 <___vfiprintf_internal_r+0x1440>
 4008780:	1f3ff404 	addi	fp,r3,-48
 4008784:	0009883a 	mov	r4,zero
 4008788:	af025236 	bltu	r21,fp,40090d4 <___vfiprintf_internal_r+0x141c>
 400878c:	01400284 	movi	r5,10
 4008790:	400a95c0 	call	400a95c <__mulsi3>
 4008794:	80c00007 	ldb	r3,0(r16)
 4008798:	1709883a 	add	r4,r2,fp
 400879c:	85800044 	addi	r22,r16,1
 40087a0:	1f3ff404 	addi	fp,r3,-48
 40087a4:	b021883a 	mov	r16,r22
 40087a8:	af3ff82e 	bgeu	r21,fp,400878c <__alt_mem_onchip_memory+0xfc00078c>
 40087ac:	2021883a 	mov	r16,r4
 40087b0:	203d9f0e 	bge	r4,zero,4007e30 <__alt_mem_onchip_memory+0xfbfffe30>
 40087b4:	043fffc4 	movi	r16,-1
 40087b8:	003d9d06 	br	4007e30 <__alt_mem_onchip_memory+0xfbfffe30>
 40087bc:	8c401014 	ori	r17,r17,64
 40087c0:	b0c00007 	ldb	r3,0(r22)
 40087c4:	003d9906 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 40087c8:	d9002217 	ldw	r4,136(sp)
 40087cc:	d8001d85 	stb	zero,118(sp)
 40087d0:	20c00204 	addi	r3,r4,8
 40087d4:	24c00017 	ldw	r19,0(r4)
 40087d8:	25000117 	ldw	r20,4(r4)
 40087dc:	8001e716 	blt	r16,zero,4008f7c <___vfiprintf_internal_r+0x12c4>
 40087e0:	013fdfc4 	movi	r4,-129
 40087e4:	9d04b03a 	or	r2,r19,r20
 40087e8:	d8c02215 	stw	r3,136(sp)
 40087ec:	8922703a 	and	r17,r17,r4
 40087f0:	002b883a 	mov	r21,zero
 40087f4:	103f2f1e 	bne	r2,zero,40084b4 <__alt_mem_onchip_memory+0xfc0004b4>
 40087f8:	803e2f26 	beq	r16,zero,40080b8 <__alt_mem_onchip_memory+0xfc0000b8>
 40087fc:	0027883a 	mov	r19,zero
 4008800:	9cc00c04 	addi	r19,r19,48
 4008804:	dcc019c5 	stb	r19,103(sp)
 4008808:	dd002817 	ldw	r20,160(sp)
 400880c:	ddc019c4 	addi	r23,sp,103
 4008810:	003e2c06 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008814:	9cc03fcc 	andi	r19,r19,255
 4008818:	b811883a 	mov	r8,r23
 400881c:	9802571e 	bne	r19,zero,400917c <___vfiprintf_internal_r+0x14c4>
 4008820:	18005726 	beq	r3,zero,4008980 <___vfiprintf_internal_r+0xcc8>
 4008824:	04c00044 	movi	r19,1
 4008828:	d8c01005 	stb	r3,64(sp)
 400882c:	d8001d85 	stb	zero,118(sp)
 4008830:	9829883a 	mov	r20,r19
 4008834:	ddc01004 	addi	r23,sp,64
 4008838:	003f0a06 	br	4008464 <__alt_mem_onchip_memory+0xfc000464>
 400883c:	d9402017 	ldw	r5,128(sp)
 4008840:	d9002117 	ldw	r4,132(sp)
 4008844:	d9801a04 	addi	r6,sp,104
 4008848:	da802a15 	stw	r10,168(sp)
 400884c:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008850:	da802a17 	ldw	r10,168(sp)
 4008854:	1000501e 	bne	r2,zero,4008998 <___vfiprintf_internal_r+0xce0>
 4008858:	d9801b17 	ldw	r6,108(sp)
 400885c:	d8801c17 	ldw	r2,112(sp)
 4008860:	d811883a 	mov	r8,sp
 4008864:	31000044 	addi	r4,r6,1
 4008868:	003e3606 	br	4008144 <__alt_mem_onchip_memory+0xfc000144>
 400886c:	d9001b17 	ldw	r4,108(sp)
 4008870:	d8801c17 	ldw	r2,112(sp)
 4008874:	21400044 	addi	r5,r4,1
 4008878:	d9801d87 	ldb	r6,118(sp)
 400887c:	303e5226 	beq	r6,zero,40081c8 <__alt_mem_onchip_memory+0xfc0001c8>
 4008880:	01800044 	movi	r6,1
 4008884:	d9001d84 	addi	r4,sp,118
 4008888:	1185883a 	add	r2,r2,r6
 400888c:	41000015 	stw	r4,0(r8)
 4008890:	41800115 	stw	r6,4(r8)
 4008894:	d8801c15 	stw	r2,112(sp)
 4008898:	d9401b15 	stw	r5,108(sp)
 400889c:	010001c4 	movi	r4,7
 40088a0:	2140b00e 	bge	r4,r5,4008b64 <___vfiprintf_internal_r+0xeac>
 40088a4:	1000f61e 	bne	r2,zero,4008c80 <___vfiprintf_internal_r+0xfc8>
 40088a8:	3800b31e 	bne	r7,zero,4008b78 <___vfiprintf_internal_r+0xec0>
 40088ac:	0009883a 	mov	r4,zero
 40088b0:	300b883a 	mov	r5,r6
 40088b4:	d811883a 	mov	r8,sp
 40088b8:	01802004 	movi	r6,128
 40088bc:	19be5226 	beq	r3,r6,4008208 <__alt_mem_onchip_memory+0xfc000208>
 40088c0:	8521c83a 	sub	r16,r16,r20
 40088c4:	043e790e 	bge	zero,r16,40082ac <__alt_mem_onchip_memory+0xfc0002ac>
 40088c8:	05400404 	movi	r21,16
 40088cc:	ac01b00e 	bge	r21,r16,4008f90 <___vfiprintf_internal_r+0x12d8>
 40088d0:	01410074 	movhi	r5,1025
 40088d4:	297eba04 	addi	r5,r5,-1304
 40088d8:	d9402315 	stw	r5,140(sp)
 40088dc:	070001c4 	movi	fp,7
 40088e0:	00000506 	br	40088f8 <___vfiprintf_internal_r+0xc40>
 40088e4:	21400084 	addi	r5,r4,2
 40088e8:	42000204 	addi	r8,r8,8
 40088ec:	1809883a 	mov	r4,r3
 40088f0:	843ffc04 	addi	r16,r16,-16
 40088f4:	ac000d0e 	bge	r21,r16,400892c <___vfiprintf_internal_r+0xc74>
 40088f8:	10800404 	addi	r2,r2,16
 40088fc:	20c00044 	addi	r3,r4,1
 4008900:	44800015 	stw	r18,0(r8)
 4008904:	45400115 	stw	r21,4(r8)
 4008908:	d8801c15 	stw	r2,112(sp)
 400890c:	d8c01b15 	stw	r3,108(sp)
 4008910:	e0fff40e 	bge	fp,r3,40088e4 <__alt_mem_onchip_memory+0xfc0008e4>
 4008914:	1000101e 	bne	r2,zero,4008958 <___vfiprintf_internal_r+0xca0>
 4008918:	843ffc04 	addi	r16,r16,-16
 400891c:	01400044 	movi	r5,1
 4008920:	0009883a 	mov	r4,zero
 4008924:	d811883a 	mov	r8,sp
 4008928:	ac3ff316 	blt	r21,r16,40088f8 <__alt_mem_onchip_memory+0xfc0008f8>
 400892c:	d8c02317 	ldw	r3,140(sp)
 4008930:	1405883a 	add	r2,r2,r16
 4008934:	44000115 	stw	r16,4(r8)
 4008938:	40c00015 	stw	r3,0(r8)
 400893c:	d8801c15 	stw	r2,112(sp)
 4008940:	d9401b15 	stw	r5,108(sp)
 4008944:	00c001c4 	movi	r3,7
 4008948:	19401916 	blt	r3,r5,40089b0 <___vfiprintf_internal_r+0xcf8>
 400894c:	42000204 	addi	r8,r8,8
 4008950:	29400044 	addi	r5,r5,1
 4008954:	003e5506 	br	40082ac <__alt_mem_onchip_memory+0xfc0002ac>
 4008958:	d9402017 	ldw	r5,128(sp)
 400895c:	d9002117 	ldw	r4,132(sp)
 4008960:	d9801a04 	addi	r6,sp,104
 4008964:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008968:	10000b1e 	bne	r2,zero,4008998 <___vfiprintf_internal_r+0xce0>
 400896c:	d9001b17 	ldw	r4,108(sp)
 4008970:	d8801c17 	ldw	r2,112(sp)
 4008974:	d811883a 	mov	r8,sp
 4008978:	21400044 	addi	r5,r4,1
 400897c:	003fdc06 	br	40088f0 <__alt_mem_onchip_memory+0xfc0008f0>
 4008980:	d8801c17 	ldw	r2,112(sp)
 4008984:	10000426 	beq	r2,zero,4008998 <___vfiprintf_internal_r+0xce0>
 4008988:	d9402017 	ldw	r5,128(sp)
 400898c:	d9002117 	ldw	r4,132(sp)
 4008990:	d9801a04 	addi	r6,sp,104
 4008994:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008998:	d9402017 	ldw	r5,128(sp)
 400899c:	2880030b 	ldhu	r2,12(r5)
 40089a0:	1080100c 	andi	r2,r2,64
 40089a4:	10014d1e 	bne	r2,zero,4008edc <___vfiprintf_internal_r+0x1224>
 40089a8:	d8802417 	ldw	r2,144(sp)
 40089ac:	003d9706 	br	400800c <__alt_mem_onchip_memory+0xfc00000c>
 40089b0:	1000d21e 	bne	r2,zero,4008cfc <___vfiprintf_internal_r+0x1044>
 40089b4:	00c00044 	movi	r3,1
 40089b8:	a005883a 	mov	r2,r20
 40089bc:	ddc00015 	stw	r23,0(sp)
 40089c0:	dd000115 	stw	r20,4(sp)
 40089c4:	dd001c15 	stw	r20,112(sp)
 40089c8:	d8c01b15 	stw	r3,108(sp)
 40089cc:	d811883a 	mov	r8,sp
 40089d0:	42000204 	addi	r8,r8,8
 40089d4:	8c40010c 	andi	r17,r17,4
 40089d8:	88004026 	beq	r17,zero,4008adc <___vfiprintf_internal_r+0xe24>
 40089dc:	d9002517 	ldw	r4,148(sp)
 40089e0:	24e3c83a 	sub	r17,r4,r19
 40089e4:	04403d0e 	bge	zero,r17,4008adc <___vfiprintf_internal_r+0xe24>
 40089e8:	04000404 	movi	r16,16
 40089ec:	8441a90e 	bge	r16,r17,4009094 <___vfiprintf_internal_r+0x13dc>
 40089f0:	00c10074 	movhi	r3,1025
 40089f4:	18febe04 	addi	r3,r3,-1288
 40089f8:	d9001b17 	ldw	r4,108(sp)
 40089fc:	d8c02315 	stw	r3,140(sp)
 4008a00:	050001c4 	movi	r20,7
 4008a04:	dd402117 	ldw	r21,132(sp)
 4008a08:	ddc02017 	ldw	r23,128(sp)
 4008a0c:	00000506 	br	4008a24 <___vfiprintf_internal_r+0xd6c>
 4008a10:	21400084 	addi	r5,r4,2
 4008a14:	42000204 	addi	r8,r8,8
 4008a18:	1809883a 	mov	r4,r3
 4008a1c:	8c7ffc04 	addi	r17,r17,-16
 4008a20:	84400f0e 	bge	r16,r17,4008a60 <___vfiprintf_internal_r+0xda8>
 4008a24:	01410074 	movhi	r5,1025
 4008a28:	10800404 	addi	r2,r2,16
 4008a2c:	20c00044 	addi	r3,r4,1
 4008a30:	297ebe04 	addi	r5,r5,-1288
 4008a34:	41400015 	stw	r5,0(r8)
 4008a38:	44000115 	stw	r16,4(r8)
 4008a3c:	d8801c15 	stw	r2,112(sp)
 4008a40:	d8c01b15 	stw	r3,108(sp)
 4008a44:	a0fff20e 	bge	r20,r3,4008a10 <__alt_mem_onchip_memory+0xfc000a10>
 4008a48:	1000141e 	bne	r2,zero,4008a9c <___vfiprintf_internal_r+0xde4>
 4008a4c:	8c7ffc04 	addi	r17,r17,-16
 4008a50:	01400044 	movi	r5,1
 4008a54:	0009883a 	mov	r4,zero
 4008a58:	d811883a 	mov	r8,sp
 4008a5c:	847ff116 	blt	r16,r17,4008a24 <__alt_mem_onchip_memory+0xfc000a24>
 4008a60:	d8c02317 	ldw	r3,140(sp)
 4008a64:	1445883a 	add	r2,r2,r17
 4008a68:	44400115 	stw	r17,4(r8)
 4008a6c:	40c00015 	stw	r3,0(r8)
 4008a70:	d8801c15 	stw	r2,112(sp)
 4008a74:	d9401b15 	stw	r5,108(sp)
 4008a78:	00c001c4 	movi	r3,7
 4008a7c:	1940170e 	bge	r3,r5,4008adc <___vfiprintf_internal_r+0xe24>
 4008a80:	1000101e 	bne	r2,zero,4008ac4 <___vfiprintf_internal_r+0xe0c>
 4008a84:	d8802517 	ldw	r2,148(sp)
 4008a88:	14c11616 	blt	r2,r19,4008ee4 <___vfiprintf_internal_r+0x122c>
 4008a8c:	d9002417 	ldw	r4,144(sp)
 4008a90:	2089883a 	add	r4,r4,r2
 4008a94:	d9002415 	stw	r4,144(sp)
 4008a98:	003e1806 	br	40082fc <__alt_mem_onchip_memory+0xfc0002fc>
 4008a9c:	d9801a04 	addi	r6,sp,104
 4008aa0:	b80b883a 	mov	r5,r23
 4008aa4:	a809883a 	mov	r4,r21
 4008aa8:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008aac:	103fba1e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008ab0:	d9001b17 	ldw	r4,108(sp)
 4008ab4:	d8801c17 	ldw	r2,112(sp)
 4008ab8:	d811883a 	mov	r8,sp
 4008abc:	21400044 	addi	r5,r4,1
 4008ac0:	003fd606 	br	4008a1c <__alt_mem_onchip_memory+0xfc000a1c>
 4008ac4:	d9402017 	ldw	r5,128(sp)
 4008ac8:	d9002117 	ldw	r4,132(sp)
 4008acc:	d9801a04 	addi	r6,sp,104
 4008ad0:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008ad4:	103fb01e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008ad8:	d8801c17 	ldw	r2,112(sp)
 4008adc:	d8c02517 	ldw	r3,148(sp)
 4008ae0:	1cc0010e 	bge	r3,r19,4008ae8 <___vfiprintf_internal_r+0xe30>
 4008ae4:	9807883a 	mov	r3,r19
 4008ae8:	d9002417 	ldw	r4,144(sp)
 4008aec:	20c9883a 	add	r4,r4,r3
 4008af0:	d9002415 	stw	r4,144(sp)
 4008af4:	103e0126 	beq	r2,zero,40082fc <__alt_mem_onchip_memory+0xfc0002fc>
 4008af8:	d9402017 	ldw	r5,128(sp)
 4008afc:	d9002117 	ldw	r4,132(sp)
 4008b00:	d9801a04 	addi	r6,sp,104
 4008b04:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008b08:	103dfc26 	beq	r2,zero,40082fc <__alt_mem_onchip_memory+0xfc0002fc>
 4008b0c:	003fa206 	br	4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008b10:	d9402017 	ldw	r5,128(sp)
 4008b14:	d9002117 	ldw	r4,132(sp)
 4008b18:	d9801a04 	addi	r6,sp,104
 4008b1c:	d9c02b15 	stw	r7,172(sp)
 4008b20:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008b24:	d9c02b17 	ldw	r7,172(sp)
 4008b28:	103f9b1e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008b2c:	d9001b17 	ldw	r4,108(sp)
 4008b30:	d8801c17 	ldw	r2,112(sp)
 4008b34:	d811883a 	mov	r8,sp
 4008b38:	21800044 	addi	r6,r4,1
 4008b3c:	003dbf06 	br	400823c <__alt_mem_onchip_memory+0xfc00023c>
 4008b40:	1000d81e 	bne	r2,zero,4008ea4 <___vfiprintf_internal_r+0x11ec>
 4008b44:	d9001d87 	ldb	r4,118(sp)
 4008b48:	20000a26 	beq	r4,zero,4008b74 <___vfiprintf_internal_r+0xebc>
 4008b4c:	00800044 	movi	r2,1
 4008b50:	d9001d84 	addi	r4,sp,118
 4008b54:	100b883a 	mov	r5,r2
 4008b58:	d9000015 	stw	r4,0(sp)
 4008b5c:	d8800115 	stw	r2,4(sp)
 4008b60:	d811883a 	mov	r8,sp
 4008b64:	2809883a 	mov	r4,r5
 4008b68:	42000204 	addi	r8,r8,8
 4008b6c:	29400044 	addi	r5,r5,1
 4008b70:	003d9506 	br	40081c8 <__alt_mem_onchip_memory+0xfc0001c8>
 4008b74:	3800fd26 	beq	r7,zero,4008f6c <___vfiprintf_internal_r+0x12b4>
 4008b78:	00800084 	movi	r2,2
 4008b7c:	d9001d04 	addi	r4,sp,116
 4008b80:	d9000015 	stw	r4,0(sp)
 4008b84:	d8800115 	stw	r2,4(sp)
 4008b88:	01400044 	movi	r5,1
 4008b8c:	d811883a 	mov	r8,sp
 4008b90:	2809883a 	mov	r4,r5
 4008b94:	42000204 	addi	r8,r8,8
 4008b98:	29400044 	addi	r5,r5,1
 4008b9c:	003f4606 	br	40088b8 <__alt_mem_onchip_memory+0xfc0008b8>
 4008ba0:	d8802517 	ldw	r2,148(sp)
 4008ba4:	14c0010e 	bge	r2,r19,4008bac <___vfiprintf_internal_r+0xef4>
 4008ba8:	9805883a 	mov	r2,r19
 4008bac:	d9402417 	ldw	r5,144(sp)
 4008bb0:	288b883a 	add	r5,r5,r2
 4008bb4:	d9402415 	stw	r5,144(sp)
 4008bb8:	003dd006 	br	40082fc <__alt_mem_onchip_memory+0xfc0002fc>
 4008bbc:	d8001d85 	stb	zero,118(sp)
 4008bc0:	80005d16 	blt	r16,zero,4008d38 <___vfiprintf_internal_r+0x1080>
 4008bc4:	00ffdfc4 	movi	r3,-129
 4008bc8:	9d04b03a 	or	r2,r19,r20
 4008bcc:	88e2703a 	and	r17,r17,r3
 4008bd0:	103d3726 	beq	r2,zero,40080b0 <__alt_mem_onchip_memory+0xfc0000b0>
 4008bd4:	002b883a 	mov	r21,zero
 4008bd8:	d9002617 	ldw	r4,152(sp)
 4008bdc:	ddc01a04 	addi	r23,sp,104
 4008be0:	988003cc 	andi	r2,r19,15
 4008be4:	a006973a 	slli	r3,r20,28
 4008be8:	2085883a 	add	r2,r4,r2
 4008bec:	9826d13a 	srli	r19,r19,4
 4008bf0:	10800003 	ldbu	r2,0(r2)
 4008bf4:	a028d13a 	srli	r20,r20,4
 4008bf8:	bdffffc4 	addi	r23,r23,-1
 4008bfc:	1ce6b03a 	or	r19,r3,r19
 4008c00:	b8800005 	stb	r2,0(r23)
 4008c04:	9d04b03a 	or	r2,r19,r20
 4008c08:	103ff51e 	bne	r2,zero,4008be0 <__alt_mem_onchip_memory+0xfc000be0>
 4008c0c:	d8801e17 	ldw	r2,120(sp)
 4008c10:	15e9c83a 	sub	r20,r2,r23
 4008c14:	003d2b06 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008c18:	d9402017 	ldw	r5,128(sp)
 4008c1c:	d9002117 	ldw	r4,132(sp)
 4008c20:	d9801a04 	addi	r6,sp,104
 4008c24:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008c28:	103f5b1e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008c2c:	d8801c17 	ldw	r2,112(sp)
 4008c30:	d811883a 	mov	r8,sp
 4008c34:	003f6706 	br	40089d4 <__alt_mem_onchip_memory+0xfc0009d4>
 4008c38:	d9402017 	ldw	r5,128(sp)
 4008c3c:	d9002117 	ldw	r4,132(sp)
 4008c40:	d9801a04 	addi	r6,sp,104
 4008c44:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008c48:	103f531e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008c4c:	d811883a 	mov	r8,sp
 4008c50:	003cd906 	br	4007fb8 <__alt_mem_onchip_memory+0xfbffffb8>
 4008c54:	10803fcc 	andi	r2,r2,255
 4008c58:	1080201c 	xori	r2,r2,128
 4008c5c:	10bfe004 	addi	r2,r2,-128
 4008c60:	00c00c04 	movi	r3,48
 4008c64:	10ffe926 	beq	r2,r3,4008c0c <__alt_mem_onchip_memory+0xfc000c0c>
 4008c68:	b8ffffc5 	stb	r3,-1(r23)
 4008c6c:	d8c01e17 	ldw	r3,120(sp)
 4008c70:	b8bfffc4 	addi	r2,r23,-1
 4008c74:	102f883a 	mov	r23,r2
 4008c78:	18a9c83a 	sub	r20,r3,r2
 4008c7c:	003d1106 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008c80:	d9402017 	ldw	r5,128(sp)
 4008c84:	d9002117 	ldw	r4,132(sp)
 4008c88:	d9801a04 	addi	r6,sp,104
 4008c8c:	d8c02a15 	stw	r3,168(sp)
 4008c90:	d9c02b15 	stw	r7,172(sp)
 4008c94:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008c98:	d8c02a17 	ldw	r3,168(sp)
 4008c9c:	d9c02b17 	ldw	r7,172(sp)
 4008ca0:	103f3d1e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008ca4:	d9001b17 	ldw	r4,108(sp)
 4008ca8:	d8801c17 	ldw	r2,112(sp)
 4008cac:	d811883a 	mov	r8,sp
 4008cb0:	21400044 	addi	r5,r4,1
 4008cb4:	003d4406 	br	40081c8 <__alt_mem_onchip_memory+0xfc0001c8>
 4008cb8:	d9402017 	ldw	r5,128(sp)
 4008cbc:	d9002117 	ldw	r4,132(sp)
 4008cc0:	d9801a04 	addi	r6,sp,104
 4008cc4:	d8c02a15 	stw	r3,168(sp)
 4008cc8:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008ccc:	d8c02a17 	ldw	r3,168(sp)
 4008cd0:	103f311e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008cd4:	d9001b17 	ldw	r4,108(sp)
 4008cd8:	d8801c17 	ldw	r2,112(sp)
 4008cdc:	d811883a 	mov	r8,sp
 4008ce0:	21400044 	addi	r5,r4,1
 4008ce4:	003ef406 	br	40088b8 <__alt_mem_onchip_memory+0xfc0008b8>
 4008ce8:	1000bd1e 	bne	r2,zero,4008fe0 <___vfiprintf_internal_r+0x1328>
 4008cec:	01400044 	movi	r5,1
 4008cf0:	0009883a 	mov	r4,zero
 4008cf4:	d811883a 	mov	r8,sp
 4008cf8:	003ef106 	br	40088c0 <__alt_mem_onchip_memory+0xfc0008c0>
 4008cfc:	d9402017 	ldw	r5,128(sp)
 4008d00:	d9002117 	ldw	r4,132(sp)
 4008d04:	d9801a04 	addi	r6,sp,104
 4008d08:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008d0c:	103f221e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008d10:	d9401b17 	ldw	r5,108(sp)
 4008d14:	d8801c17 	ldw	r2,112(sp)
 4008d18:	d811883a 	mov	r8,sp
 4008d1c:	29400044 	addi	r5,r5,1
 4008d20:	003d6206 	br	40082ac <__alt_mem_onchip_memory+0xfc0002ac>
 4008d24:	01410074 	movhi	r5,1025
 4008d28:	297e5904 	addi	r5,r5,-1692
 4008d2c:	d9402615 	stw	r5,152(sp)
 4008d30:	d8c02215 	stw	r3,136(sp)
 4008d34:	1023883a 	mov	r17,r2
 4008d38:	9d04b03a 	or	r2,r19,r20
 4008d3c:	103fa51e 	bne	r2,zero,4008bd4 <__alt_mem_onchip_memory+0xfc000bd4>
 4008d40:	002b883a 	mov	r21,zero
 4008d44:	00800084 	movi	r2,2
 4008d48:	003e4a06 	br	4008674 <__alt_mem_onchip_memory+0xfc000674>
 4008d4c:	01410074 	movhi	r5,1025
 4008d50:	297e5904 	addi	r5,r5,-1692
 4008d54:	002b883a 	mov	r21,zero
 4008d58:	d9402615 	stw	r5,152(sp)
 4008d5c:	003f9e06 	br	4008bd8 <__alt_mem_onchip_memory+0xfc000bd8>
 4008d60:	d9402217 	ldw	r5,136(sp)
 4008d64:	d8001d85 	stb	zero,118(sp)
 4008d68:	0029883a 	mov	r20,zero
 4008d6c:	28800104 	addi	r2,r5,4
 4008d70:	2cc00017 	ldw	r19,0(r5)
 4008d74:	803e3a16 	blt	r16,zero,4008660 <__alt_mem_onchip_memory+0xfc000660>
 4008d78:	00ffdfc4 	movi	r3,-129
 4008d7c:	d8802215 	stw	r2,136(sp)
 4008d80:	88e2703a 	and	r17,r17,r3
 4008d84:	002b883a 	mov	r21,zero
 4008d88:	983e9b26 	beq	r19,zero,40087f8 <__alt_mem_onchip_memory+0xfc0007f8>
 4008d8c:	00800244 	movi	r2,9
 4008d90:	14fdc936 	bltu	r2,r19,40084b8 <__alt_mem_onchip_memory+0xfc0004b8>
 4008d94:	003e9a06 	br	4008800 <__alt_mem_onchip_memory+0xfc000800>
 4008d98:	00800c04 	movi	r2,48
 4008d9c:	d8c01d45 	stb	r3,117(sp)
 4008da0:	d8801d05 	stb	r2,116(sp)
 4008da4:	d8001d85 	stb	zero,118(sp)
 4008da8:	88c00094 	ori	r3,r17,2
 4008dac:	80009c16 	blt	r16,zero,4009020 <___vfiprintf_internal_r+0x1368>
 4008db0:	00bfdfc4 	movi	r2,-129
 4008db4:	88a2703a 	and	r17,r17,r2
 4008db8:	8c400094 	ori	r17,r17,2
 4008dbc:	002b883a 	mov	r21,zero
 4008dc0:	003f8506 	br	4008bd8 <__alt_mem_onchip_memory+0xfc000bd8>
 4008dc4:	b029883a 	mov	r20,r22
 4008dc8:	003c0b06 	br	4007df8 <__alt_mem_onchip_memory+0xfbfffdf8>
 4008dcc:	04e7c83a 	sub	r19,zero,r19
 4008dd0:	05400b44 	movi	r21,45
 4008dd4:	9804c03a 	cmpne	r2,r19,zero
 4008dd8:	0529c83a 	sub	r20,zero,r20
 4008ddc:	dd401d85 	stb	r21,118(sp)
 4008de0:	a0a9c83a 	sub	r20,r20,r2
 4008de4:	80009716 	blt	r16,zero,4009044 <___vfiprintf_internal_r+0x138c>
 4008de8:	00bfdfc4 	movi	r2,-129
 4008dec:	88a2703a 	and	r17,r17,r2
 4008df0:	003db006 	br	40084b4 <__alt_mem_onchip_memory+0xfc0004b4>
 4008df4:	b0c00007 	ldb	r3,0(r22)
 4008df8:	003c0c06 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008dfc:	8880100c 	andi	r2,r17,64
 4008e00:	d8001d85 	stb	zero,118(sp)
 4008e04:	1000461e 	bne	r2,zero,4008f20 <___vfiprintf_internal_r+0x1268>
 4008e08:	d9002217 	ldw	r4,136(sp)
 4008e0c:	0029883a 	mov	r20,zero
 4008e10:	20800104 	addi	r2,r4,4
 4008e14:	24c00017 	ldw	r19,0(r4)
 4008e18:	803df80e 	bge	r16,zero,40085fc <__alt_mem_onchip_memory+0xfc0005fc>
 4008e1c:	9d06b03a 	or	r3,r19,r20
 4008e20:	d8802215 	stw	r2,136(sp)
 4008e24:	183d5e1e 	bne	r3,zero,40083a0 <__alt_mem_onchip_memory+0xfc0003a0>
 4008e28:	002b883a 	mov	r21,zero
 4008e2c:	0005883a 	mov	r2,zero
 4008e30:	003e1006 	br	4008674 <__alt_mem_onchip_memory+0xfc000674>
 4008e34:	8880040c 	andi	r2,r17,16
 4008e38:	1000321e 	bne	r2,zero,4008f04 <___vfiprintf_internal_r+0x124c>
 4008e3c:	8c40100c 	andi	r17,r17,64
 4008e40:	88008d26 	beq	r17,zero,4009078 <___vfiprintf_internal_r+0x13c0>
 4008e44:	d9402217 	ldw	r5,136(sp)
 4008e48:	d8c02417 	ldw	r3,144(sp)
 4008e4c:	28800017 	ldw	r2,0(r5)
 4008e50:	29400104 	addi	r5,r5,4
 4008e54:	d9402215 	stw	r5,136(sp)
 4008e58:	10c0000d 	sth	r3,0(r2)
 4008e5c:	003bca06 	br	4007d88 <__alt_mem_onchip_memory+0xfbfffd88>
 4008e60:	8880100c 	andi	r2,r17,64
 4008e64:	10003a26 	beq	r2,zero,4008f50 <___vfiprintf_internal_r+0x1298>
 4008e68:	d8802217 	ldw	r2,136(sp)
 4008e6c:	14c0000f 	ldh	r19,0(r2)
 4008e70:	10800104 	addi	r2,r2,4
 4008e74:	d8802215 	stw	r2,136(sp)
 4008e78:	9829d7fa 	srai	r20,r19,31
 4008e7c:	a005883a 	mov	r2,r20
 4008e80:	003d8506 	br	4008498 <__alt_mem_onchip_memory+0xfc000498>
 4008e84:	8880100c 	andi	r2,r17,64
 4008e88:	10002b26 	beq	r2,zero,4008f38 <___vfiprintf_internal_r+0x1280>
 4008e8c:	d8802217 	ldw	r2,136(sp)
 4008e90:	0029883a 	mov	r20,zero
 4008e94:	14c0000b 	ldhu	r19,0(r2)
 4008e98:	10800104 	addi	r2,r2,4
 4008e9c:	d8802215 	stw	r2,136(sp)
 4008ea0:	003d5d06 	br	4008418 <__alt_mem_onchip_memory+0xfc000418>
 4008ea4:	d9402017 	ldw	r5,128(sp)
 4008ea8:	d9002117 	ldw	r4,132(sp)
 4008eac:	d9801a04 	addi	r6,sp,104
 4008eb0:	d8c02a15 	stw	r3,168(sp)
 4008eb4:	d9c02b15 	stw	r7,172(sp)
 4008eb8:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008ebc:	d8c02a17 	ldw	r3,168(sp)
 4008ec0:	d9c02b17 	ldw	r7,172(sp)
 4008ec4:	103eb41e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008ec8:	d9001b17 	ldw	r4,108(sp)
 4008ecc:	d8801c17 	ldw	r2,112(sp)
 4008ed0:	d811883a 	mov	r8,sp
 4008ed4:	21400044 	addi	r5,r4,1
 4008ed8:	003e6706 	br	4008878 <__alt_mem_onchip_memory+0xfc000878>
 4008edc:	00bfffc4 	movi	r2,-1
 4008ee0:	003c4a06 	br	400800c <__alt_mem_onchip_memory+0xfc00000c>
 4008ee4:	9805883a 	mov	r2,r19
 4008ee8:	003ee806 	br	4008a8c <__alt_mem_onchip_memory+0xfc000a8c>
 4008eec:	d8c02217 	ldw	r3,136(sp)
 4008ef0:	0029883a 	mov	r20,zero
 4008ef4:	18800104 	addi	r2,r3,4
 4008ef8:	1cc0000b 	ldhu	r19,0(r3)
 4008efc:	803f9e0e 	bge	r16,zero,4008d78 <__alt_mem_onchip_memory+0xfc000d78>
 4008f00:	003dd706 	br	4008660 <__alt_mem_onchip_memory+0xfc000660>
 4008f04:	d8c02217 	ldw	r3,136(sp)
 4008f08:	d9002417 	ldw	r4,144(sp)
 4008f0c:	18800017 	ldw	r2,0(r3)
 4008f10:	18c00104 	addi	r3,r3,4
 4008f14:	d8c02215 	stw	r3,136(sp)
 4008f18:	11000015 	stw	r4,0(r2)
 4008f1c:	003b9a06 	br	4007d88 <__alt_mem_onchip_memory+0xfbfffd88>
 4008f20:	d8c02217 	ldw	r3,136(sp)
 4008f24:	0029883a 	mov	r20,zero
 4008f28:	18800104 	addi	r2,r3,4
 4008f2c:	1cc0000b 	ldhu	r19,0(r3)
 4008f30:	803db20e 	bge	r16,zero,40085fc <__alt_mem_onchip_memory+0xfc0005fc>
 4008f34:	003fb906 	br	4008e1c <__alt_mem_onchip_memory+0xfc000e1c>
 4008f38:	d9002217 	ldw	r4,136(sp)
 4008f3c:	0029883a 	mov	r20,zero
 4008f40:	24c00017 	ldw	r19,0(r4)
 4008f44:	21000104 	addi	r4,r4,4
 4008f48:	d9002215 	stw	r4,136(sp)
 4008f4c:	003d3206 	br	4008418 <__alt_mem_onchip_memory+0xfc000418>
 4008f50:	d8c02217 	ldw	r3,136(sp)
 4008f54:	1cc00017 	ldw	r19,0(r3)
 4008f58:	18c00104 	addi	r3,r3,4
 4008f5c:	d8c02215 	stw	r3,136(sp)
 4008f60:	9829d7fa 	srai	r20,r19,31
 4008f64:	a005883a 	mov	r2,r20
 4008f68:	003d4b06 	br	4008498 <__alt_mem_onchip_memory+0xfc000498>
 4008f6c:	0009883a 	mov	r4,zero
 4008f70:	01400044 	movi	r5,1
 4008f74:	d811883a 	mov	r8,sp
 4008f78:	003e4f06 	br	40088b8 <__alt_mem_onchip_memory+0xfc0008b8>
 4008f7c:	d8c02215 	stw	r3,136(sp)
 4008f80:	002b883a 	mov	r21,zero
 4008f84:	003db806 	br	4008668 <__alt_mem_onchip_memory+0xfc000668>
 4008f88:	d811883a 	mov	r8,sp
 4008f8c:	003e9606 	br	40089e8 <__alt_mem_onchip_memory+0xfc0009e8>
 4008f90:	01010074 	movhi	r4,1025
 4008f94:	213eba04 	addi	r4,r4,-1304
 4008f98:	d9002315 	stw	r4,140(sp)
 4008f9c:	003e6306 	br	400892c <__alt_mem_onchip_memory+0xfc00092c>
 4008fa0:	b0c00043 	ldbu	r3,1(r22)
 4008fa4:	8c400814 	ori	r17,r17,32
 4008fa8:	b5800044 	addi	r22,r22,1
 4008fac:	18c03fcc 	andi	r3,r3,255
 4008fb0:	18c0201c 	xori	r3,r3,128
 4008fb4:	18ffe004 	addi	r3,r3,-128
 4008fb8:	003b9c06 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 4008fbc:	b809883a 	mov	r4,r23
 4008fc0:	da002a15 	stw	r8,168(sp)
 4008fc4:	40004280 	call	4000428 <strlen>
 4008fc8:	1029883a 	mov	r20,r2
 4008fcc:	dd401d83 	ldbu	r21,118(sp)
 4008fd0:	df002215 	stw	fp,136(sp)
 4008fd4:	0021883a 	mov	r16,zero
 4008fd8:	da002a17 	ldw	r8,168(sp)
 4008fdc:	003c3906 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4008fe0:	d9402017 	ldw	r5,128(sp)
 4008fe4:	d9002117 	ldw	r4,132(sp)
 4008fe8:	d9801a04 	addi	r6,sp,104
 4008fec:	4007ba40 	call	4007ba4 <__sprint_r.part.0>
 4008ff0:	103e691e 	bne	r2,zero,4008998 <__alt_mem_onchip_memory+0xfc000998>
 4008ff4:	d9001b17 	ldw	r4,108(sp)
 4008ff8:	d8801c17 	ldw	r2,112(sp)
 4008ffc:	d811883a 	mov	r8,sp
 4009000:	21400044 	addi	r5,r4,1
 4009004:	003e2e06 	br	40088c0 <__alt_mem_onchip_memory+0xfc0008c0>
 4009008:	01010074 	movhi	r4,1025
 400900c:	213ebe04 	addi	r4,r4,-1288
 4009010:	d9002315 	stw	r4,140(sp)
 4009014:	d9001b17 	ldw	r4,108(sp)
 4009018:	21000044 	addi	r4,r4,1
 400901c:	003c5e06 	br	4008198 <__alt_mem_onchip_memory+0xfc000198>
 4009020:	002b883a 	mov	r21,zero
 4009024:	00800084 	movi	r2,2
 4009028:	10803fcc 	andi	r2,r2,255
 400902c:	01000044 	movi	r4,1
 4009030:	11002b26 	beq	r2,r4,40090e0 <___vfiprintf_internal_r+0x1428>
 4009034:	01000084 	movi	r4,2
 4009038:	11002b1e 	bne	r2,r4,40090e8 <___vfiprintf_internal_r+0x1430>
 400903c:	1823883a 	mov	r17,r3
 4009040:	003ee506 	br	4008bd8 <__alt_mem_onchip_memory+0xfc000bd8>
 4009044:	8807883a 	mov	r3,r17
 4009048:	00800044 	movi	r2,1
 400904c:	003ff606 	br	4009028 <__alt_mem_onchip_memory+0xfc001028>
 4009050:	00800184 	movi	r2,6
 4009054:	1400012e 	bgeu	r2,r16,400905c <___vfiprintf_internal_r+0x13a4>
 4009058:	1021883a 	mov	r16,r2
 400905c:	8029883a 	mov	r20,r16
 4009060:	8027883a 	mov	r19,r16
 4009064:	80002216 	blt	r16,zero,40090f0 <___vfiprintf_internal_r+0x1438>
 4009068:	05c10074 	movhi	r23,1025
 400906c:	df002215 	stw	fp,136(sp)
 4009070:	bdfe5e04 	addi	r23,r23,-1672
 4009074:	003cfb06 	br	4008464 <__alt_mem_onchip_memory+0xfc000464>
 4009078:	d9002217 	ldw	r4,136(sp)
 400907c:	d9402417 	ldw	r5,144(sp)
 4009080:	20800017 	ldw	r2,0(r4)
 4009084:	21000104 	addi	r4,r4,4
 4009088:	d9002215 	stw	r4,136(sp)
 400908c:	11400015 	stw	r5,0(r2)
 4009090:	003b3d06 	br	4007d88 <__alt_mem_onchip_memory+0xfbfffd88>
 4009094:	01410074 	movhi	r5,1025
 4009098:	297ebe04 	addi	r5,r5,-1288
 400909c:	d9402315 	stw	r5,140(sp)
 40090a0:	d9401b17 	ldw	r5,108(sp)
 40090a4:	29400044 	addi	r5,r5,1
 40090a8:	003e6d06 	br	4008a60 <__alt_mem_onchip_memory+0xfc000a60>
 40090ac:	8029883a 	mov	r20,r16
 40090b0:	dd401d83 	ldbu	r21,118(sp)
 40090b4:	df002215 	stw	fp,136(sp)
 40090b8:	0021883a 	mov	r16,zero
 40090bc:	003c0106 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 40090c0:	00c10074 	movhi	r3,1025
 40090c4:	18feba04 	addi	r3,r3,-1304
 40090c8:	d8c02315 	stw	r3,140(sp)
 40090cc:	280d883a 	mov	r6,r5
 40090d0:	003c6906 	br	4008278 <__alt_mem_onchip_memory+0xfc000278>
 40090d4:	802d883a 	mov	r22,r16
 40090d8:	0021883a 	mov	r16,zero
 40090dc:	003b5406 	br	4007e30 <__alt_mem_onchip_memory+0xfbfffe30>
 40090e0:	1823883a 	mov	r17,r3
 40090e4:	003cf306 	br	40084b4 <__alt_mem_onchip_memory+0xfc0004b4>
 40090e8:	1823883a 	mov	r17,r3
 40090ec:	003cad06 	br	40083a4 <__alt_mem_onchip_memory+0xfc0003a4>
 40090f0:	0027883a 	mov	r19,zero
 40090f4:	003fdc06 	br	4009068 <__alt_mem_onchip_memory+0xfc001068>
 40090f8:	d9402217 	ldw	r5,136(sp)
 40090fc:	8005883a 	mov	r2,r16
 4009100:	b0c00043 	ldbu	r3,1(r22)
 4009104:	2c000017 	ldw	r16,0(r5)
 4009108:	29000104 	addi	r4,r5,4
 400910c:	d9002215 	stw	r4,136(sp)
 4009110:	102d883a 	mov	r22,r2
 4009114:	803fa50e 	bge	r16,zero,4008fac <__alt_mem_onchip_memory+0xfc000fac>
 4009118:	18c03fcc 	andi	r3,r3,255
 400911c:	18c0201c 	xori	r3,r3,128
 4009120:	043fffc4 	movi	r16,-1
 4009124:	18ffe004 	addi	r3,r3,-128
 4009128:	003b4006 	br	4007e2c <__alt_mem_onchip_memory+0xfbfffe2c>
 400912c:	d9402303 	ldbu	r5,140(sp)
 4009130:	d9401d85 	stb	r5,118(sp)
 4009134:	003cae06 	br	40083f0 <__alt_mem_onchip_memory+0xfc0003f0>
 4009138:	d8c02303 	ldbu	r3,140(sp)
 400913c:	d8c01d85 	stb	r3,118(sp)
 4009140:	003d1406 	br	4008594 <__alt_mem_onchip_memory+0xfc000594>
 4009144:	d8c02303 	ldbu	r3,140(sp)
 4009148:	d8c01d85 	stb	r3,118(sp)
 400914c:	003cca06 	br	4008478 <__alt_mem_onchip_memory+0xfc000478>
 4009150:	8880004c 	andi	r2,r17,1
 4009154:	002b883a 	mov	r21,zero
 4009158:	10000526 	beq	r2,zero,4009170 <___vfiprintf_internal_r+0x14b8>
 400915c:	00800c04 	movi	r2,48
 4009160:	d88019c5 	stb	r2,103(sp)
 4009164:	dd002817 	ldw	r20,160(sp)
 4009168:	ddc019c4 	addi	r23,sp,103
 400916c:	003bd506 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 4009170:	0029883a 	mov	r20,zero
 4009174:	ddc01a04 	addi	r23,sp,104
 4009178:	003bd206 	br	40080c4 <__alt_mem_onchip_memory+0xfc0000c4>
 400917c:	d9002303 	ldbu	r4,140(sp)
 4009180:	d9001d85 	stb	r4,118(sp)
 4009184:	003da606 	br	4008820 <__alt_mem_onchip_memory+0xfc000820>
 4009188:	d8c02303 	ldbu	r3,140(sp)
 400918c:	d8c01d85 	stb	r3,118(sp)
 4009190:	003c7606 	br	400836c <__alt_mem_onchip_memory+0xfc00036c>
 4009194:	d8c02303 	ldbu	r3,140(sp)
 4009198:	d8c01d85 	stb	r3,118(sp)
 400919c:	003c6506 	br	4008334 <__alt_mem_onchip_memory+0xfc000334>
 40091a0:	d9002303 	ldbu	r4,140(sp)
 40091a4:	d9001d85 	stb	r4,118(sp)
 40091a8:	003d3d06 	br	40086a0 <__alt_mem_onchip_memory+0xfc0006a0>
 40091ac:	d8c02303 	ldbu	r3,140(sp)
 40091b0:	d8c01d85 	stb	r3,118(sp)
 40091b4:	003d1d06 	br	400862c <__alt_mem_onchip_memory+0xfc00062c>
 40091b8:	d8c02303 	ldbu	r3,140(sp)
 40091bc:	d8c01d85 	stb	r3,118(sp)
 40091c0:	003d0306 	br	40085d0 <__alt_mem_onchip_memory+0xfc0005d0>

040091c4 <__vfiprintf_internal>:
 40091c4:	00810074 	movhi	r2,1025
 40091c8:	1085b904 	addi	r2,r2,5860
 40091cc:	300f883a 	mov	r7,r6
 40091d0:	280d883a 	mov	r6,r5
 40091d4:	200b883a 	mov	r5,r4
 40091d8:	11000017 	ldw	r4,0(r2)
 40091dc:	4007cb81 	jmpi	4007cb8 <___vfiprintf_internal_r>

040091e0 <__sbprintf>:
 40091e0:	2880030b 	ldhu	r2,12(r5)
 40091e4:	2ac01917 	ldw	r11,100(r5)
 40091e8:	2a80038b 	ldhu	r10,14(r5)
 40091ec:	2a400717 	ldw	r9,28(r5)
 40091f0:	2a000917 	ldw	r8,36(r5)
 40091f4:	defee204 	addi	sp,sp,-1144
 40091f8:	00c10004 	movi	r3,1024
 40091fc:	dc011a15 	stw	r16,1128(sp)
 4009200:	10bfff4c 	andi	r2,r2,65533
 4009204:	2821883a 	mov	r16,r5
 4009208:	d8cb883a 	add	r5,sp,r3
 400920c:	dc811c15 	stw	r18,1136(sp)
 4009210:	dc411b15 	stw	r17,1132(sp)
 4009214:	dfc11d15 	stw	ra,1140(sp)
 4009218:	2025883a 	mov	r18,r4
 400921c:	d881030d 	sth	r2,1036(sp)
 4009220:	dac11915 	stw	r11,1124(sp)
 4009224:	da81038d 	sth	r10,1038(sp)
 4009228:	da410715 	stw	r9,1052(sp)
 400922c:	da010915 	stw	r8,1060(sp)
 4009230:	dec10015 	stw	sp,1024(sp)
 4009234:	dec10415 	stw	sp,1040(sp)
 4009238:	d8c10215 	stw	r3,1032(sp)
 400923c:	d8c10515 	stw	r3,1044(sp)
 4009240:	d8010615 	stw	zero,1048(sp)
 4009244:	4007cb80 	call	4007cb8 <___vfiprintf_internal_r>
 4009248:	1023883a 	mov	r17,r2
 400924c:	10000416 	blt	r2,zero,4009260 <__sbprintf+0x80>
 4009250:	d9410004 	addi	r5,sp,1024
 4009254:	9009883a 	mov	r4,r18
 4009258:	40044940 	call	4004494 <_fflush_r>
 400925c:	10000d1e 	bne	r2,zero,4009294 <__sbprintf+0xb4>
 4009260:	d881030b 	ldhu	r2,1036(sp)
 4009264:	1080100c 	andi	r2,r2,64
 4009268:	10000326 	beq	r2,zero,4009278 <__sbprintf+0x98>
 400926c:	8080030b 	ldhu	r2,12(r16)
 4009270:	10801014 	ori	r2,r2,64
 4009274:	8080030d 	sth	r2,12(r16)
 4009278:	8805883a 	mov	r2,r17
 400927c:	dfc11d17 	ldw	ra,1140(sp)
 4009280:	dc811c17 	ldw	r18,1136(sp)
 4009284:	dc411b17 	ldw	r17,1132(sp)
 4009288:	dc011a17 	ldw	r16,1128(sp)
 400928c:	dec11e04 	addi	sp,sp,1144
 4009290:	f800283a 	ret
 4009294:	047fffc4 	movi	r17,-1
 4009298:	003ff106 	br	4009260 <__alt_mem_onchip_memory+0xfc001260>

0400929c <_write_r>:
 400929c:	defffd04 	addi	sp,sp,-12
 40092a0:	2805883a 	mov	r2,r5
 40092a4:	dc000015 	stw	r16,0(sp)
 40092a8:	04010074 	movhi	r16,1025
 40092ac:	dc400115 	stw	r17,4(sp)
 40092b0:	300b883a 	mov	r5,r6
 40092b4:	840c8904 	addi	r16,r16,12836
 40092b8:	2023883a 	mov	r17,r4
 40092bc:	380d883a 	mov	r6,r7
 40092c0:	1009883a 	mov	r4,r2
 40092c4:	dfc00215 	stw	ra,8(sp)
 40092c8:	80000015 	stw	zero,0(r16)
 40092cc:	400dabc0 	call	400dabc <write>
 40092d0:	00ffffc4 	movi	r3,-1
 40092d4:	10c00526 	beq	r2,r3,40092ec <_write_r+0x50>
 40092d8:	dfc00217 	ldw	ra,8(sp)
 40092dc:	dc400117 	ldw	r17,4(sp)
 40092e0:	dc000017 	ldw	r16,0(sp)
 40092e4:	dec00304 	addi	sp,sp,12
 40092e8:	f800283a 	ret
 40092ec:	80c00017 	ldw	r3,0(r16)
 40092f0:	183ff926 	beq	r3,zero,40092d8 <__alt_mem_onchip_memory+0xfc0012d8>
 40092f4:	88c00015 	stw	r3,0(r17)
 40092f8:	003ff706 	br	40092d8 <__alt_mem_onchip_memory+0xfc0012d8>

040092fc <_close_r>:
 40092fc:	defffd04 	addi	sp,sp,-12
 4009300:	dc000015 	stw	r16,0(sp)
 4009304:	04010074 	movhi	r16,1025
 4009308:	dc400115 	stw	r17,4(sp)
 400930c:	840c8904 	addi	r16,r16,12836
 4009310:	2023883a 	mov	r17,r4
 4009314:	2809883a 	mov	r4,r5
 4009318:	dfc00215 	stw	ra,8(sp)
 400931c:	80000015 	stw	zero,0(r16)
 4009320:	400d2640 	call	400d264 <close>
 4009324:	00ffffc4 	movi	r3,-1
 4009328:	10c00526 	beq	r2,r3,4009340 <_close_r+0x44>
 400932c:	dfc00217 	ldw	ra,8(sp)
 4009330:	dc400117 	ldw	r17,4(sp)
 4009334:	dc000017 	ldw	r16,0(sp)
 4009338:	dec00304 	addi	sp,sp,12
 400933c:	f800283a 	ret
 4009340:	80c00017 	ldw	r3,0(r16)
 4009344:	183ff926 	beq	r3,zero,400932c <__alt_mem_onchip_memory+0xfc00132c>
 4009348:	88c00015 	stw	r3,0(r17)
 400934c:	003ff706 	br	400932c <__alt_mem_onchip_memory+0xfc00132c>

04009350 <_calloc_r>:
 4009350:	defffe04 	addi	sp,sp,-8
 4009354:	2805883a 	mov	r2,r5
 4009358:	dc000015 	stw	r16,0(sp)
 400935c:	300b883a 	mov	r5,r6
 4009360:	2021883a 	mov	r16,r4
 4009364:	1009883a 	mov	r4,r2
 4009368:	dfc00115 	stw	ra,4(sp)
 400936c:	400a95c0 	call	400a95c <__mulsi3>
 4009370:	100b883a 	mov	r5,r2
 4009374:	8009883a 	mov	r4,r16
 4009378:	40055ec0 	call	40055ec <_malloc_r>
 400937c:	10002926 	beq	r2,zero,4009424 <_calloc_r+0xd4>
 4009380:	11bfff17 	ldw	r6,-4(r2)
 4009384:	1021883a 	mov	r16,r2
 4009388:	00bfff04 	movi	r2,-4
 400938c:	308c703a 	and	r6,r6,r2
 4009390:	00c00904 	movi	r3,36
 4009394:	308d883a 	add	r6,r6,r2
 4009398:	19801636 	bltu	r3,r6,40093f4 <_calloc_r+0xa4>
 400939c:	008004c4 	movi	r2,19
 40093a0:	11800b2e 	bgeu	r2,r6,40093d0 <_calloc_r+0x80>
 40093a4:	80000015 	stw	zero,0(r16)
 40093a8:	80000115 	stw	zero,4(r16)
 40093ac:	008006c4 	movi	r2,27
 40093b0:	11801a2e 	bgeu	r2,r6,400941c <_calloc_r+0xcc>
 40093b4:	80000215 	stw	zero,8(r16)
 40093b8:	80000315 	stw	zero,12(r16)
 40093bc:	30c0151e 	bne	r6,r3,4009414 <_calloc_r+0xc4>
 40093c0:	80000415 	stw	zero,16(r16)
 40093c4:	80800604 	addi	r2,r16,24
 40093c8:	80000515 	stw	zero,20(r16)
 40093cc:	00000106 	br	40093d4 <_calloc_r+0x84>
 40093d0:	8005883a 	mov	r2,r16
 40093d4:	10000015 	stw	zero,0(r2)
 40093d8:	10000115 	stw	zero,4(r2)
 40093dc:	10000215 	stw	zero,8(r2)
 40093e0:	8005883a 	mov	r2,r16
 40093e4:	dfc00117 	ldw	ra,4(sp)
 40093e8:	dc000017 	ldw	r16,0(sp)
 40093ec:	dec00204 	addi	sp,sp,8
 40093f0:	f800283a 	ret
 40093f4:	000b883a 	mov	r5,zero
 40093f8:	8009883a 	mov	r4,r16
 40093fc:	40061800 	call	4006180 <memset>
 4009400:	8005883a 	mov	r2,r16
 4009404:	dfc00117 	ldw	ra,4(sp)
 4009408:	dc000017 	ldw	r16,0(sp)
 400940c:	dec00204 	addi	sp,sp,8
 4009410:	f800283a 	ret
 4009414:	80800404 	addi	r2,r16,16
 4009418:	003fee06 	br	40093d4 <__alt_mem_onchip_memory+0xfc0013d4>
 400941c:	80800204 	addi	r2,r16,8
 4009420:	003fec06 	br	40093d4 <__alt_mem_onchip_memory+0xfc0013d4>
 4009424:	0005883a 	mov	r2,zero
 4009428:	003fee06 	br	40093e4 <__alt_mem_onchip_memory+0xfc0013e4>

0400942c <_fclose_r>:
 400942c:	28003926 	beq	r5,zero,4009514 <_fclose_r+0xe8>
 4009430:	defffc04 	addi	sp,sp,-16
 4009434:	dc400115 	stw	r17,4(sp)
 4009438:	dc000015 	stw	r16,0(sp)
 400943c:	dfc00315 	stw	ra,12(sp)
 4009440:	dc800215 	stw	r18,8(sp)
 4009444:	2023883a 	mov	r17,r4
 4009448:	2821883a 	mov	r16,r5
 400944c:	20000226 	beq	r4,zero,4009458 <_fclose_r+0x2c>
 4009450:	20800e17 	ldw	r2,56(r4)
 4009454:	10002726 	beq	r2,zero,40094f4 <_fclose_r+0xc8>
 4009458:	8080030f 	ldh	r2,12(r16)
 400945c:	1000071e 	bne	r2,zero,400947c <_fclose_r+0x50>
 4009460:	0005883a 	mov	r2,zero
 4009464:	dfc00317 	ldw	ra,12(sp)
 4009468:	dc800217 	ldw	r18,8(sp)
 400946c:	dc400117 	ldw	r17,4(sp)
 4009470:	dc000017 	ldw	r16,0(sp)
 4009474:	dec00404 	addi	sp,sp,16
 4009478:	f800283a 	ret
 400947c:	800b883a 	mov	r5,r16
 4009480:	8809883a 	mov	r4,r17
 4009484:	40042780 	call	4004278 <__sflush_r>
 4009488:	1025883a 	mov	r18,r2
 400948c:	80800b17 	ldw	r2,44(r16)
 4009490:	10000426 	beq	r2,zero,40094a4 <_fclose_r+0x78>
 4009494:	81400717 	ldw	r5,28(r16)
 4009498:	8809883a 	mov	r4,r17
 400949c:	103ee83a 	callr	r2
 40094a0:	10001616 	blt	r2,zero,40094fc <_fclose_r+0xd0>
 40094a4:	8080030b 	ldhu	r2,12(r16)
 40094a8:	1080200c 	andi	r2,r2,128
 40094ac:	1000151e 	bne	r2,zero,4009504 <_fclose_r+0xd8>
 40094b0:	81400c17 	ldw	r5,48(r16)
 40094b4:	28000526 	beq	r5,zero,40094cc <_fclose_r+0xa0>
 40094b8:	80801004 	addi	r2,r16,64
 40094bc:	28800226 	beq	r5,r2,40094c8 <_fclose_r+0x9c>
 40094c0:	8809883a 	mov	r4,r17
 40094c4:	40049f40 	call	40049f4 <_free_r>
 40094c8:	80000c15 	stw	zero,48(r16)
 40094cc:	81401117 	ldw	r5,68(r16)
 40094d0:	28000326 	beq	r5,zero,40094e0 <_fclose_r+0xb4>
 40094d4:	8809883a 	mov	r4,r17
 40094d8:	40049f40 	call	40049f4 <_free_r>
 40094dc:	80001115 	stw	zero,68(r16)
 40094e0:	40048900 	call	4004890 <__sfp_lock_acquire>
 40094e4:	8000030d 	sth	zero,12(r16)
 40094e8:	40048940 	call	4004894 <__sfp_lock_release>
 40094ec:	9005883a 	mov	r2,r18
 40094f0:	003fdc06 	br	4009464 <__alt_mem_onchip_memory+0xfc001464>
 40094f4:	40048800 	call	4004880 <__sinit>
 40094f8:	003fd706 	br	4009458 <__alt_mem_onchip_memory+0xfc001458>
 40094fc:	04bfffc4 	movi	r18,-1
 4009500:	003fe806 	br	40094a4 <__alt_mem_onchip_memory+0xfc0014a4>
 4009504:	81400417 	ldw	r5,16(r16)
 4009508:	8809883a 	mov	r4,r17
 400950c:	40049f40 	call	40049f4 <_free_r>
 4009510:	003fe706 	br	40094b0 <__alt_mem_onchip_memory+0xfc0014b0>
 4009514:	0005883a 	mov	r2,zero
 4009518:	f800283a 	ret

0400951c <fclose>:
 400951c:	00810074 	movhi	r2,1025
 4009520:	1085b904 	addi	r2,r2,5860
 4009524:	200b883a 	mov	r5,r4
 4009528:	11000017 	ldw	r4,0(r2)
 400952c:	400942c1 	jmpi	400942c <_fclose_r>

04009530 <__fputwc>:
 4009530:	defff804 	addi	sp,sp,-32
 4009534:	dcc00415 	stw	r19,16(sp)
 4009538:	dc800315 	stw	r18,12(sp)
 400953c:	dc000115 	stw	r16,4(sp)
 4009540:	dfc00715 	stw	ra,28(sp)
 4009544:	dd400615 	stw	r21,24(sp)
 4009548:	dd000515 	stw	r20,20(sp)
 400954c:	dc400215 	stw	r17,8(sp)
 4009550:	2027883a 	mov	r19,r4
 4009554:	2825883a 	mov	r18,r5
 4009558:	3021883a 	mov	r16,r6
 400955c:	40053dc0 	call	40053dc <__locale_mb_cur_max>
 4009560:	00c00044 	movi	r3,1
 4009564:	10c03e26 	beq	r2,r3,4009660 <__fputwc+0x130>
 4009568:	81c01704 	addi	r7,r16,92
 400956c:	900d883a 	mov	r6,r18
 4009570:	d80b883a 	mov	r5,sp
 4009574:	9809883a 	mov	r4,r19
 4009578:	4009a000 	call	4009a00 <_wcrtomb_r>
 400957c:	1029883a 	mov	r20,r2
 4009580:	00bfffc4 	movi	r2,-1
 4009584:	a0802026 	beq	r20,r2,4009608 <__fputwc+0xd8>
 4009588:	d9400003 	ldbu	r5,0(sp)
 400958c:	a0001c26 	beq	r20,zero,4009600 <__fputwc+0xd0>
 4009590:	0023883a 	mov	r17,zero
 4009594:	05400284 	movi	r21,10
 4009598:	00000906 	br	40095c0 <__fputwc+0x90>
 400959c:	80800017 	ldw	r2,0(r16)
 40095a0:	11400005 	stb	r5,0(r2)
 40095a4:	80c00017 	ldw	r3,0(r16)
 40095a8:	18c00044 	addi	r3,r3,1
 40095ac:	80c00015 	stw	r3,0(r16)
 40095b0:	8c400044 	addi	r17,r17,1
 40095b4:	dc45883a 	add	r2,sp,r17
 40095b8:	8d00112e 	bgeu	r17,r20,4009600 <__fputwc+0xd0>
 40095bc:	11400003 	ldbu	r5,0(r2)
 40095c0:	80c00217 	ldw	r3,8(r16)
 40095c4:	18ffffc4 	addi	r3,r3,-1
 40095c8:	80c00215 	stw	r3,8(r16)
 40095cc:	183ff30e 	bge	r3,zero,400959c <__alt_mem_onchip_memory+0xfc00159c>
 40095d0:	80800617 	ldw	r2,24(r16)
 40095d4:	18801916 	blt	r3,r2,400963c <__fputwc+0x10c>
 40095d8:	80800017 	ldw	r2,0(r16)
 40095dc:	11400005 	stb	r5,0(r2)
 40095e0:	80800017 	ldw	r2,0(r16)
 40095e4:	10c00003 	ldbu	r3,0(r2)
 40095e8:	10800044 	addi	r2,r2,1
 40095ec:	1d402326 	beq	r3,r21,400967c <__fputwc+0x14c>
 40095f0:	80800015 	stw	r2,0(r16)
 40095f4:	8c400044 	addi	r17,r17,1
 40095f8:	dc45883a 	add	r2,sp,r17
 40095fc:	8d3fef36 	bltu	r17,r20,40095bc <__alt_mem_onchip_memory+0xfc0015bc>
 4009600:	9005883a 	mov	r2,r18
 4009604:	00000406 	br	4009618 <__fputwc+0xe8>
 4009608:	80c0030b 	ldhu	r3,12(r16)
 400960c:	a005883a 	mov	r2,r20
 4009610:	18c01014 	ori	r3,r3,64
 4009614:	80c0030d 	sth	r3,12(r16)
 4009618:	dfc00717 	ldw	ra,28(sp)
 400961c:	dd400617 	ldw	r21,24(sp)
 4009620:	dd000517 	ldw	r20,20(sp)
 4009624:	dcc00417 	ldw	r19,16(sp)
 4009628:	dc800317 	ldw	r18,12(sp)
 400962c:	dc400217 	ldw	r17,8(sp)
 4009630:	dc000117 	ldw	r16,4(sp)
 4009634:	dec00804 	addi	sp,sp,32
 4009638:	f800283a 	ret
 400963c:	800d883a 	mov	r6,r16
 4009640:	29403fcc 	andi	r5,r5,255
 4009644:	9809883a 	mov	r4,r19
 4009648:	40098a80 	call	40098a8 <__swbuf_r>
 400964c:	10bfffe0 	cmpeqi	r2,r2,-1
 4009650:	10803fcc 	andi	r2,r2,255
 4009654:	103fd626 	beq	r2,zero,40095b0 <__alt_mem_onchip_memory+0xfc0015b0>
 4009658:	00bfffc4 	movi	r2,-1
 400965c:	003fee06 	br	4009618 <__alt_mem_onchip_memory+0xfc001618>
 4009660:	90ffffc4 	addi	r3,r18,-1
 4009664:	01003f84 	movi	r4,254
 4009668:	20ffbf36 	bltu	r4,r3,4009568 <__alt_mem_onchip_memory+0xfc001568>
 400966c:	900b883a 	mov	r5,r18
 4009670:	dc800005 	stb	r18,0(sp)
 4009674:	1029883a 	mov	r20,r2
 4009678:	003fc506 	br	4009590 <__alt_mem_onchip_memory+0xfc001590>
 400967c:	800d883a 	mov	r6,r16
 4009680:	a80b883a 	mov	r5,r21
 4009684:	9809883a 	mov	r4,r19
 4009688:	40098a80 	call	40098a8 <__swbuf_r>
 400968c:	10bfffe0 	cmpeqi	r2,r2,-1
 4009690:	003fef06 	br	4009650 <__alt_mem_onchip_memory+0xfc001650>

04009694 <_fputwc_r>:
 4009694:	3080030b 	ldhu	r2,12(r6)
 4009698:	10c8000c 	andi	r3,r2,8192
 400969c:	1800051e 	bne	r3,zero,40096b4 <_fputwc_r+0x20>
 40096a0:	30c01917 	ldw	r3,100(r6)
 40096a4:	10880014 	ori	r2,r2,8192
 40096a8:	3080030d 	sth	r2,12(r6)
 40096ac:	18880014 	ori	r2,r3,8192
 40096b0:	30801915 	stw	r2,100(r6)
 40096b4:	40095301 	jmpi	4009530 <__fputwc>

040096b8 <fputwc>:
 40096b8:	00810074 	movhi	r2,1025
 40096bc:	defffc04 	addi	sp,sp,-16
 40096c0:	1085b904 	addi	r2,r2,5860
 40096c4:	dc000115 	stw	r16,4(sp)
 40096c8:	14000017 	ldw	r16,0(r2)
 40096cc:	dc400215 	stw	r17,8(sp)
 40096d0:	dfc00315 	stw	ra,12(sp)
 40096d4:	2023883a 	mov	r17,r4
 40096d8:	80000226 	beq	r16,zero,40096e4 <fputwc+0x2c>
 40096dc:	80800e17 	ldw	r2,56(r16)
 40096e0:	10001026 	beq	r2,zero,4009724 <fputwc+0x6c>
 40096e4:	2880030b 	ldhu	r2,12(r5)
 40096e8:	10c8000c 	andi	r3,r2,8192
 40096ec:	1800051e 	bne	r3,zero,4009704 <fputwc+0x4c>
 40096f0:	28c01917 	ldw	r3,100(r5)
 40096f4:	10880014 	ori	r2,r2,8192
 40096f8:	2880030d 	sth	r2,12(r5)
 40096fc:	18880014 	ori	r2,r3,8192
 4009700:	28801915 	stw	r2,100(r5)
 4009704:	280d883a 	mov	r6,r5
 4009708:	8009883a 	mov	r4,r16
 400970c:	880b883a 	mov	r5,r17
 4009710:	dfc00317 	ldw	ra,12(sp)
 4009714:	dc400217 	ldw	r17,8(sp)
 4009718:	dc000117 	ldw	r16,4(sp)
 400971c:	dec00404 	addi	sp,sp,16
 4009720:	40095301 	jmpi	4009530 <__fputwc>
 4009724:	8009883a 	mov	r4,r16
 4009728:	d9400015 	stw	r5,0(sp)
 400972c:	40048800 	call	4004880 <__sinit>
 4009730:	d9400017 	ldw	r5,0(sp)
 4009734:	003feb06 	br	40096e4 <__alt_mem_onchip_memory+0xfc0016e4>

04009738 <_fstat_r>:
 4009738:	defffd04 	addi	sp,sp,-12
 400973c:	2805883a 	mov	r2,r5
 4009740:	dc000015 	stw	r16,0(sp)
 4009744:	04010074 	movhi	r16,1025
 4009748:	dc400115 	stw	r17,4(sp)
 400974c:	840c8904 	addi	r16,r16,12836
 4009750:	2023883a 	mov	r17,r4
 4009754:	300b883a 	mov	r5,r6
 4009758:	1009883a 	mov	r4,r2
 400975c:	dfc00215 	stw	ra,8(sp)
 4009760:	80000015 	stw	zero,0(r16)
 4009764:	400d3a40 	call	400d3a4 <fstat>
 4009768:	00ffffc4 	movi	r3,-1
 400976c:	10c00526 	beq	r2,r3,4009784 <_fstat_r+0x4c>
 4009770:	dfc00217 	ldw	ra,8(sp)
 4009774:	dc400117 	ldw	r17,4(sp)
 4009778:	dc000017 	ldw	r16,0(sp)
 400977c:	dec00304 	addi	sp,sp,12
 4009780:	f800283a 	ret
 4009784:	80c00017 	ldw	r3,0(r16)
 4009788:	183ff926 	beq	r3,zero,4009770 <__alt_mem_onchip_memory+0xfc001770>
 400978c:	88c00015 	stw	r3,0(r17)
 4009790:	003ff706 	br	4009770 <__alt_mem_onchip_memory+0xfc001770>

04009794 <_isatty_r>:
 4009794:	defffd04 	addi	sp,sp,-12
 4009798:	dc000015 	stw	r16,0(sp)
 400979c:	04010074 	movhi	r16,1025
 40097a0:	dc400115 	stw	r17,4(sp)
 40097a4:	840c8904 	addi	r16,r16,12836
 40097a8:	2023883a 	mov	r17,r4
 40097ac:	2809883a 	mov	r4,r5
 40097b0:	dfc00215 	stw	ra,8(sp)
 40097b4:	80000015 	stw	zero,0(r16)
 40097b8:	400d4980 	call	400d498 <isatty>
 40097bc:	00ffffc4 	movi	r3,-1
 40097c0:	10c00526 	beq	r2,r3,40097d8 <_isatty_r+0x44>
 40097c4:	dfc00217 	ldw	ra,8(sp)
 40097c8:	dc400117 	ldw	r17,4(sp)
 40097cc:	dc000017 	ldw	r16,0(sp)
 40097d0:	dec00304 	addi	sp,sp,12
 40097d4:	f800283a 	ret
 40097d8:	80c00017 	ldw	r3,0(r16)
 40097dc:	183ff926 	beq	r3,zero,40097c4 <__alt_mem_onchip_memory+0xfc0017c4>
 40097e0:	88c00015 	stw	r3,0(r17)
 40097e4:	003ff706 	br	40097c4 <__alt_mem_onchip_memory+0xfc0017c4>

040097e8 <_lseek_r>:
 40097e8:	defffd04 	addi	sp,sp,-12
 40097ec:	2805883a 	mov	r2,r5
 40097f0:	dc000015 	stw	r16,0(sp)
 40097f4:	04010074 	movhi	r16,1025
 40097f8:	dc400115 	stw	r17,4(sp)
 40097fc:	300b883a 	mov	r5,r6
 4009800:	840c8904 	addi	r16,r16,12836
 4009804:	2023883a 	mov	r17,r4
 4009808:	380d883a 	mov	r6,r7
 400980c:	1009883a 	mov	r4,r2
 4009810:	dfc00215 	stw	ra,8(sp)
 4009814:	80000015 	stw	zero,0(r16)
 4009818:	400d66c0 	call	400d66c <lseek>
 400981c:	00ffffc4 	movi	r3,-1
 4009820:	10c00526 	beq	r2,r3,4009838 <_lseek_r+0x50>
 4009824:	dfc00217 	ldw	ra,8(sp)
 4009828:	dc400117 	ldw	r17,4(sp)
 400982c:	dc000017 	ldw	r16,0(sp)
 4009830:	dec00304 	addi	sp,sp,12
 4009834:	f800283a 	ret
 4009838:	80c00017 	ldw	r3,0(r16)
 400983c:	183ff926 	beq	r3,zero,4009824 <__alt_mem_onchip_memory+0xfc001824>
 4009840:	88c00015 	stw	r3,0(r17)
 4009844:	003ff706 	br	4009824 <__alt_mem_onchip_memory+0xfc001824>

04009848 <_read_r>:
 4009848:	defffd04 	addi	sp,sp,-12
 400984c:	2805883a 	mov	r2,r5
 4009850:	dc000015 	stw	r16,0(sp)
 4009854:	04010074 	movhi	r16,1025
 4009858:	dc400115 	stw	r17,4(sp)
 400985c:	300b883a 	mov	r5,r6
 4009860:	840c8904 	addi	r16,r16,12836
 4009864:	2023883a 	mov	r17,r4
 4009868:	380d883a 	mov	r6,r7
 400986c:	1009883a 	mov	r4,r2
 4009870:	dfc00215 	stw	ra,8(sp)
 4009874:	80000015 	stw	zero,0(r16)
 4009878:	400d8480 	call	400d848 <read>
 400987c:	00ffffc4 	movi	r3,-1
 4009880:	10c00526 	beq	r2,r3,4009898 <_read_r+0x50>
 4009884:	dfc00217 	ldw	ra,8(sp)
 4009888:	dc400117 	ldw	r17,4(sp)
 400988c:	dc000017 	ldw	r16,0(sp)
 4009890:	dec00304 	addi	sp,sp,12
 4009894:	f800283a 	ret
 4009898:	80c00017 	ldw	r3,0(r16)
 400989c:	183ff926 	beq	r3,zero,4009884 <__alt_mem_onchip_memory+0xfc001884>
 40098a0:	88c00015 	stw	r3,0(r17)
 40098a4:	003ff706 	br	4009884 <__alt_mem_onchip_memory+0xfc001884>

040098a8 <__swbuf_r>:
 40098a8:	defffb04 	addi	sp,sp,-20
 40098ac:	dcc00315 	stw	r19,12(sp)
 40098b0:	dc800215 	stw	r18,8(sp)
 40098b4:	dc000015 	stw	r16,0(sp)
 40098b8:	dfc00415 	stw	ra,16(sp)
 40098bc:	dc400115 	stw	r17,4(sp)
 40098c0:	2025883a 	mov	r18,r4
 40098c4:	2827883a 	mov	r19,r5
 40098c8:	3021883a 	mov	r16,r6
 40098cc:	20000226 	beq	r4,zero,40098d8 <__swbuf_r+0x30>
 40098d0:	20800e17 	ldw	r2,56(r4)
 40098d4:	10004226 	beq	r2,zero,40099e0 <__swbuf_r+0x138>
 40098d8:	80800617 	ldw	r2,24(r16)
 40098dc:	8100030b 	ldhu	r4,12(r16)
 40098e0:	80800215 	stw	r2,8(r16)
 40098e4:	2080020c 	andi	r2,r4,8
 40098e8:	10003626 	beq	r2,zero,40099c4 <__swbuf_r+0x11c>
 40098ec:	80c00417 	ldw	r3,16(r16)
 40098f0:	18003426 	beq	r3,zero,40099c4 <__swbuf_r+0x11c>
 40098f4:	2088000c 	andi	r2,r4,8192
 40098f8:	9c403fcc 	andi	r17,r19,255
 40098fc:	10001a26 	beq	r2,zero,4009968 <__swbuf_r+0xc0>
 4009900:	80800017 	ldw	r2,0(r16)
 4009904:	81000517 	ldw	r4,20(r16)
 4009908:	10c7c83a 	sub	r3,r2,r3
 400990c:	1900200e 	bge	r3,r4,4009990 <__swbuf_r+0xe8>
 4009910:	18c00044 	addi	r3,r3,1
 4009914:	81000217 	ldw	r4,8(r16)
 4009918:	11400044 	addi	r5,r2,1
 400991c:	81400015 	stw	r5,0(r16)
 4009920:	213fffc4 	addi	r4,r4,-1
 4009924:	81000215 	stw	r4,8(r16)
 4009928:	14c00005 	stb	r19,0(r2)
 400992c:	80800517 	ldw	r2,20(r16)
 4009930:	10c01e26 	beq	r2,r3,40099ac <__swbuf_r+0x104>
 4009934:	8080030b 	ldhu	r2,12(r16)
 4009938:	1080004c 	andi	r2,r2,1
 400993c:	10000226 	beq	r2,zero,4009948 <__swbuf_r+0xa0>
 4009940:	00800284 	movi	r2,10
 4009944:	88801926 	beq	r17,r2,40099ac <__swbuf_r+0x104>
 4009948:	8805883a 	mov	r2,r17
 400994c:	dfc00417 	ldw	ra,16(sp)
 4009950:	dcc00317 	ldw	r19,12(sp)
 4009954:	dc800217 	ldw	r18,8(sp)
 4009958:	dc400117 	ldw	r17,4(sp)
 400995c:	dc000017 	ldw	r16,0(sp)
 4009960:	dec00504 	addi	sp,sp,20
 4009964:	f800283a 	ret
 4009968:	81401917 	ldw	r5,100(r16)
 400996c:	00b7ffc4 	movi	r2,-8193
 4009970:	21080014 	ori	r4,r4,8192
 4009974:	2884703a 	and	r2,r5,r2
 4009978:	80801915 	stw	r2,100(r16)
 400997c:	80800017 	ldw	r2,0(r16)
 4009980:	8100030d 	sth	r4,12(r16)
 4009984:	81000517 	ldw	r4,20(r16)
 4009988:	10c7c83a 	sub	r3,r2,r3
 400998c:	193fe016 	blt	r3,r4,4009910 <__alt_mem_onchip_memory+0xfc001910>
 4009990:	800b883a 	mov	r5,r16
 4009994:	9009883a 	mov	r4,r18
 4009998:	40044940 	call	4004494 <_fflush_r>
 400999c:	1000071e 	bne	r2,zero,40099bc <__swbuf_r+0x114>
 40099a0:	80800017 	ldw	r2,0(r16)
 40099a4:	00c00044 	movi	r3,1
 40099a8:	003fda06 	br	4009914 <__alt_mem_onchip_memory+0xfc001914>
 40099ac:	800b883a 	mov	r5,r16
 40099b0:	9009883a 	mov	r4,r18
 40099b4:	40044940 	call	4004494 <_fflush_r>
 40099b8:	103fe326 	beq	r2,zero,4009948 <__alt_mem_onchip_memory+0xfc001948>
 40099bc:	00bfffc4 	movi	r2,-1
 40099c0:	003fe206 	br	400994c <__alt_mem_onchip_memory+0xfc00194c>
 40099c4:	800b883a 	mov	r5,r16
 40099c8:	9009883a 	mov	r4,r18
 40099cc:	40028740 	call	4002874 <__swsetup_r>
 40099d0:	103ffa1e 	bne	r2,zero,40099bc <__alt_mem_onchip_memory+0xfc0019bc>
 40099d4:	8100030b 	ldhu	r4,12(r16)
 40099d8:	80c00417 	ldw	r3,16(r16)
 40099dc:	003fc506 	br	40098f4 <__alt_mem_onchip_memory+0xfc0018f4>
 40099e0:	40048800 	call	4004880 <__sinit>
 40099e4:	003fbc06 	br	40098d8 <__alt_mem_onchip_memory+0xfc0018d8>

040099e8 <__swbuf>:
 40099e8:	00810074 	movhi	r2,1025
 40099ec:	1085b904 	addi	r2,r2,5860
 40099f0:	280d883a 	mov	r6,r5
 40099f4:	200b883a 	mov	r5,r4
 40099f8:	11000017 	ldw	r4,0(r2)
 40099fc:	40098a81 	jmpi	40098a8 <__swbuf_r>

04009a00 <_wcrtomb_r>:
 4009a00:	defff604 	addi	sp,sp,-40
 4009a04:	00810074 	movhi	r2,1025
 4009a08:	dc800815 	stw	r18,32(sp)
 4009a0c:	dc400715 	stw	r17,28(sp)
 4009a10:	dc000615 	stw	r16,24(sp)
 4009a14:	1085bd04 	addi	r2,r2,5876
 4009a18:	dfc00915 	stw	ra,36(sp)
 4009a1c:	2021883a 	mov	r16,r4
 4009a20:	3823883a 	mov	r17,r7
 4009a24:	14800017 	ldw	r18,0(r2)
 4009a28:	28001426 	beq	r5,zero,4009a7c <_wcrtomb_r+0x7c>
 4009a2c:	d9400415 	stw	r5,16(sp)
 4009a30:	d9800515 	stw	r6,20(sp)
 4009a34:	40053d00 	call	40053d0 <__locale_charset>
 4009a38:	d9800517 	ldw	r6,20(sp)
 4009a3c:	d9400417 	ldw	r5,16(sp)
 4009a40:	100f883a 	mov	r7,r2
 4009a44:	dc400015 	stw	r17,0(sp)
 4009a48:	8009883a 	mov	r4,r16
 4009a4c:	903ee83a 	callr	r18
 4009a50:	00ffffc4 	movi	r3,-1
 4009a54:	10c0031e 	bne	r2,r3,4009a64 <_wcrtomb_r+0x64>
 4009a58:	88000015 	stw	zero,0(r17)
 4009a5c:	00c02284 	movi	r3,138
 4009a60:	80c00015 	stw	r3,0(r16)
 4009a64:	dfc00917 	ldw	ra,36(sp)
 4009a68:	dc800817 	ldw	r18,32(sp)
 4009a6c:	dc400717 	ldw	r17,28(sp)
 4009a70:	dc000617 	ldw	r16,24(sp)
 4009a74:	dec00a04 	addi	sp,sp,40
 4009a78:	f800283a 	ret
 4009a7c:	40053d00 	call	40053d0 <__locale_charset>
 4009a80:	100f883a 	mov	r7,r2
 4009a84:	dc400015 	stw	r17,0(sp)
 4009a88:	000d883a 	mov	r6,zero
 4009a8c:	d9400104 	addi	r5,sp,4
 4009a90:	8009883a 	mov	r4,r16
 4009a94:	903ee83a 	callr	r18
 4009a98:	003fed06 	br	4009a50 <__alt_mem_onchip_memory+0xfc001a50>

04009a9c <wcrtomb>:
 4009a9c:	defff604 	addi	sp,sp,-40
 4009aa0:	00810074 	movhi	r2,1025
 4009aa4:	dc800615 	stw	r18,24(sp)
 4009aa8:	dc400515 	stw	r17,20(sp)
 4009aac:	1085b904 	addi	r2,r2,5860
 4009ab0:	dfc00915 	stw	ra,36(sp)
 4009ab4:	dd000815 	stw	r20,32(sp)
 4009ab8:	dcc00715 	stw	r19,28(sp)
 4009abc:	dc000415 	stw	r16,16(sp)
 4009ac0:	3025883a 	mov	r18,r6
 4009ac4:	14400017 	ldw	r17,0(r2)
 4009ac8:	20001926 	beq	r4,zero,4009b30 <wcrtomb+0x94>
 4009acc:	00810074 	movhi	r2,1025
 4009ad0:	1085bd04 	addi	r2,r2,5876
 4009ad4:	15000017 	ldw	r20,0(r2)
 4009ad8:	2021883a 	mov	r16,r4
 4009adc:	2827883a 	mov	r19,r5
 4009ae0:	40053d00 	call	40053d0 <__locale_charset>
 4009ae4:	100f883a 	mov	r7,r2
 4009ae8:	dc800015 	stw	r18,0(sp)
 4009aec:	980d883a 	mov	r6,r19
 4009af0:	800b883a 	mov	r5,r16
 4009af4:	8809883a 	mov	r4,r17
 4009af8:	a03ee83a 	callr	r20
 4009afc:	00ffffc4 	movi	r3,-1
 4009b00:	10c0031e 	bne	r2,r3,4009b10 <wcrtomb+0x74>
 4009b04:	90000015 	stw	zero,0(r18)
 4009b08:	00c02284 	movi	r3,138
 4009b0c:	88c00015 	stw	r3,0(r17)
 4009b10:	dfc00917 	ldw	ra,36(sp)
 4009b14:	dd000817 	ldw	r20,32(sp)
 4009b18:	dcc00717 	ldw	r19,28(sp)
 4009b1c:	dc800617 	ldw	r18,24(sp)
 4009b20:	dc400517 	ldw	r17,20(sp)
 4009b24:	dc000417 	ldw	r16,16(sp)
 4009b28:	dec00a04 	addi	sp,sp,40
 4009b2c:	f800283a 	ret
 4009b30:	00810074 	movhi	r2,1025
 4009b34:	1085bd04 	addi	r2,r2,5876
 4009b38:	14000017 	ldw	r16,0(r2)
 4009b3c:	40053d00 	call	40053d0 <__locale_charset>
 4009b40:	100f883a 	mov	r7,r2
 4009b44:	dc800015 	stw	r18,0(sp)
 4009b48:	000d883a 	mov	r6,zero
 4009b4c:	d9400104 	addi	r5,sp,4
 4009b50:	8809883a 	mov	r4,r17
 4009b54:	803ee83a 	callr	r16
 4009b58:	003fe806 	br	4009afc <__alt_mem_onchip_memory+0xfc001afc>

04009b5c <__ascii_wctomb>:
 4009b5c:	28000526 	beq	r5,zero,4009b74 <__ascii_wctomb+0x18>
 4009b60:	00803fc4 	movi	r2,255
 4009b64:	11800536 	bltu	r2,r6,4009b7c <__ascii_wctomb+0x20>
 4009b68:	29800005 	stb	r6,0(r5)
 4009b6c:	00800044 	movi	r2,1
 4009b70:	f800283a 	ret
 4009b74:	0005883a 	mov	r2,zero
 4009b78:	f800283a 	ret
 4009b7c:	00802284 	movi	r2,138
 4009b80:	20800015 	stw	r2,0(r4)
 4009b84:	00bfffc4 	movi	r2,-1
 4009b88:	f800283a 	ret

04009b8c <_wctomb_r>:
 4009b8c:	00810074 	movhi	r2,1025
 4009b90:	defff904 	addi	sp,sp,-28
 4009b94:	1085bd04 	addi	r2,r2,5876
 4009b98:	dfc00615 	stw	ra,24(sp)
 4009b9c:	dc400515 	stw	r17,20(sp)
 4009ba0:	dc000415 	stw	r16,16(sp)
 4009ba4:	3823883a 	mov	r17,r7
 4009ba8:	14000017 	ldw	r16,0(r2)
 4009bac:	d9000115 	stw	r4,4(sp)
 4009bb0:	d9400215 	stw	r5,8(sp)
 4009bb4:	d9800315 	stw	r6,12(sp)
 4009bb8:	40053d00 	call	40053d0 <__locale_charset>
 4009bbc:	d9800317 	ldw	r6,12(sp)
 4009bc0:	d9400217 	ldw	r5,8(sp)
 4009bc4:	d9000117 	ldw	r4,4(sp)
 4009bc8:	100f883a 	mov	r7,r2
 4009bcc:	dc400015 	stw	r17,0(sp)
 4009bd0:	803ee83a 	callr	r16
 4009bd4:	dfc00617 	ldw	ra,24(sp)
 4009bd8:	dc400517 	ldw	r17,20(sp)
 4009bdc:	dc000417 	ldw	r16,16(sp)
 4009be0:	dec00704 	addi	sp,sp,28
 4009be4:	f800283a 	ret

04009be8 <__udivdi3>:
 4009be8:	defff404 	addi	sp,sp,-48
 4009bec:	dcc00515 	stw	r19,20(sp)
 4009bf0:	dc000215 	stw	r16,8(sp)
 4009bf4:	dfc00b15 	stw	ra,44(sp)
 4009bf8:	df000a15 	stw	fp,40(sp)
 4009bfc:	ddc00915 	stw	r23,36(sp)
 4009c00:	dd800815 	stw	r22,32(sp)
 4009c04:	dd400715 	stw	r21,28(sp)
 4009c08:	dd000615 	stw	r20,24(sp)
 4009c0c:	dc800415 	stw	r18,16(sp)
 4009c10:	dc400315 	stw	r17,12(sp)
 4009c14:	2027883a 	mov	r19,r4
 4009c18:	2821883a 	mov	r16,r5
 4009c1c:	3800461e 	bne	r7,zero,4009d38 <__udivdi3+0x150>
 4009c20:	3023883a 	mov	r17,r6
 4009c24:	2025883a 	mov	r18,r4
 4009c28:	2980572e 	bgeu	r5,r6,4009d88 <__udivdi3+0x1a0>
 4009c2c:	00bfffd4 	movui	r2,65535
 4009c30:	282d883a 	mov	r22,r5
 4009c34:	1180b236 	bltu	r2,r6,4009f00 <__udivdi3+0x318>
 4009c38:	00803fc4 	movi	r2,255
 4009c3c:	1185803a 	cmpltu	r2,r2,r6
 4009c40:	100490fa 	slli	r2,r2,3
 4009c44:	3086d83a 	srl	r3,r6,r2
 4009c48:	01010074 	movhi	r4,1025
 4009c4c:	213ec204 	addi	r4,r4,-1272
 4009c50:	20c7883a 	add	r3,r4,r3
 4009c54:	18c00003 	ldbu	r3,0(r3)
 4009c58:	1885883a 	add	r2,r3,r2
 4009c5c:	00c00804 	movi	r3,32
 4009c60:	1887c83a 	sub	r3,r3,r2
 4009c64:	18000526 	beq	r3,zero,4009c7c <__udivdi3+0x94>
 4009c68:	80e0983a 	sll	r16,r16,r3
 4009c6c:	9884d83a 	srl	r2,r19,r2
 4009c70:	30e2983a 	sll	r17,r6,r3
 4009c74:	98e4983a 	sll	r18,r19,r3
 4009c78:	142cb03a 	or	r22,r2,r16
 4009c7c:	882ad43a 	srli	r21,r17,16
 4009c80:	b009883a 	mov	r4,r22
 4009c84:	8d3fffcc 	andi	r20,r17,65535
 4009c88:	a80b883a 	mov	r5,r21
 4009c8c:	400a9040 	call	400a904 <__umodsi3>
 4009c90:	b009883a 	mov	r4,r22
 4009c94:	a80b883a 	mov	r5,r21
 4009c98:	1027883a 	mov	r19,r2
 4009c9c:	400a8a00 	call	400a8a0 <__udivsi3>
 4009ca0:	100b883a 	mov	r5,r2
 4009ca4:	a009883a 	mov	r4,r20
 4009ca8:	102d883a 	mov	r22,r2
 4009cac:	400a95c0 	call	400a95c <__mulsi3>
 4009cb0:	9826943a 	slli	r19,r19,16
 4009cb4:	9006d43a 	srli	r3,r18,16
 4009cb8:	1cc6b03a 	or	r3,r3,r19
 4009cbc:	1880052e 	bgeu	r3,r2,4009cd4 <__udivdi3+0xec>
 4009cc0:	1c47883a 	add	r3,r3,r17
 4009cc4:	b13fffc4 	addi	r4,r22,-1
 4009cc8:	1c400136 	bltu	r3,r17,4009cd0 <__udivdi3+0xe8>
 4009ccc:	18814236 	bltu	r3,r2,400a1d8 <__udivdi3+0x5f0>
 4009cd0:	202d883a 	mov	r22,r4
 4009cd4:	18a1c83a 	sub	r16,r3,r2
 4009cd8:	8009883a 	mov	r4,r16
 4009cdc:	a80b883a 	mov	r5,r21
 4009ce0:	400a9040 	call	400a904 <__umodsi3>
 4009ce4:	1027883a 	mov	r19,r2
 4009ce8:	8009883a 	mov	r4,r16
 4009cec:	a80b883a 	mov	r5,r21
 4009cf0:	9826943a 	slli	r19,r19,16
 4009cf4:	400a8a00 	call	400a8a0 <__udivsi3>
 4009cf8:	100b883a 	mov	r5,r2
 4009cfc:	a009883a 	mov	r4,r20
 4009d00:	94bfffcc 	andi	r18,r18,65535
 4009d04:	1021883a 	mov	r16,r2
 4009d08:	94e4b03a 	or	r18,r18,r19
 4009d0c:	400a95c0 	call	400a95c <__mulsi3>
 4009d10:	9080052e 	bgeu	r18,r2,4009d28 <__udivdi3+0x140>
 4009d14:	8ca5883a 	add	r18,r17,r18
 4009d18:	80ffffc4 	addi	r3,r16,-1
 4009d1c:	94410c36 	bltu	r18,r17,400a150 <__udivdi3+0x568>
 4009d20:	90810b2e 	bgeu	r18,r2,400a150 <__udivdi3+0x568>
 4009d24:	843fff84 	addi	r16,r16,-2
 4009d28:	b004943a 	slli	r2,r22,16
 4009d2c:	0007883a 	mov	r3,zero
 4009d30:	1404b03a 	or	r2,r2,r16
 4009d34:	00005e06 	br	4009eb0 <__udivdi3+0x2c8>
 4009d38:	29c05b36 	bltu	r5,r7,4009ea8 <__udivdi3+0x2c0>
 4009d3c:	00bfffd4 	movui	r2,65535
 4009d40:	11c0672e 	bgeu	r2,r7,4009ee0 <__udivdi3+0x2f8>
 4009d44:	00804034 	movhi	r2,256
 4009d48:	10bfffc4 	addi	r2,r2,-1
 4009d4c:	11c10a36 	bltu	r2,r7,400a178 <__udivdi3+0x590>
 4009d50:	00800404 	movi	r2,16
 4009d54:	3886d83a 	srl	r3,r7,r2
 4009d58:	01010074 	movhi	r4,1025
 4009d5c:	213ec204 	addi	r4,r4,-1272
 4009d60:	20c7883a 	add	r3,r4,r3
 4009d64:	18c00003 	ldbu	r3,0(r3)
 4009d68:	05c00804 	movi	r23,32
 4009d6c:	1885883a 	add	r2,r3,r2
 4009d70:	b8afc83a 	sub	r23,r23,r2
 4009d74:	b800671e 	bne	r23,zero,4009f14 <__udivdi3+0x32c>
 4009d78:	3c010536 	bltu	r7,r16,400a190 <__udivdi3+0x5a8>
 4009d7c:	9985403a 	cmpgeu	r2,r19,r6
 4009d80:	0007883a 	mov	r3,zero
 4009d84:	00004a06 	br	4009eb0 <__udivdi3+0x2c8>
 4009d88:	3000041e 	bne	r6,zero,4009d9c <__udivdi3+0x1b4>
 4009d8c:	000b883a 	mov	r5,zero
 4009d90:	01000044 	movi	r4,1
 4009d94:	400a8a00 	call	400a8a0 <__udivsi3>
 4009d98:	1023883a 	mov	r17,r2
 4009d9c:	00bfffd4 	movui	r2,65535
 4009da0:	1440532e 	bgeu	r2,r17,4009ef0 <__udivdi3+0x308>
 4009da4:	00804034 	movhi	r2,256
 4009da8:	10bfffc4 	addi	r2,r2,-1
 4009dac:	1440f436 	bltu	r2,r17,400a180 <__udivdi3+0x598>
 4009db0:	00800404 	movi	r2,16
 4009db4:	8886d83a 	srl	r3,r17,r2
 4009db8:	01010074 	movhi	r4,1025
 4009dbc:	213ec204 	addi	r4,r4,-1272
 4009dc0:	20c7883a 	add	r3,r4,r3
 4009dc4:	18c00003 	ldbu	r3,0(r3)
 4009dc8:	1885883a 	add	r2,r3,r2
 4009dcc:	00c00804 	movi	r3,32
 4009dd0:	1887c83a 	sub	r3,r3,r2
 4009dd4:	1800a51e 	bne	r3,zero,400a06c <__udivdi3+0x484>
 4009dd8:	882ad43a 	srli	r21,r17,16
 4009ddc:	8461c83a 	sub	r16,r16,r17
 4009de0:	8d3fffcc 	andi	r20,r17,65535
 4009de4:	00c00044 	movi	r3,1
 4009de8:	a80b883a 	mov	r5,r21
 4009dec:	8009883a 	mov	r4,r16
 4009df0:	d8c00115 	stw	r3,4(sp)
 4009df4:	400a9040 	call	400a904 <__umodsi3>
 4009df8:	a80b883a 	mov	r5,r21
 4009dfc:	8009883a 	mov	r4,r16
 4009e00:	1027883a 	mov	r19,r2
 4009e04:	400a8a00 	call	400a8a0 <__udivsi3>
 4009e08:	a00b883a 	mov	r5,r20
 4009e0c:	1009883a 	mov	r4,r2
 4009e10:	102d883a 	mov	r22,r2
 4009e14:	400a95c0 	call	400a95c <__mulsi3>
 4009e18:	9826943a 	slli	r19,r19,16
 4009e1c:	900ed43a 	srli	r7,r18,16
 4009e20:	d8c00117 	ldw	r3,4(sp)
 4009e24:	3cceb03a 	or	r7,r7,r19
 4009e28:	3880052e 	bgeu	r7,r2,4009e40 <__udivdi3+0x258>
 4009e2c:	3c4f883a 	add	r7,r7,r17
 4009e30:	b13fffc4 	addi	r4,r22,-1
 4009e34:	3c400136 	bltu	r7,r17,4009e3c <__udivdi3+0x254>
 4009e38:	3880e436 	bltu	r7,r2,400a1cc <__udivdi3+0x5e4>
 4009e3c:	202d883a 	mov	r22,r4
 4009e40:	38a1c83a 	sub	r16,r7,r2
 4009e44:	8009883a 	mov	r4,r16
 4009e48:	a80b883a 	mov	r5,r21
 4009e4c:	d8c00115 	stw	r3,4(sp)
 4009e50:	400a9040 	call	400a904 <__umodsi3>
 4009e54:	1027883a 	mov	r19,r2
 4009e58:	8009883a 	mov	r4,r16
 4009e5c:	a80b883a 	mov	r5,r21
 4009e60:	9826943a 	slli	r19,r19,16
 4009e64:	400a8a00 	call	400a8a0 <__udivsi3>
 4009e68:	a00b883a 	mov	r5,r20
 4009e6c:	1009883a 	mov	r4,r2
 4009e70:	94bfffcc 	andi	r18,r18,65535
 4009e74:	1021883a 	mov	r16,r2
 4009e78:	94e4b03a 	or	r18,r18,r19
 4009e7c:	400a95c0 	call	400a95c <__mulsi3>
 4009e80:	d8c00117 	ldw	r3,4(sp)
 4009e84:	9080052e 	bgeu	r18,r2,4009e9c <__udivdi3+0x2b4>
 4009e88:	8ca5883a 	add	r18,r17,r18
 4009e8c:	813fffc4 	addi	r4,r16,-1
 4009e90:	9440ad36 	bltu	r18,r17,400a148 <__udivdi3+0x560>
 4009e94:	9080ac2e 	bgeu	r18,r2,400a148 <__udivdi3+0x560>
 4009e98:	843fff84 	addi	r16,r16,-2
 4009e9c:	b004943a 	slli	r2,r22,16
 4009ea0:	1404b03a 	or	r2,r2,r16
 4009ea4:	00000206 	br	4009eb0 <__udivdi3+0x2c8>
 4009ea8:	0007883a 	mov	r3,zero
 4009eac:	0005883a 	mov	r2,zero
 4009eb0:	dfc00b17 	ldw	ra,44(sp)
 4009eb4:	df000a17 	ldw	fp,40(sp)
 4009eb8:	ddc00917 	ldw	r23,36(sp)
 4009ebc:	dd800817 	ldw	r22,32(sp)
 4009ec0:	dd400717 	ldw	r21,28(sp)
 4009ec4:	dd000617 	ldw	r20,24(sp)
 4009ec8:	dcc00517 	ldw	r19,20(sp)
 4009ecc:	dc800417 	ldw	r18,16(sp)
 4009ed0:	dc400317 	ldw	r17,12(sp)
 4009ed4:	dc000217 	ldw	r16,8(sp)
 4009ed8:	dec00c04 	addi	sp,sp,48
 4009edc:	f800283a 	ret
 4009ee0:	00803fc4 	movi	r2,255
 4009ee4:	11c5803a 	cmpltu	r2,r2,r7
 4009ee8:	100490fa 	slli	r2,r2,3
 4009eec:	003f9906 	br	4009d54 <__alt_mem_onchip_memory+0xfc001d54>
 4009ef0:	00803fc4 	movi	r2,255
 4009ef4:	1445803a 	cmpltu	r2,r2,r17
 4009ef8:	100490fa 	slli	r2,r2,3
 4009efc:	003fad06 	br	4009db4 <__alt_mem_onchip_memory+0xfc001db4>
 4009f00:	00804034 	movhi	r2,256
 4009f04:	10bfffc4 	addi	r2,r2,-1
 4009f08:	11809f36 	bltu	r2,r6,400a188 <__udivdi3+0x5a0>
 4009f0c:	00800404 	movi	r2,16
 4009f10:	003f4c06 	br	4009c44 <__alt_mem_onchip_memory+0xfc001c44>
 4009f14:	3dce983a 	sll	r7,r7,r23
 4009f18:	30b8d83a 	srl	fp,r6,r2
 4009f1c:	80a2d83a 	srl	r17,r16,r2
 4009f20:	35cc983a 	sll	r6,r6,r23
 4009f24:	3f38b03a 	or	fp,r7,fp
 4009f28:	e024d43a 	srli	r18,fp,16
 4009f2c:	9884d83a 	srl	r2,r19,r2
 4009f30:	85e0983a 	sll	r16,r16,r23
 4009f34:	8809883a 	mov	r4,r17
 4009f38:	900b883a 	mov	r5,r18
 4009f3c:	d9800015 	stw	r6,0(sp)
 4009f40:	1420b03a 	or	r16,r2,r16
 4009f44:	400a9040 	call	400a904 <__umodsi3>
 4009f48:	900b883a 	mov	r5,r18
 4009f4c:	8809883a 	mov	r4,r17
 4009f50:	1029883a 	mov	r20,r2
 4009f54:	e5bfffcc 	andi	r22,fp,65535
 4009f58:	400a8a00 	call	400a8a0 <__udivsi3>
 4009f5c:	100b883a 	mov	r5,r2
 4009f60:	b009883a 	mov	r4,r22
 4009f64:	102b883a 	mov	r21,r2
 4009f68:	400a95c0 	call	400a95c <__mulsi3>
 4009f6c:	a028943a 	slli	r20,r20,16
 4009f70:	8006d43a 	srli	r3,r16,16
 4009f74:	1d06b03a 	or	r3,r3,r20
 4009f78:	1880042e 	bgeu	r3,r2,4009f8c <__udivdi3+0x3a4>
 4009f7c:	1f07883a 	add	r3,r3,fp
 4009f80:	a93fffc4 	addi	r4,r21,-1
 4009f84:	1f00892e 	bgeu	r3,fp,400a1ac <__udivdi3+0x5c4>
 4009f88:	202b883a 	mov	r21,r4
 4009f8c:	18a3c83a 	sub	r17,r3,r2
 4009f90:	8809883a 	mov	r4,r17
 4009f94:	900b883a 	mov	r5,r18
 4009f98:	400a9040 	call	400a904 <__umodsi3>
 4009f9c:	1029883a 	mov	r20,r2
 4009fa0:	8809883a 	mov	r4,r17
 4009fa4:	900b883a 	mov	r5,r18
 4009fa8:	a028943a 	slli	r20,r20,16
 4009fac:	400a8a00 	call	400a8a0 <__udivsi3>
 4009fb0:	100b883a 	mov	r5,r2
 4009fb4:	b009883a 	mov	r4,r22
 4009fb8:	843fffcc 	andi	r16,r16,65535
 4009fbc:	1023883a 	mov	r17,r2
 4009fc0:	8520b03a 	or	r16,r16,r20
 4009fc4:	400a95c0 	call	400a95c <__mulsi3>
 4009fc8:	8080042e 	bgeu	r16,r2,4009fdc <__udivdi3+0x3f4>
 4009fcc:	8721883a 	add	r16,r16,fp
 4009fd0:	88ffffc4 	addi	r3,r17,-1
 4009fd4:	8700712e 	bgeu	r16,fp,400a19c <__udivdi3+0x5b4>
 4009fd8:	1823883a 	mov	r17,r3
 4009fdc:	a80e943a 	slli	r7,r21,16
 4009fe0:	d8c00017 	ldw	r3,0(sp)
 4009fe4:	80a1c83a 	sub	r16,r16,r2
 4009fe8:	3c64b03a 	or	r18,r7,r17
 4009fec:	1d3fffcc 	andi	r20,r3,65535
 4009ff0:	9022d43a 	srli	r17,r18,16
 4009ff4:	95bfffcc 	andi	r22,r18,65535
 4009ff8:	a00b883a 	mov	r5,r20
 4009ffc:	b009883a 	mov	r4,r22
 400a000:	182ad43a 	srli	r21,r3,16
 400a004:	400a95c0 	call	400a95c <__mulsi3>
 400a008:	a00b883a 	mov	r5,r20
 400a00c:	8809883a 	mov	r4,r17
 400a010:	1039883a 	mov	fp,r2
 400a014:	400a95c0 	call	400a95c <__mulsi3>
 400a018:	8809883a 	mov	r4,r17
 400a01c:	a80b883a 	mov	r5,r21
 400a020:	1029883a 	mov	r20,r2
 400a024:	400a95c0 	call	400a95c <__mulsi3>
 400a028:	a80b883a 	mov	r5,r21
 400a02c:	b009883a 	mov	r4,r22
 400a030:	1023883a 	mov	r17,r2
 400a034:	400a95c0 	call	400a95c <__mulsi3>
 400a038:	e006d43a 	srli	r3,fp,16
 400a03c:	1505883a 	add	r2,r2,r20
 400a040:	1887883a 	add	r3,r3,r2
 400a044:	1d00022e 	bgeu	r3,r20,400a050 <__udivdi3+0x468>
 400a048:	00800074 	movhi	r2,1
 400a04c:	88a3883a 	add	r17,r17,r2
 400a050:	1804d43a 	srli	r2,r3,16
 400a054:	1463883a 	add	r17,r2,r17
 400a058:	84404436 	bltu	r16,r17,400a16c <__udivdi3+0x584>
 400a05c:	84403e26 	beq	r16,r17,400a158 <__udivdi3+0x570>
 400a060:	9005883a 	mov	r2,r18
 400a064:	0007883a 	mov	r3,zero
 400a068:	003f9106 	br	4009eb0 <__alt_mem_onchip_memory+0xfc001eb0>
 400a06c:	88e2983a 	sll	r17,r17,r3
 400a070:	80aed83a 	srl	r23,r16,r2
 400a074:	80e0983a 	sll	r16,r16,r3
 400a078:	882ad43a 	srli	r21,r17,16
 400a07c:	9884d83a 	srl	r2,r19,r2
 400a080:	b809883a 	mov	r4,r23
 400a084:	a80b883a 	mov	r5,r21
 400a088:	98e4983a 	sll	r18,r19,r3
 400a08c:	142cb03a 	or	r22,r2,r16
 400a090:	400a9040 	call	400a904 <__umodsi3>
 400a094:	b809883a 	mov	r4,r23
 400a098:	a80b883a 	mov	r5,r21
 400a09c:	1027883a 	mov	r19,r2
 400a0a0:	8d3fffcc 	andi	r20,r17,65535
 400a0a4:	400a8a00 	call	400a8a0 <__udivsi3>
 400a0a8:	a009883a 	mov	r4,r20
 400a0ac:	100b883a 	mov	r5,r2
 400a0b0:	102f883a 	mov	r23,r2
 400a0b4:	400a95c0 	call	400a95c <__mulsi3>
 400a0b8:	9826943a 	slli	r19,r19,16
 400a0bc:	b008d43a 	srli	r4,r22,16
 400a0c0:	24c8b03a 	or	r4,r4,r19
 400a0c4:	2080062e 	bgeu	r4,r2,400a0e0 <__udivdi3+0x4f8>
 400a0c8:	2449883a 	add	r4,r4,r17
 400a0cc:	b8ffffc4 	addi	r3,r23,-1
 400a0d0:	24403c36 	bltu	r4,r17,400a1c4 <__udivdi3+0x5dc>
 400a0d4:	20803b2e 	bgeu	r4,r2,400a1c4 <__udivdi3+0x5dc>
 400a0d8:	bdffff84 	addi	r23,r23,-2
 400a0dc:	2449883a 	add	r4,r4,r17
 400a0e0:	20a1c83a 	sub	r16,r4,r2
 400a0e4:	a80b883a 	mov	r5,r21
 400a0e8:	8009883a 	mov	r4,r16
 400a0ec:	400a9040 	call	400a904 <__umodsi3>
 400a0f0:	a80b883a 	mov	r5,r21
 400a0f4:	8009883a 	mov	r4,r16
 400a0f8:	1027883a 	mov	r19,r2
 400a0fc:	400a8a00 	call	400a8a0 <__udivsi3>
 400a100:	a009883a 	mov	r4,r20
 400a104:	100b883a 	mov	r5,r2
 400a108:	9826943a 	slli	r19,r19,16
 400a10c:	1039883a 	mov	fp,r2
 400a110:	400a95c0 	call	400a95c <__mulsi3>
 400a114:	b13fffcc 	andi	r4,r22,65535
 400a118:	24c8b03a 	or	r4,r4,r19
 400a11c:	2080062e 	bgeu	r4,r2,400a138 <__udivdi3+0x550>
 400a120:	2449883a 	add	r4,r4,r17
 400a124:	e0ffffc4 	addi	r3,fp,-1
 400a128:	24402436 	bltu	r4,r17,400a1bc <__udivdi3+0x5d4>
 400a12c:	2080232e 	bgeu	r4,r2,400a1bc <__udivdi3+0x5d4>
 400a130:	e73fff84 	addi	fp,fp,-2
 400a134:	2449883a 	add	r4,r4,r17
 400a138:	b82e943a 	slli	r23,r23,16
 400a13c:	20a1c83a 	sub	r16,r4,r2
 400a140:	bf06b03a 	or	r3,r23,fp
 400a144:	003f2806 	br	4009de8 <__alt_mem_onchip_memory+0xfc001de8>
 400a148:	2021883a 	mov	r16,r4
 400a14c:	003f5306 	br	4009e9c <__alt_mem_onchip_memory+0xfc001e9c>
 400a150:	1821883a 	mov	r16,r3
 400a154:	003ef406 	br	4009d28 <__alt_mem_onchip_memory+0xfc001d28>
 400a158:	1806943a 	slli	r3,r3,16
 400a15c:	9de6983a 	sll	r19,r19,r23
 400a160:	e73fffcc 	andi	fp,fp,65535
 400a164:	1f07883a 	add	r3,r3,fp
 400a168:	98ffbd2e 	bgeu	r19,r3,400a060 <__alt_mem_onchip_memory+0xfc002060>
 400a16c:	90bfffc4 	addi	r2,r18,-1
 400a170:	0007883a 	mov	r3,zero
 400a174:	003f4e06 	br	4009eb0 <__alt_mem_onchip_memory+0xfc001eb0>
 400a178:	00800604 	movi	r2,24
 400a17c:	003ef506 	br	4009d54 <__alt_mem_onchip_memory+0xfc001d54>
 400a180:	00800604 	movi	r2,24
 400a184:	003f0b06 	br	4009db4 <__alt_mem_onchip_memory+0xfc001db4>
 400a188:	00800604 	movi	r2,24
 400a18c:	003ead06 	br	4009c44 <__alt_mem_onchip_memory+0xfc001c44>
 400a190:	0007883a 	mov	r3,zero
 400a194:	00800044 	movi	r2,1
 400a198:	003f4506 	br	4009eb0 <__alt_mem_onchip_memory+0xfc001eb0>
 400a19c:	80bf8e2e 	bgeu	r16,r2,4009fd8 <__alt_mem_onchip_memory+0xfc001fd8>
 400a1a0:	8c7fff84 	addi	r17,r17,-2
 400a1a4:	8721883a 	add	r16,r16,fp
 400a1a8:	003f8c06 	br	4009fdc <__alt_mem_onchip_memory+0xfc001fdc>
 400a1ac:	18bf762e 	bgeu	r3,r2,4009f88 <__alt_mem_onchip_memory+0xfc001f88>
 400a1b0:	ad7fff84 	addi	r21,r21,-2
 400a1b4:	1f07883a 	add	r3,r3,fp
 400a1b8:	003f7406 	br	4009f8c <__alt_mem_onchip_memory+0xfc001f8c>
 400a1bc:	1839883a 	mov	fp,r3
 400a1c0:	003fdd06 	br	400a138 <__alt_mem_onchip_memory+0xfc002138>
 400a1c4:	182f883a 	mov	r23,r3
 400a1c8:	003fc506 	br	400a0e0 <__alt_mem_onchip_memory+0xfc0020e0>
 400a1cc:	b5bfff84 	addi	r22,r22,-2
 400a1d0:	3c4f883a 	add	r7,r7,r17
 400a1d4:	003f1a06 	br	4009e40 <__alt_mem_onchip_memory+0xfc001e40>
 400a1d8:	b5bfff84 	addi	r22,r22,-2
 400a1dc:	1c47883a 	add	r3,r3,r17
 400a1e0:	003ebc06 	br	4009cd4 <__alt_mem_onchip_memory+0xfc001cd4>

0400a1e4 <__umoddi3>:
 400a1e4:	defff304 	addi	sp,sp,-52
 400a1e8:	df000b15 	stw	fp,44(sp)
 400a1ec:	dc400415 	stw	r17,16(sp)
 400a1f0:	dc000315 	stw	r16,12(sp)
 400a1f4:	dfc00c15 	stw	ra,48(sp)
 400a1f8:	ddc00a15 	stw	r23,40(sp)
 400a1fc:	dd800915 	stw	r22,36(sp)
 400a200:	dd400815 	stw	r21,32(sp)
 400a204:	dd000715 	stw	r20,28(sp)
 400a208:	dcc00615 	stw	r19,24(sp)
 400a20c:	dc800515 	stw	r18,20(sp)
 400a210:	2021883a 	mov	r16,r4
 400a214:	2823883a 	mov	r17,r5
 400a218:	2839883a 	mov	fp,r5
 400a21c:	3800401e 	bne	r7,zero,400a320 <__umoddi3+0x13c>
 400a220:	3027883a 	mov	r19,r6
 400a224:	2029883a 	mov	r20,r4
 400a228:	2980552e 	bgeu	r5,r6,400a380 <__umoddi3+0x19c>
 400a22c:	00bfffd4 	movui	r2,65535
 400a230:	1180a236 	bltu	r2,r6,400a4bc <__umoddi3+0x2d8>
 400a234:	01003fc4 	movi	r4,255
 400a238:	2189803a 	cmpltu	r4,r4,r6
 400a23c:	200890fa 	slli	r4,r4,3
 400a240:	3104d83a 	srl	r2,r6,r4
 400a244:	00c10074 	movhi	r3,1025
 400a248:	18fec204 	addi	r3,r3,-1272
 400a24c:	1885883a 	add	r2,r3,r2
 400a250:	10c00003 	ldbu	r3,0(r2)
 400a254:	00800804 	movi	r2,32
 400a258:	1909883a 	add	r4,r3,r4
 400a25c:	1125c83a 	sub	r18,r2,r4
 400a260:	90000526 	beq	r18,zero,400a278 <__umoddi3+0x94>
 400a264:	8ca2983a 	sll	r17,r17,r18
 400a268:	8108d83a 	srl	r4,r16,r4
 400a26c:	34a6983a 	sll	r19,r6,r18
 400a270:	84a8983a 	sll	r20,r16,r18
 400a274:	2478b03a 	or	fp,r4,r17
 400a278:	982cd43a 	srli	r22,r19,16
 400a27c:	e009883a 	mov	r4,fp
 400a280:	9dffffcc 	andi	r23,r19,65535
 400a284:	b00b883a 	mov	r5,r22
 400a288:	400a9040 	call	400a904 <__umodsi3>
 400a28c:	b00b883a 	mov	r5,r22
 400a290:	e009883a 	mov	r4,fp
 400a294:	102b883a 	mov	r21,r2
 400a298:	400a8a00 	call	400a8a0 <__udivsi3>
 400a29c:	100b883a 	mov	r5,r2
 400a2a0:	b809883a 	mov	r4,r23
 400a2a4:	400a95c0 	call	400a95c <__mulsi3>
 400a2a8:	a82a943a 	slli	r21,r21,16
 400a2ac:	a006d43a 	srli	r3,r20,16
 400a2b0:	1d46b03a 	or	r3,r3,r21
 400a2b4:	1880032e 	bgeu	r3,r2,400a2c4 <__umoddi3+0xe0>
 400a2b8:	1cc7883a 	add	r3,r3,r19
 400a2bc:	1cc00136 	bltu	r3,r19,400a2c4 <__umoddi3+0xe0>
 400a2c0:	18813136 	bltu	r3,r2,400a788 <__umoddi3+0x5a4>
 400a2c4:	18a1c83a 	sub	r16,r3,r2
 400a2c8:	b00b883a 	mov	r5,r22
 400a2cc:	8009883a 	mov	r4,r16
 400a2d0:	400a9040 	call	400a904 <__umodsi3>
 400a2d4:	b00b883a 	mov	r5,r22
 400a2d8:	8009883a 	mov	r4,r16
 400a2dc:	1023883a 	mov	r17,r2
 400a2e0:	400a8a00 	call	400a8a0 <__udivsi3>
 400a2e4:	100b883a 	mov	r5,r2
 400a2e8:	b809883a 	mov	r4,r23
 400a2ec:	8822943a 	slli	r17,r17,16
 400a2f0:	400a95c0 	call	400a95c <__mulsi3>
 400a2f4:	a0ffffcc 	andi	r3,r20,65535
 400a2f8:	1c46b03a 	or	r3,r3,r17
 400a2fc:	1880042e 	bgeu	r3,r2,400a310 <__umoddi3+0x12c>
 400a300:	1cc7883a 	add	r3,r3,r19
 400a304:	1cc00236 	bltu	r3,r19,400a310 <__umoddi3+0x12c>
 400a308:	1880012e 	bgeu	r3,r2,400a310 <__umoddi3+0x12c>
 400a30c:	1cc7883a 	add	r3,r3,r19
 400a310:	1885c83a 	sub	r2,r3,r2
 400a314:	1484d83a 	srl	r2,r2,r18
 400a318:	0007883a 	mov	r3,zero
 400a31c:	00005306 	br	400a46c <__umoddi3+0x288>
 400a320:	29c05036 	bltu	r5,r7,400a464 <__umoddi3+0x280>
 400a324:	00bfffd4 	movui	r2,65535
 400a328:	11c05c2e 	bgeu	r2,r7,400a49c <__umoddi3+0x2b8>
 400a32c:	00804034 	movhi	r2,256
 400a330:	10bfffc4 	addi	r2,r2,-1
 400a334:	11c10636 	bltu	r2,r7,400a750 <__umoddi3+0x56c>
 400a338:	01000404 	movi	r4,16
 400a33c:	3904d83a 	srl	r2,r7,r4
 400a340:	00c10074 	movhi	r3,1025
 400a344:	18fec204 	addi	r3,r3,-1272
 400a348:	1885883a 	add	r2,r3,r2
 400a34c:	14c00003 	ldbu	r19,0(r2)
 400a350:	00c00804 	movi	r3,32
 400a354:	9927883a 	add	r19,r19,r4
 400a358:	1ce9c83a 	sub	r20,r3,r19
 400a35c:	a0005c1e 	bne	r20,zero,400a4d0 <__umoddi3+0x2ec>
 400a360:	3c400136 	bltu	r7,r17,400a368 <__umoddi3+0x184>
 400a364:	81810a36 	bltu	r16,r6,400a790 <__umoddi3+0x5ac>
 400a368:	8185c83a 	sub	r2,r16,r6
 400a36c:	89e3c83a 	sub	r17,r17,r7
 400a370:	8089803a 	cmpltu	r4,r16,r2
 400a374:	8939c83a 	sub	fp,r17,r4
 400a378:	e007883a 	mov	r3,fp
 400a37c:	00003b06 	br	400a46c <__umoddi3+0x288>
 400a380:	3000041e 	bne	r6,zero,400a394 <__umoddi3+0x1b0>
 400a384:	000b883a 	mov	r5,zero
 400a388:	01000044 	movi	r4,1
 400a38c:	400a8a00 	call	400a8a0 <__udivsi3>
 400a390:	1027883a 	mov	r19,r2
 400a394:	00bfffd4 	movui	r2,65535
 400a398:	14c0442e 	bgeu	r2,r19,400a4ac <__umoddi3+0x2c8>
 400a39c:	00804034 	movhi	r2,256
 400a3a0:	10bfffc4 	addi	r2,r2,-1
 400a3a4:	14c0ec36 	bltu	r2,r19,400a758 <__umoddi3+0x574>
 400a3a8:	00800404 	movi	r2,16
 400a3ac:	9886d83a 	srl	r3,r19,r2
 400a3b0:	01010074 	movhi	r4,1025
 400a3b4:	213ec204 	addi	r4,r4,-1272
 400a3b8:	20c7883a 	add	r3,r4,r3
 400a3bc:	18c00003 	ldbu	r3,0(r3)
 400a3c0:	1887883a 	add	r3,r3,r2
 400a3c4:	00800804 	movi	r2,32
 400a3c8:	10e5c83a 	sub	r18,r2,r3
 400a3cc:	9000ab1e 	bne	r18,zero,400a67c <__umoddi3+0x498>
 400a3d0:	982cd43a 	srli	r22,r19,16
 400a3d4:	8ce3c83a 	sub	r17,r17,r19
 400a3d8:	9dffffcc 	andi	r23,r19,65535
 400a3dc:	b00b883a 	mov	r5,r22
 400a3e0:	8809883a 	mov	r4,r17
 400a3e4:	400a9040 	call	400a904 <__umodsi3>
 400a3e8:	b00b883a 	mov	r5,r22
 400a3ec:	8809883a 	mov	r4,r17
 400a3f0:	102b883a 	mov	r21,r2
 400a3f4:	400a8a00 	call	400a8a0 <__udivsi3>
 400a3f8:	b80b883a 	mov	r5,r23
 400a3fc:	1009883a 	mov	r4,r2
 400a400:	400a95c0 	call	400a95c <__mulsi3>
 400a404:	a82a943a 	slli	r21,r21,16
 400a408:	a006d43a 	srli	r3,r20,16
 400a40c:	1d46b03a 	or	r3,r3,r21
 400a410:	1880042e 	bgeu	r3,r2,400a424 <__umoddi3+0x240>
 400a414:	1cc7883a 	add	r3,r3,r19
 400a418:	1cc00236 	bltu	r3,r19,400a424 <__umoddi3+0x240>
 400a41c:	1880012e 	bgeu	r3,r2,400a424 <__umoddi3+0x240>
 400a420:	1cc7883a 	add	r3,r3,r19
 400a424:	18a1c83a 	sub	r16,r3,r2
 400a428:	b00b883a 	mov	r5,r22
 400a42c:	8009883a 	mov	r4,r16
 400a430:	400a9040 	call	400a904 <__umodsi3>
 400a434:	1023883a 	mov	r17,r2
 400a438:	b00b883a 	mov	r5,r22
 400a43c:	8009883a 	mov	r4,r16
 400a440:	400a8a00 	call	400a8a0 <__udivsi3>
 400a444:	8822943a 	slli	r17,r17,16
 400a448:	b80b883a 	mov	r5,r23
 400a44c:	1009883a 	mov	r4,r2
 400a450:	400a95c0 	call	400a95c <__mulsi3>
 400a454:	a53fffcc 	andi	r20,r20,65535
 400a458:	a446b03a 	or	r3,r20,r17
 400a45c:	18bfac2e 	bgeu	r3,r2,400a310 <__alt_mem_onchip_memory+0xfc002310>
 400a460:	003fa706 	br	400a300 <__alt_mem_onchip_memory+0xfc002300>
 400a464:	2005883a 	mov	r2,r4
 400a468:	2807883a 	mov	r3,r5
 400a46c:	dfc00c17 	ldw	ra,48(sp)
 400a470:	df000b17 	ldw	fp,44(sp)
 400a474:	ddc00a17 	ldw	r23,40(sp)
 400a478:	dd800917 	ldw	r22,36(sp)
 400a47c:	dd400817 	ldw	r21,32(sp)
 400a480:	dd000717 	ldw	r20,28(sp)
 400a484:	dcc00617 	ldw	r19,24(sp)
 400a488:	dc800517 	ldw	r18,20(sp)
 400a48c:	dc400417 	ldw	r17,16(sp)
 400a490:	dc000317 	ldw	r16,12(sp)
 400a494:	dec00d04 	addi	sp,sp,52
 400a498:	f800283a 	ret
 400a49c:	04c03fc4 	movi	r19,255
 400a4a0:	99c9803a 	cmpltu	r4,r19,r7
 400a4a4:	200890fa 	slli	r4,r4,3
 400a4a8:	003fa406 	br	400a33c <__alt_mem_onchip_memory+0xfc00233c>
 400a4ac:	00803fc4 	movi	r2,255
 400a4b0:	14c5803a 	cmpltu	r2,r2,r19
 400a4b4:	100490fa 	slli	r2,r2,3
 400a4b8:	003fbc06 	br	400a3ac <__alt_mem_onchip_memory+0xfc0023ac>
 400a4bc:	00804034 	movhi	r2,256
 400a4c0:	10bfffc4 	addi	r2,r2,-1
 400a4c4:	1180a636 	bltu	r2,r6,400a760 <__umoddi3+0x57c>
 400a4c8:	01000404 	movi	r4,16
 400a4cc:	003f5c06 	br	400a240 <__alt_mem_onchip_memory+0xfc002240>
 400a4d0:	3d0e983a 	sll	r7,r7,r20
 400a4d4:	34ead83a 	srl	r21,r6,r19
 400a4d8:	8cc6d83a 	srl	r3,r17,r19
 400a4dc:	8d10983a 	sll	r8,r17,r20
 400a4e0:	3d6ab03a 	or	r21,r7,r21
 400a4e4:	a82cd43a 	srli	r22,r21,16
 400a4e8:	84e2d83a 	srl	r17,r16,r19
 400a4ec:	1809883a 	mov	r4,r3
 400a4f0:	b00b883a 	mov	r5,r22
 400a4f4:	8a22b03a 	or	r17,r17,r8
 400a4f8:	3524983a 	sll	r18,r6,r20
 400a4fc:	dc400015 	stw	r17,0(sp)
 400a500:	d8c00115 	stw	r3,4(sp)
 400a504:	400a9040 	call	400a904 <__umodsi3>
 400a508:	d8c00117 	ldw	r3,4(sp)
 400a50c:	b00b883a 	mov	r5,r22
 400a510:	1039883a 	mov	fp,r2
 400a514:	1809883a 	mov	r4,r3
 400a518:	400a8a00 	call	400a8a0 <__udivsi3>
 400a51c:	adffffcc 	andi	r23,r21,65535
 400a520:	100b883a 	mov	r5,r2
 400a524:	b809883a 	mov	r4,r23
 400a528:	1023883a 	mov	r17,r2
 400a52c:	400a95c0 	call	400a95c <__mulsi3>
 400a530:	d9400017 	ldw	r5,0(sp)
 400a534:	e008943a 	slli	r4,fp,16
 400a538:	8520983a 	sll	r16,r16,r20
 400a53c:	2806d43a 	srli	r3,r5,16
 400a540:	1906b03a 	or	r3,r3,r4
 400a544:	1880042e 	bgeu	r3,r2,400a558 <__umoddi3+0x374>
 400a548:	1d47883a 	add	r3,r3,r21
 400a54c:	893fffc4 	addi	r4,r17,-1
 400a550:	1d40892e 	bgeu	r3,r21,400a778 <__umoddi3+0x594>
 400a554:	2023883a 	mov	r17,r4
 400a558:	18b9c83a 	sub	fp,r3,r2
 400a55c:	b00b883a 	mov	r5,r22
 400a560:	e009883a 	mov	r4,fp
 400a564:	400a9040 	call	400a904 <__umodsi3>
 400a568:	b00b883a 	mov	r5,r22
 400a56c:	e009883a 	mov	r4,fp
 400a570:	d8800215 	stw	r2,8(sp)
 400a574:	400a8a00 	call	400a8a0 <__udivsi3>
 400a578:	100b883a 	mov	r5,r2
 400a57c:	b809883a 	mov	r4,r23
 400a580:	102d883a 	mov	r22,r2
 400a584:	400a95c0 	call	400a95c <__mulsi3>
 400a588:	d9800217 	ldw	r6,8(sp)
 400a58c:	d8c00017 	ldw	r3,0(sp)
 400a590:	300c943a 	slli	r6,r6,16
 400a594:	1a3fffcc 	andi	r8,r3,65535
 400a598:	4190b03a 	or	r8,r8,r6
 400a59c:	4080042e 	bgeu	r8,r2,400a5b0 <__umoddi3+0x3cc>
 400a5a0:	4551883a 	add	r8,r8,r21
 400a5a4:	b0ffffc4 	addi	r3,r22,-1
 400a5a8:	45406f2e 	bgeu	r8,r21,400a768 <__umoddi3+0x584>
 400a5ac:	182d883a 	mov	r22,r3
 400a5b0:	880e943a 	slli	r7,r17,16
 400a5b4:	9006d43a 	srli	r3,r18,16
 400a5b8:	91bfffcc 	andi	r6,r18,65535
 400a5bc:	3dacb03a 	or	r22,r7,r22
 400a5c0:	b02ed43a 	srli	r23,r22,16
 400a5c4:	b5bfffcc 	andi	r22,r22,65535
 400a5c8:	300b883a 	mov	r5,r6
 400a5cc:	b009883a 	mov	r4,r22
 400a5d0:	40a3c83a 	sub	r17,r8,r2
 400a5d4:	d8c00115 	stw	r3,4(sp)
 400a5d8:	d9800215 	stw	r6,8(sp)
 400a5dc:	400a95c0 	call	400a95c <__mulsi3>
 400a5e0:	d9800217 	ldw	r6,8(sp)
 400a5e4:	b809883a 	mov	r4,r23
 400a5e8:	1039883a 	mov	fp,r2
 400a5ec:	300b883a 	mov	r5,r6
 400a5f0:	400a95c0 	call	400a95c <__mulsi3>
 400a5f4:	d8c00117 	ldw	r3,4(sp)
 400a5f8:	b809883a 	mov	r4,r23
 400a5fc:	d8800215 	stw	r2,8(sp)
 400a600:	180b883a 	mov	r5,r3
 400a604:	400a95c0 	call	400a95c <__mulsi3>
 400a608:	d8c00117 	ldw	r3,4(sp)
 400a60c:	b009883a 	mov	r4,r22
 400a610:	102f883a 	mov	r23,r2
 400a614:	180b883a 	mov	r5,r3
 400a618:	400a95c0 	call	400a95c <__mulsi3>
 400a61c:	d9800217 	ldw	r6,8(sp)
 400a620:	e006d43a 	srli	r3,fp,16
 400a624:	1185883a 	add	r2,r2,r6
 400a628:	1885883a 	add	r2,r3,r2
 400a62c:	1180022e 	bgeu	r2,r6,400a638 <__umoddi3+0x454>
 400a630:	00c00074 	movhi	r3,1
 400a634:	b8ef883a 	add	r23,r23,r3
 400a638:	1006d43a 	srli	r3,r2,16
 400a63c:	1004943a 	slli	r2,r2,16
 400a640:	e73fffcc 	andi	fp,fp,65535
 400a644:	1dc7883a 	add	r3,r3,r23
 400a648:	1739883a 	add	fp,r2,fp
 400a64c:	88c03a36 	bltu	r17,r3,400a738 <__umoddi3+0x554>
 400a650:	88c05126 	beq	r17,r3,400a798 <__umoddi3+0x5b4>
 400a654:	88c9c83a 	sub	r4,r17,r3
 400a658:	e00f883a 	mov	r7,fp
 400a65c:	81cfc83a 	sub	r7,r16,r7
 400a660:	81c7803a 	cmpltu	r3,r16,r7
 400a664:	20c7c83a 	sub	r3,r4,r3
 400a668:	1cc4983a 	sll	r2,r3,r19
 400a66c:	3d0ed83a 	srl	r7,r7,r20
 400a670:	1d06d83a 	srl	r3,r3,r20
 400a674:	11c4b03a 	or	r2,r2,r7
 400a678:	003f7c06 	br	400a46c <__alt_mem_onchip_memory+0xfc00246c>
 400a67c:	9ca6983a 	sll	r19,r19,r18
 400a680:	88f8d83a 	srl	fp,r17,r3
 400a684:	80c4d83a 	srl	r2,r16,r3
 400a688:	982cd43a 	srli	r22,r19,16
 400a68c:	8ca2983a 	sll	r17,r17,r18
 400a690:	e009883a 	mov	r4,fp
 400a694:	b00b883a 	mov	r5,r22
 400a698:	146ab03a 	or	r21,r2,r17
 400a69c:	400a9040 	call	400a904 <__umodsi3>
 400a6a0:	b00b883a 	mov	r5,r22
 400a6a4:	e009883a 	mov	r4,fp
 400a6a8:	1029883a 	mov	r20,r2
 400a6ac:	9dffffcc 	andi	r23,r19,65535
 400a6b0:	400a8a00 	call	400a8a0 <__udivsi3>
 400a6b4:	b809883a 	mov	r4,r23
 400a6b8:	100b883a 	mov	r5,r2
 400a6bc:	400a95c0 	call	400a95c <__mulsi3>
 400a6c0:	a008943a 	slli	r4,r20,16
 400a6c4:	a806d43a 	srli	r3,r21,16
 400a6c8:	84a8983a 	sll	r20,r16,r18
 400a6cc:	1906b03a 	or	r3,r3,r4
 400a6d0:	1880042e 	bgeu	r3,r2,400a6e4 <__umoddi3+0x500>
 400a6d4:	1cc7883a 	add	r3,r3,r19
 400a6d8:	1cc00236 	bltu	r3,r19,400a6e4 <__umoddi3+0x500>
 400a6dc:	1880012e 	bgeu	r3,r2,400a6e4 <__umoddi3+0x500>
 400a6e0:	1cc7883a 	add	r3,r3,r19
 400a6e4:	18a3c83a 	sub	r17,r3,r2
 400a6e8:	b00b883a 	mov	r5,r22
 400a6ec:	8809883a 	mov	r4,r17
 400a6f0:	400a9040 	call	400a904 <__umodsi3>
 400a6f4:	b00b883a 	mov	r5,r22
 400a6f8:	8809883a 	mov	r4,r17
 400a6fc:	1021883a 	mov	r16,r2
 400a700:	400a8a00 	call	400a8a0 <__udivsi3>
 400a704:	100b883a 	mov	r5,r2
 400a708:	b809883a 	mov	r4,r23
 400a70c:	8020943a 	slli	r16,r16,16
 400a710:	400a95c0 	call	400a95c <__mulsi3>
 400a714:	a8ffffcc 	andi	r3,r21,65535
 400a718:	1c06b03a 	or	r3,r3,r16
 400a71c:	1880042e 	bgeu	r3,r2,400a730 <__umoddi3+0x54c>
 400a720:	1cc7883a 	add	r3,r3,r19
 400a724:	1cc00236 	bltu	r3,r19,400a730 <__umoddi3+0x54c>
 400a728:	1880012e 	bgeu	r3,r2,400a730 <__umoddi3+0x54c>
 400a72c:	1cc7883a 	add	r3,r3,r19
 400a730:	18a3c83a 	sub	r17,r3,r2
 400a734:	003f2906 	br	400a3dc <__alt_mem_onchip_memory+0xfc0023dc>
 400a738:	e48fc83a 	sub	r7,fp,r18
 400a73c:	1d49c83a 	sub	r4,r3,r21
 400a740:	e1f9803a 	cmpltu	fp,fp,r7
 400a744:	2739c83a 	sub	fp,r4,fp
 400a748:	8f09c83a 	sub	r4,r17,fp
 400a74c:	003fc306 	br	400a65c <__alt_mem_onchip_memory+0xfc00265c>
 400a750:	01000604 	movi	r4,24
 400a754:	003ef906 	br	400a33c <__alt_mem_onchip_memory+0xfc00233c>
 400a758:	00800604 	movi	r2,24
 400a75c:	003f1306 	br	400a3ac <__alt_mem_onchip_memory+0xfc0023ac>
 400a760:	01000604 	movi	r4,24
 400a764:	003eb606 	br	400a240 <__alt_mem_onchip_memory+0xfc002240>
 400a768:	40bf902e 	bgeu	r8,r2,400a5ac <__alt_mem_onchip_memory+0xfc0025ac>
 400a76c:	b5bfff84 	addi	r22,r22,-2
 400a770:	4551883a 	add	r8,r8,r21
 400a774:	003f8e06 	br	400a5b0 <__alt_mem_onchip_memory+0xfc0025b0>
 400a778:	18bf762e 	bgeu	r3,r2,400a554 <__alt_mem_onchip_memory+0xfc002554>
 400a77c:	8c7fff84 	addi	r17,r17,-2
 400a780:	1d47883a 	add	r3,r3,r21
 400a784:	003f7406 	br	400a558 <__alt_mem_onchip_memory+0xfc002558>
 400a788:	1cc7883a 	add	r3,r3,r19
 400a78c:	003ecd06 	br	400a2c4 <__alt_mem_onchip_memory+0xfc0022c4>
 400a790:	8005883a 	mov	r2,r16
 400a794:	003ef806 	br	400a378 <__alt_mem_onchip_memory+0xfc002378>
 400a798:	873fe736 	bltu	r16,fp,400a738 <__alt_mem_onchip_memory+0xfc002738>
 400a79c:	e00f883a 	mov	r7,fp
 400a7a0:	0009883a 	mov	r4,zero
 400a7a4:	003fad06 	br	400a65c <__alt_mem_onchip_memory+0xfc00265c>

0400a7a8 <__divsi3>:
 400a7a8:	20001b16 	blt	r4,zero,400a818 <__divsi3+0x70>
 400a7ac:	000f883a 	mov	r7,zero
 400a7b0:	28001616 	blt	r5,zero,400a80c <__divsi3+0x64>
 400a7b4:	200d883a 	mov	r6,r4
 400a7b8:	29001a2e 	bgeu	r5,r4,400a824 <__divsi3+0x7c>
 400a7bc:	00800804 	movi	r2,32
 400a7c0:	00c00044 	movi	r3,1
 400a7c4:	00000106 	br	400a7cc <__divsi3+0x24>
 400a7c8:	10000d26 	beq	r2,zero,400a800 <__divsi3+0x58>
 400a7cc:	294b883a 	add	r5,r5,r5
 400a7d0:	10bfffc4 	addi	r2,r2,-1
 400a7d4:	18c7883a 	add	r3,r3,r3
 400a7d8:	293ffb36 	bltu	r5,r4,400a7c8 <__alt_mem_onchip_memory+0xfc0027c8>
 400a7dc:	0005883a 	mov	r2,zero
 400a7e0:	18000726 	beq	r3,zero,400a800 <__divsi3+0x58>
 400a7e4:	0005883a 	mov	r2,zero
 400a7e8:	31400236 	bltu	r6,r5,400a7f4 <__divsi3+0x4c>
 400a7ec:	314dc83a 	sub	r6,r6,r5
 400a7f0:	10c4b03a 	or	r2,r2,r3
 400a7f4:	1806d07a 	srli	r3,r3,1
 400a7f8:	280ad07a 	srli	r5,r5,1
 400a7fc:	183ffa1e 	bne	r3,zero,400a7e8 <__alt_mem_onchip_memory+0xfc0027e8>
 400a800:	38000126 	beq	r7,zero,400a808 <__divsi3+0x60>
 400a804:	0085c83a 	sub	r2,zero,r2
 400a808:	f800283a 	ret
 400a80c:	014bc83a 	sub	r5,zero,r5
 400a810:	39c0005c 	xori	r7,r7,1
 400a814:	003fe706 	br	400a7b4 <__alt_mem_onchip_memory+0xfc0027b4>
 400a818:	0109c83a 	sub	r4,zero,r4
 400a81c:	01c00044 	movi	r7,1
 400a820:	003fe306 	br	400a7b0 <__alt_mem_onchip_memory+0xfc0027b0>
 400a824:	00c00044 	movi	r3,1
 400a828:	003fee06 	br	400a7e4 <__alt_mem_onchip_memory+0xfc0027e4>

0400a82c <__modsi3>:
 400a82c:	20001716 	blt	r4,zero,400a88c <__modsi3+0x60>
 400a830:	000f883a 	mov	r7,zero
 400a834:	2005883a 	mov	r2,r4
 400a838:	28001216 	blt	r5,zero,400a884 <__modsi3+0x58>
 400a83c:	2900162e 	bgeu	r5,r4,400a898 <__modsi3+0x6c>
 400a840:	01800804 	movi	r6,32
 400a844:	00c00044 	movi	r3,1
 400a848:	00000106 	br	400a850 <__modsi3+0x24>
 400a84c:	30000a26 	beq	r6,zero,400a878 <__modsi3+0x4c>
 400a850:	294b883a 	add	r5,r5,r5
 400a854:	31bfffc4 	addi	r6,r6,-1
 400a858:	18c7883a 	add	r3,r3,r3
 400a85c:	293ffb36 	bltu	r5,r4,400a84c <__alt_mem_onchip_memory+0xfc00284c>
 400a860:	18000526 	beq	r3,zero,400a878 <__modsi3+0x4c>
 400a864:	1806d07a 	srli	r3,r3,1
 400a868:	11400136 	bltu	r2,r5,400a870 <__modsi3+0x44>
 400a86c:	1145c83a 	sub	r2,r2,r5
 400a870:	280ad07a 	srli	r5,r5,1
 400a874:	183ffb1e 	bne	r3,zero,400a864 <__alt_mem_onchip_memory+0xfc002864>
 400a878:	38000126 	beq	r7,zero,400a880 <__modsi3+0x54>
 400a87c:	0085c83a 	sub	r2,zero,r2
 400a880:	f800283a 	ret
 400a884:	014bc83a 	sub	r5,zero,r5
 400a888:	003fec06 	br	400a83c <__alt_mem_onchip_memory+0xfc00283c>
 400a88c:	0109c83a 	sub	r4,zero,r4
 400a890:	01c00044 	movi	r7,1
 400a894:	003fe706 	br	400a834 <__alt_mem_onchip_memory+0xfc002834>
 400a898:	00c00044 	movi	r3,1
 400a89c:	003ff106 	br	400a864 <__alt_mem_onchip_memory+0xfc002864>

0400a8a0 <__udivsi3>:
 400a8a0:	200d883a 	mov	r6,r4
 400a8a4:	2900152e 	bgeu	r5,r4,400a8fc <__udivsi3+0x5c>
 400a8a8:	28001416 	blt	r5,zero,400a8fc <__udivsi3+0x5c>
 400a8ac:	00800804 	movi	r2,32
 400a8b0:	00c00044 	movi	r3,1
 400a8b4:	00000206 	br	400a8c0 <__udivsi3+0x20>
 400a8b8:	10000e26 	beq	r2,zero,400a8f4 <__udivsi3+0x54>
 400a8bc:	28000516 	blt	r5,zero,400a8d4 <__udivsi3+0x34>
 400a8c0:	294b883a 	add	r5,r5,r5
 400a8c4:	10bfffc4 	addi	r2,r2,-1
 400a8c8:	18c7883a 	add	r3,r3,r3
 400a8cc:	293ffa36 	bltu	r5,r4,400a8b8 <__alt_mem_onchip_memory+0xfc0028b8>
 400a8d0:	18000826 	beq	r3,zero,400a8f4 <__udivsi3+0x54>
 400a8d4:	0005883a 	mov	r2,zero
 400a8d8:	31400236 	bltu	r6,r5,400a8e4 <__udivsi3+0x44>
 400a8dc:	314dc83a 	sub	r6,r6,r5
 400a8e0:	10c4b03a 	or	r2,r2,r3
 400a8e4:	1806d07a 	srli	r3,r3,1
 400a8e8:	280ad07a 	srli	r5,r5,1
 400a8ec:	183ffa1e 	bne	r3,zero,400a8d8 <__alt_mem_onchip_memory+0xfc0028d8>
 400a8f0:	f800283a 	ret
 400a8f4:	0005883a 	mov	r2,zero
 400a8f8:	f800283a 	ret
 400a8fc:	00c00044 	movi	r3,1
 400a900:	003ff406 	br	400a8d4 <__alt_mem_onchip_memory+0xfc0028d4>

0400a904 <__umodsi3>:
 400a904:	2005883a 	mov	r2,r4
 400a908:	2900122e 	bgeu	r5,r4,400a954 <__umodsi3+0x50>
 400a90c:	28001116 	blt	r5,zero,400a954 <__umodsi3+0x50>
 400a910:	01800804 	movi	r6,32
 400a914:	00c00044 	movi	r3,1
 400a918:	00000206 	br	400a924 <__umodsi3+0x20>
 400a91c:	30000c26 	beq	r6,zero,400a950 <__umodsi3+0x4c>
 400a920:	28000516 	blt	r5,zero,400a938 <__umodsi3+0x34>
 400a924:	294b883a 	add	r5,r5,r5
 400a928:	31bfffc4 	addi	r6,r6,-1
 400a92c:	18c7883a 	add	r3,r3,r3
 400a930:	293ffa36 	bltu	r5,r4,400a91c <__alt_mem_onchip_memory+0xfc00291c>
 400a934:	18000626 	beq	r3,zero,400a950 <__umodsi3+0x4c>
 400a938:	1806d07a 	srli	r3,r3,1
 400a93c:	11400136 	bltu	r2,r5,400a944 <__umodsi3+0x40>
 400a940:	1145c83a 	sub	r2,r2,r5
 400a944:	280ad07a 	srli	r5,r5,1
 400a948:	183ffb1e 	bne	r3,zero,400a938 <__alt_mem_onchip_memory+0xfc002938>
 400a94c:	f800283a 	ret
 400a950:	f800283a 	ret
 400a954:	00c00044 	movi	r3,1
 400a958:	003ff706 	br	400a938 <__alt_mem_onchip_memory+0xfc002938>

0400a95c <__mulsi3>:
 400a95c:	0005883a 	mov	r2,zero
 400a960:	20000726 	beq	r4,zero,400a980 <__mulsi3+0x24>
 400a964:	20c0004c 	andi	r3,r4,1
 400a968:	2008d07a 	srli	r4,r4,1
 400a96c:	18000126 	beq	r3,zero,400a974 <__mulsi3+0x18>
 400a970:	1145883a 	add	r2,r2,r5
 400a974:	294b883a 	add	r5,r5,r5
 400a978:	203ffa1e 	bne	r4,zero,400a964 <__alt_mem_onchip_memory+0xfc002964>
 400a97c:	f800283a 	ret
 400a980:	f800283a 	ret

0400a984 <__adddf3>:
 400a984:	02c00434 	movhi	r11,16
 400a988:	5affffc4 	addi	r11,r11,-1
 400a98c:	2806d7fa 	srli	r3,r5,31
 400a990:	2ad4703a 	and	r10,r5,r11
 400a994:	3ad2703a 	and	r9,r7,r11
 400a998:	3804d53a 	srli	r2,r7,20
 400a99c:	3018d77a 	srli	r12,r6,29
 400a9a0:	280ad53a 	srli	r5,r5,20
 400a9a4:	501490fa 	slli	r10,r10,3
 400a9a8:	2010d77a 	srli	r8,r4,29
 400a9ac:	481290fa 	slli	r9,r9,3
 400a9b0:	380ed7fa 	srli	r7,r7,31
 400a9b4:	defffb04 	addi	sp,sp,-20
 400a9b8:	dc800215 	stw	r18,8(sp)
 400a9bc:	dc400115 	stw	r17,4(sp)
 400a9c0:	dc000015 	stw	r16,0(sp)
 400a9c4:	dfc00415 	stw	ra,16(sp)
 400a9c8:	dcc00315 	stw	r19,12(sp)
 400a9cc:	1c803fcc 	andi	r18,r3,255
 400a9d0:	2c01ffcc 	andi	r16,r5,2047
 400a9d4:	5210b03a 	or	r8,r10,r8
 400a9d8:	202290fa 	slli	r17,r4,3
 400a9dc:	1081ffcc 	andi	r2,r2,2047
 400a9e0:	4b12b03a 	or	r9,r9,r12
 400a9e4:	300c90fa 	slli	r6,r6,3
 400a9e8:	91c07526 	beq	r18,r7,400abc0 <__adddf3+0x23c>
 400a9ec:	8087c83a 	sub	r3,r16,r2
 400a9f0:	00c0ab0e 	bge	zero,r3,400aca0 <__adddf3+0x31c>
 400a9f4:	10002a1e 	bne	r2,zero,400aaa0 <__adddf3+0x11c>
 400a9f8:	4984b03a 	or	r2,r9,r6
 400a9fc:	1000961e 	bne	r2,zero,400ac58 <__adddf3+0x2d4>
 400aa00:	888001cc 	andi	r2,r17,7
 400aa04:	10000726 	beq	r2,zero,400aa24 <__adddf3+0xa0>
 400aa08:	888003cc 	andi	r2,r17,15
 400aa0c:	00c00104 	movi	r3,4
 400aa10:	10c00426 	beq	r2,r3,400aa24 <__adddf3+0xa0>
 400aa14:	88c7883a 	add	r3,r17,r3
 400aa18:	1c63803a 	cmpltu	r17,r3,r17
 400aa1c:	4451883a 	add	r8,r8,r17
 400aa20:	1823883a 	mov	r17,r3
 400aa24:	4080202c 	andhi	r2,r8,128
 400aa28:	10005926 	beq	r2,zero,400ab90 <__adddf3+0x20c>
 400aa2c:	84000044 	addi	r16,r16,1
 400aa30:	0081ffc4 	movi	r2,2047
 400aa34:	8080ba26 	beq	r16,r2,400ad20 <__adddf3+0x39c>
 400aa38:	00bfe034 	movhi	r2,65408
 400aa3c:	10bfffc4 	addi	r2,r2,-1
 400aa40:	4090703a 	and	r8,r8,r2
 400aa44:	4004977a 	slli	r2,r8,29
 400aa48:	4010927a 	slli	r8,r8,9
 400aa4c:	8822d0fa 	srli	r17,r17,3
 400aa50:	8401ffcc 	andi	r16,r16,2047
 400aa54:	4010d33a 	srli	r8,r8,12
 400aa58:	9007883a 	mov	r3,r18
 400aa5c:	1444b03a 	or	r2,r2,r17
 400aa60:	8401ffcc 	andi	r16,r16,2047
 400aa64:	8020953a 	slli	r16,r16,20
 400aa68:	18c03fcc 	andi	r3,r3,255
 400aa6c:	01000434 	movhi	r4,16
 400aa70:	213fffc4 	addi	r4,r4,-1
 400aa74:	180697fa 	slli	r3,r3,31
 400aa78:	4110703a 	and	r8,r8,r4
 400aa7c:	4410b03a 	or	r8,r8,r16
 400aa80:	40c6b03a 	or	r3,r8,r3
 400aa84:	dfc00417 	ldw	ra,16(sp)
 400aa88:	dcc00317 	ldw	r19,12(sp)
 400aa8c:	dc800217 	ldw	r18,8(sp)
 400aa90:	dc400117 	ldw	r17,4(sp)
 400aa94:	dc000017 	ldw	r16,0(sp)
 400aa98:	dec00504 	addi	sp,sp,20
 400aa9c:	f800283a 	ret
 400aaa0:	0081ffc4 	movi	r2,2047
 400aaa4:	80bfd626 	beq	r16,r2,400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400aaa8:	4a402034 	orhi	r9,r9,128
 400aaac:	00800e04 	movi	r2,56
 400aab0:	10c09f16 	blt	r2,r3,400ad30 <__adddf3+0x3ac>
 400aab4:	008007c4 	movi	r2,31
 400aab8:	10c0c216 	blt	r2,r3,400adc4 <__adddf3+0x440>
 400aabc:	00800804 	movi	r2,32
 400aac0:	10c5c83a 	sub	r2,r2,r3
 400aac4:	488a983a 	sll	r5,r9,r2
 400aac8:	30c8d83a 	srl	r4,r6,r3
 400aacc:	3084983a 	sll	r2,r6,r2
 400aad0:	48c6d83a 	srl	r3,r9,r3
 400aad4:	290cb03a 	or	r6,r5,r4
 400aad8:	1004c03a 	cmpne	r2,r2,zero
 400aadc:	308cb03a 	or	r6,r6,r2
 400aae0:	898dc83a 	sub	r6,r17,r6
 400aae4:	89a3803a 	cmpltu	r17,r17,r6
 400aae8:	40d1c83a 	sub	r8,r8,r3
 400aaec:	4451c83a 	sub	r8,r8,r17
 400aaf0:	3023883a 	mov	r17,r6
 400aaf4:	4080202c 	andhi	r2,r8,128
 400aaf8:	10002326 	beq	r2,zero,400ab88 <__adddf3+0x204>
 400aafc:	04c02034 	movhi	r19,128
 400ab00:	9cffffc4 	addi	r19,r19,-1
 400ab04:	44e6703a 	and	r19,r8,r19
 400ab08:	98007626 	beq	r19,zero,400ace4 <__adddf3+0x360>
 400ab0c:	9809883a 	mov	r4,r19
 400ab10:	400d1c40 	call	400d1c4 <__clzsi2>
 400ab14:	10fffe04 	addi	r3,r2,-8
 400ab18:	010007c4 	movi	r4,31
 400ab1c:	20c07716 	blt	r4,r3,400acfc <__adddf3+0x378>
 400ab20:	00800804 	movi	r2,32
 400ab24:	10c5c83a 	sub	r2,r2,r3
 400ab28:	8884d83a 	srl	r2,r17,r2
 400ab2c:	98d0983a 	sll	r8,r19,r3
 400ab30:	88e2983a 	sll	r17,r17,r3
 400ab34:	1204b03a 	or	r2,r2,r8
 400ab38:	1c007416 	blt	r3,r16,400ad0c <__adddf3+0x388>
 400ab3c:	1c21c83a 	sub	r16,r3,r16
 400ab40:	82000044 	addi	r8,r16,1
 400ab44:	00c007c4 	movi	r3,31
 400ab48:	1a009116 	blt	r3,r8,400ad90 <__adddf3+0x40c>
 400ab4c:	00c00804 	movi	r3,32
 400ab50:	1a07c83a 	sub	r3,r3,r8
 400ab54:	8a08d83a 	srl	r4,r17,r8
 400ab58:	88e2983a 	sll	r17,r17,r3
 400ab5c:	10c6983a 	sll	r3,r2,r3
 400ab60:	1210d83a 	srl	r8,r2,r8
 400ab64:	8804c03a 	cmpne	r2,r17,zero
 400ab68:	1906b03a 	or	r3,r3,r4
 400ab6c:	18a2b03a 	or	r17,r3,r2
 400ab70:	0021883a 	mov	r16,zero
 400ab74:	003fa206 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ab78:	1890b03a 	or	r8,r3,r2
 400ab7c:	40017d26 	beq	r8,zero,400b174 <__adddf3+0x7f0>
 400ab80:	1011883a 	mov	r8,r2
 400ab84:	1823883a 	mov	r17,r3
 400ab88:	888001cc 	andi	r2,r17,7
 400ab8c:	103f9e1e 	bne	r2,zero,400aa08 <__alt_mem_onchip_memory+0xfc002a08>
 400ab90:	4004977a 	slli	r2,r8,29
 400ab94:	8822d0fa 	srli	r17,r17,3
 400ab98:	4010d0fa 	srli	r8,r8,3
 400ab9c:	9007883a 	mov	r3,r18
 400aba0:	1444b03a 	or	r2,r2,r17
 400aba4:	0101ffc4 	movi	r4,2047
 400aba8:	81002426 	beq	r16,r4,400ac3c <__adddf3+0x2b8>
 400abac:	8120703a 	and	r16,r16,r4
 400abb0:	01000434 	movhi	r4,16
 400abb4:	213fffc4 	addi	r4,r4,-1
 400abb8:	4110703a 	and	r8,r8,r4
 400abbc:	003fa806 	br	400aa60 <__alt_mem_onchip_memory+0xfc002a60>
 400abc0:	8089c83a 	sub	r4,r16,r2
 400abc4:	01005e0e 	bge	zero,r4,400ad40 <__adddf3+0x3bc>
 400abc8:	10002b26 	beq	r2,zero,400ac78 <__adddf3+0x2f4>
 400abcc:	0081ffc4 	movi	r2,2047
 400abd0:	80bf8b26 	beq	r16,r2,400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400abd4:	4a402034 	orhi	r9,r9,128
 400abd8:	00800e04 	movi	r2,56
 400abdc:	1100a40e 	bge	r2,r4,400ae70 <__adddf3+0x4ec>
 400abe0:	498cb03a 	or	r6,r9,r6
 400abe4:	300ac03a 	cmpne	r5,r6,zero
 400abe8:	0013883a 	mov	r9,zero
 400abec:	2c4b883a 	add	r5,r5,r17
 400abf0:	2c63803a 	cmpltu	r17,r5,r17
 400abf4:	4a11883a 	add	r8,r9,r8
 400abf8:	8a11883a 	add	r8,r17,r8
 400abfc:	2823883a 	mov	r17,r5
 400ac00:	4080202c 	andhi	r2,r8,128
 400ac04:	103fe026 	beq	r2,zero,400ab88 <__alt_mem_onchip_memory+0xfc002b88>
 400ac08:	84000044 	addi	r16,r16,1
 400ac0c:	0081ffc4 	movi	r2,2047
 400ac10:	8080d226 	beq	r16,r2,400af5c <__adddf3+0x5d8>
 400ac14:	00bfe034 	movhi	r2,65408
 400ac18:	10bfffc4 	addi	r2,r2,-1
 400ac1c:	4090703a 	and	r8,r8,r2
 400ac20:	880ad07a 	srli	r5,r17,1
 400ac24:	400897fa 	slli	r4,r8,31
 400ac28:	88c0004c 	andi	r3,r17,1
 400ac2c:	28e2b03a 	or	r17,r5,r3
 400ac30:	4010d07a 	srli	r8,r8,1
 400ac34:	2462b03a 	or	r17,r4,r17
 400ac38:	003f7106 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ac3c:	4088b03a 	or	r4,r8,r2
 400ac40:	20014526 	beq	r4,zero,400b158 <__adddf3+0x7d4>
 400ac44:	01000434 	movhi	r4,16
 400ac48:	42000234 	orhi	r8,r8,8
 400ac4c:	213fffc4 	addi	r4,r4,-1
 400ac50:	4110703a 	and	r8,r8,r4
 400ac54:	003f8206 	br	400aa60 <__alt_mem_onchip_memory+0xfc002a60>
 400ac58:	18ffffc4 	addi	r3,r3,-1
 400ac5c:	1800491e 	bne	r3,zero,400ad84 <__adddf3+0x400>
 400ac60:	898bc83a 	sub	r5,r17,r6
 400ac64:	8963803a 	cmpltu	r17,r17,r5
 400ac68:	4251c83a 	sub	r8,r8,r9
 400ac6c:	4451c83a 	sub	r8,r8,r17
 400ac70:	2823883a 	mov	r17,r5
 400ac74:	003f9f06 	br	400aaf4 <__alt_mem_onchip_memory+0xfc002af4>
 400ac78:	4984b03a 	or	r2,r9,r6
 400ac7c:	103f6026 	beq	r2,zero,400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ac80:	213fffc4 	addi	r4,r4,-1
 400ac84:	2000931e 	bne	r4,zero,400aed4 <__adddf3+0x550>
 400ac88:	898d883a 	add	r6,r17,r6
 400ac8c:	3463803a 	cmpltu	r17,r6,r17
 400ac90:	4251883a 	add	r8,r8,r9
 400ac94:	8a11883a 	add	r8,r17,r8
 400ac98:	3023883a 	mov	r17,r6
 400ac9c:	003fd806 	br	400ac00 <__alt_mem_onchip_memory+0xfc002c00>
 400aca0:	1800541e 	bne	r3,zero,400adf4 <__adddf3+0x470>
 400aca4:	80800044 	addi	r2,r16,1
 400aca8:	1081ffcc 	andi	r2,r2,2047
 400acac:	00c00044 	movi	r3,1
 400acb0:	1880a00e 	bge	r3,r2,400af34 <__adddf3+0x5b0>
 400acb4:	8989c83a 	sub	r4,r17,r6
 400acb8:	8905803a 	cmpltu	r2,r17,r4
 400acbc:	4267c83a 	sub	r19,r8,r9
 400acc0:	98a7c83a 	sub	r19,r19,r2
 400acc4:	9880202c 	andhi	r2,r19,128
 400acc8:	10006326 	beq	r2,zero,400ae58 <__adddf3+0x4d4>
 400accc:	3463c83a 	sub	r17,r6,r17
 400acd0:	4a07c83a 	sub	r3,r9,r8
 400acd4:	344d803a 	cmpltu	r6,r6,r17
 400acd8:	19a7c83a 	sub	r19,r3,r6
 400acdc:	3825883a 	mov	r18,r7
 400ace0:	983f8a1e 	bne	r19,zero,400ab0c <__alt_mem_onchip_memory+0xfc002b0c>
 400ace4:	8809883a 	mov	r4,r17
 400ace8:	400d1c40 	call	400d1c4 <__clzsi2>
 400acec:	10800804 	addi	r2,r2,32
 400acf0:	10fffe04 	addi	r3,r2,-8
 400acf4:	010007c4 	movi	r4,31
 400acf8:	20ff890e 	bge	r4,r3,400ab20 <__alt_mem_onchip_memory+0xfc002b20>
 400acfc:	10bff604 	addi	r2,r2,-40
 400ad00:	8884983a 	sll	r2,r17,r2
 400ad04:	0023883a 	mov	r17,zero
 400ad08:	1c3f8c0e 	bge	r3,r16,400ab3c <__alt_mem_onchip_memory+0xfc002b3c>
 400ad0c:	023fe034 	movhi	r8,65408
 400ad10:	423fffc4 	addi	r8,r8,-1
 400ad14:	80e1c83a 	sub	r16,r16,r3
 400ad18:	1210703a 	and	r8,r2,r8
 400ad1c:	003f3806 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ad20:	9007883a 	mov	r3,r18
 400ad24:	0011883a 	mov	r8,zero
 400ad28:	0005883a 	mov	r2,zero
 400ad2c:	003f4c06 	br	400aa60 <__alt_mem_onchip_memory+0xfc002a60>
 400ad30:	498cb03a 	or	r6,r9,r6
 400ad34:	300cc03a 	cmpne	r6,r6,zero
 400ad38:	0007883a 	mov	r3,zero
 400ad3c:	003f6806 	br	400aae0 <__alt_mem_onchip_memory+0xfc002ae0>
 400ad40:	20009c1e 	bne	r4,zero,400afb4 <__adddf3+0x630>
 400ad44:	80800044 	addi	r2,r16,1
 400ad48:	1141ffcc 	andi	r5,r2,2047
 400ad4c:	01000044 	movi	r4,1
 400ad50:	2140670e 	bge	r4,r5,400aef0 <__adddf3+0x56c>
 400ad54:	0101ffc4 	movi	r4,2047
 400ad58:	11007f26 	beq	r2,r4,400af58 <__adddf3+0x5d4>
 400ad5c:	898d883a 	add	r6,r17,r6
 400ad60:	4247883a 	add	r3,r8,r9
 400ad64:	3451803a 	cmpltu	r8,r6,r17
 400ad68:	40d1883a 	add	r8,r8,r3
 400ad6c:	402297fa 	slli	r17,r8,31
 400ad70:	300cd07a 	srli	r6,r6,1
 400ad74:	4010d07a 	srli	r8,r8,1
 400ad78:	1021883a 	mov	r16,r2
 400ad7c:	89a2b03a 	or	r17,r17,r6
 400ad80:	003f1f06 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ad84:	0081ffc4 	movi	r2,2047
 400ad88:	80bf481e 	bne	r16,r2,400aaac <__alt_mem_onchip_memory+0xfc002aac>
 400ad8c:	003f1c06 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400ad90:	843ff844 	addi	r16,r16,-31
 400ad94:	01000804 	movi	r4,32
 400ad98:	1406d83a 	srl	r3,r2,r16
 400ad9c:	41005026 	beq	r8,r4,400aee0 <__adddf3+0x55c>
 400ada0:	01001004 	movi	r4,64
 400ada4:	2211c83a 	sub	r8,r4,r8
 400ada8:	1204983a 	sll	r2,r2,r8
 400adac:	88a2b03a 	or	r17,r17,r2
 400adb0:	8822c03a 	cmpne	r17,r17,zero
 400adb4:	1c62b03a 	or	r17,r3,r17
 400adb8:	0011883a 	mov	r8,zero
 400adbc:	0021883a 	mov	r16,zero
 400adc0:	003f7106 	br	400ab88 <__alt_mem_onchip_memory+0xfc002b88>
 400adc4:	193ff804 	addi	r4,r3,-32
 400adc8:	00800804 	movi	r2,32
 400adcc:	4908d83a 	srl	r4,r9,r4
 400add0:	18804526 	beq	r3,r2,400aee8 <__adddf3+0x564>
 400add4:	00801004 	movi	r2,64
 400add8:	10c5c83a 	sub	r2,r2,r3
 400addc:	4886983a 	sll	r3,r9,r2
 400ade0:	198cb03a 	or	r6,r3,r6
 400ade4:	300cc03a 	cmpne	r6,r6,zero
 400ade8:	218cb03a 	or	r6,r4,r6
 400adec:	0007883a 	mov	r3,zero
 400adf0:	003f3b06 	br	400aae0 <__alt_mem_onchip_memory+0xfc002ae0>
 400adf4:	80002a26 	beq	r16,zero,400aea0 <__adddf3+0x51c>
 400adf8:	0101ffc4 	movi	r4,2047
 400adfc:	11006826 	beq	r2,r4,400afa0 <__adddf3+0x61c>
 400ae00:	00c7c83a 	sub	r3,zero,r3
 400ae04:	42002034 	orhi	r8,r8,128
 400ae08:	01000e04 	movi	r4,56
 400ae0c:	20c07c16 	blt	r4,r3,400b000 <__adddf3+0x67c>
 400ae10:	010007c4 	movi	r4,31
 400ae14:	20c0da16 	blt	r4,r3,400b180 <__adddf3+0x7fc>
 400ae18:	01000804 	movi	r4,32
 400ae1c:	20c9c83a 	sub	r4,r4,r3
 400ae20:	4114983a 	sll	r10,r8,r4
 400ae24:	88cad83a 	srl	r5,r17,r3
 400ae28:	8908983a 	sll	r4,r17,r4
 400ae2c:	40c6d83a 	srl	r3,r8,r3
 400ae30:	5162b03a 	or	r17,r10,r5
 400ae34:	2008c03a 	cmpne	r4,r4,zero
 400ae38:	8922b03a 	or	r17,r17,r4
 400ae3c:	3463c83a 	sub	r17,r6,r17
 400ae40:	48c7c83a 	sub	r3,r9,r3
 400ae44:	344d803a 	cmpltu	r6,r6,r17
 400ae48:	1991c83a 	sub	r8,r3,r6
 400ae4c:	1021883a 	mov	r16,r2
 400ae50:	3825883a 	mov	r18,r7
 400ae54:	003f2706 	br	400aaf4 <__alt_mem_onchip_memory+0xfc002af4>
 400ae58:	24d0b03a 	or	r8,r4,r19
 400ae5c:	40001b1e 	bne	r8,zero,400aecc <__adddf3+0x548>
 400ae60:	0005883a 	mov	r2,zero
 400ae64:	0007883a 	mov	r3,zero
 400ae68:	0021883a 	mov	r16,zero
 400ae6c:	003f4d06 	br	400aba4 <__alt_mem_onchip_memory+0xfc002ba4>
 400ae70:	008007c4 	movi	r2,31
 400ae74:	11003c16 	blt	r2,r4,400af68 <__adddf3+0x5e4>
 400ae78:	00800804 	movi	r2,32
 400ae7c:	1105c83a 	sub	r2,r2,r4
 400ae80:	488e983a 	sll	r7,r9,r2
 400ae84:	310ad83a 	srl	r5,r6,r4
 400ae88:	3084983a 	sll	r2,r6,r2
 400ae8c:	4912d83a 	srl	r9,r9,r4
 400ae90:	394ab03a 	or	r5,r7,r5
 400ae94:	1004c03a 	cmpne	r2,r2,zero
 400ae98:	288ab03a 	or	r5,r5,r2
 400ae9c:	003f5306 	br	400abec <__alt_mem_onchip_memory+0xfc002bec>
 400aea0:	4448b03a 	or	r4,r8,r17
 400aea4:	20003e26 	beq	r4,zero,400afa0 <__adddf3+0x61c>
 400aea8:	00c6303a 	nor	r3,zero,r3
 400aeac:	18003a1e 	bne	r3,zero,400af98 <__adddf3+0x614>
 400aeb0:	3463c83a 	sub	r17,r6,r17
 400aeb4:	4a07c83a 	sub	r3,r9,r8
 400aeb8:	344d803a 	cmpltu	r6,r6,r17
 400aebc:	1991c83a 	sub	r8,r3,r6
 400aec0:	1021883a 	mov	r16,r2
 400aec4:	3825883a 	mov	r18,r7
 400aec8:	003f0a06 	br	400aaf4 <__alt_mem_onchip_memory+0xfc002af4>
 400aecc:	2023883a 	mov	r17,r4
 400aed0:	003f0d06 	br	400ab08 <__alt_mem_onchip_memory+0xfc002b08>
 400aed4:	0081ffc4 	movi	r2,2047
 400aed8:	80bf3f1e 	bne	r16,r2,400abd8 <__alt_mem_onchip_memory+0xfc002bd8>
 400aedc:	003ec806 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400aee0:	0005883a 	mov	r2,zero
 400aee4:	003fb106 	br	400adac <__alt_mem_onchip_memory+0xfc002dac>
 400aee8:	0007883a 	mov	r3,zero
 400aeec:	003fbc06 	br	400ade0 <__alt_mem_onchip_memory+0xfc002de0>
 400aef0:	4444b03a 	or	r2,r8,r17
 400aef4:	8000871e 	bne	r16,zero,400b114 <__adddf3+0x790>
 400aef8:	1000ba26 	beq	r2,zero,400b1e4 <__adddf3+0x860>
 400aefc:	4984b03a 	or	r2,r9,r6
 400af00:	103ebf26 	beq	r2,zero,400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400af04:	8985883a 	add	r2,r17,r6
 400af08:	4247883a 	add	r3,r8,r9
 400af0c:	1451803a 	cmpltu	r8,r2,r17
 400af10:	40d1883a 	add	r8,r8,r3
 400af14:	40c0202c 	andhi	r3,r8,128
 400af18:	1023883a 	mov	r17,r2
 400af1c:	183f1a26 	beq	r3,zero,400ab88 <__alt_mem_onchip_memory+0xfc002b88>
 400af20:	00bfe034 	movhi	r2,65408
 400af24:	10bfffc4 	addi	r2,r2,-1
 400af28:	2021883a 	mov	r16,r4
 400af2c:	4090703a 	and	r8,r8,r2
 400af30:	003eb306 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400af34:	4444b03a 	or	r2,r8,r17
 400af38:	8000291e 	bne	r16,zero,400afe0 <__adddf3+0x65c>
 400af3c:	10004b1e 	bne	r2,zero,400b06c <__adddf3+0x6e8>
 400af40:	4990b03a 	or	r8,r9,r6
 400af44:	40008b26 	beq	r8,zero,400b174 <__adddf3+0x7f0>
 400af48:	4811883a 	mov	r8,r9
 400af4c:	3023883a 	mov	r17,r6
 400af50:	3825883a 	mov	r18,r7
 400af54:	003eaa06 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400af58:	1021883a 	mov	r16,r2
 400af5c:	0011883a 	mov	r8,zero
 400af60:	0005883a 	mov	r2,zero
 400af64:	003f0f06 	br	400aba4 <__alt_mem_onchip_memory+0xfc002ba4>
 400af68:	217ff804 	addi	r5,r4,-32
 400af6c:	00800804 	movi	r2,32
 400af70:	494ad83a 	srl	r5,r9,r5
 400af74:	20807d26 	beq	r4,r2,400b16c <__adddf3+0x7e8>
 400af78:	00801004 	movi	r2,64
 400af7c:	1109c83a 	sub	r4,r2,r4
 400af80:	4912983a 	sll	r9,r9,r4
 400af84:	498cb03a 	or	r6,r9,r6
 400af88:	300cc03a 	cmpne	r6,r6,zero
 400af8c:	298ab03a 	or	r5,r5,r6
 400af90:	0013883a 	mov	r9,zero
 400af94:	003f1506 	br	400abec <__alt_mem_onchip_memory+0xfc002bec>
 400af98:	0101ffc4 	movi	r4,2047
 400af9c:	113f9a1e 	bne	r2,r4,400ae08 <__alt_mem_onchip_memory+0xfc002e08>
 400afa0:	4811883a 	mov	r8,r9
 400afa4:	3023883a 	mov	r17,r6
 400afa8:	1021883a 	mov	r16,r2
 400afac:	3825883a 	mov	r18,r7
 400afb0:	003e9306 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400afb4:	8000161e 	bne	r16,zero,400b010 <__adddf3+0x68c>
 400afb8:	444ab03a 	or	r5,r8,r17
 400afbc:	28005126 	beq	r5,zero,400b104 <__adddf3+0x780>
 400afc0:	0108303a 	nor	r4,zero,r4
 400afc4:	20004d1e 	bne	r4,zero,400b0fc <__adddf3+0x778>
 400afc8:	89a3883a 	add	r17,r17,r6
 400afcc:	4253883a 	add	r9,r8,r9
 400afd0:	898d803a 	cmpltu	r6,r17,r6
 400afd4:	3251883a 	add	r8,r6,r9
 400afd8:	1021883a 	mov	r16,r2
 400afdc:	003f0806 	br	400ac00 <__alt_mem_onchip_memory+0xfc002c00>
 400afe0:	1000301e 	bne	r2,zero,400b0a4 <__adddf3+0x720>
 400afe4:	4984b03a 	or	r2,r9,r6
 400afe8:	10007126 	beq	r2,zero,400b1b0 <__adddf3+0x82c>
 400afec:	4811883a 	mov	r8,r9
 400aff0:	3023883a 	mov	r17,r6
 400aff4:	3825883a 	mov	r18,r7
 400aff8:	0401ffc4 	movi	r16,2047
 400affc:	003e8006 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b000:	4462b03a 	or	r17,r8,r17
 400b004:	8822c03a 	cmpne	r17,r17,zero
 400b008:	0007883a 	mov	r3,zero
 400b00c:	003f8b06 	br	400ae3c <__alt_mem_onchip_memory+0xfc002e3c>
 400b010:	0141ffc4 	movi	r5,2047
 400b014:	11403b26 	beq	r2,r5,400b104 <__adddf3+0x780>
 400b018:	0109c83a 	sub	r4,zero,r4
 400b01c:	42002034 	orhi	r8,r8,128
 400b020:	01400e04 	movi	r5,56
 400b024:	29006716 	blt	r5,r4,400b1c4 <__adddf3+0x840>
 400b028:	014007c4 	movi	r5,31
 400b02c:	29007016 	blt	r5,r4,400b1f0 <__adddf3+0x86c>
 400b030:	01400804 	movi	r5,32
 400b034:	290bc83a 	sub	r5,r5,r4
 400b038:	4154983a 	sll	r10,r8,r5
 400b03c:	890ed83a 	srl	r7,r17,r4
 400b040:	894a983a 	sll	r5,r17,r5
 400b044:	4108d83a 	srl	r4,r8,r4
 400b048:	51e2b03a 	or	r17,r10,r7
 400b04c:	280ac03a 	cmpne	r5,r5,zero
 400b050:	8962b03a 	or	r17,r17,r5
 400b054:	89a3883a 	add	r17,r17,r6
 400b058:	2253883a 	add	r9,r4,r9
 400b05c:	898d803a 	cmpltu	r6,r17,r6
 400b060:	3251883a 	add	r8,r6,r9
 400b064:	1021883a 	mov	r16,r2
 400b068:	003ee506 	br	400ac00 <__alt_mem_onchip_memory+0xfc002c00>
 400b06c:	4984b03a 	or	r2,r9,r6
 400b070:	103e6326 	beq	r2,zero,400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b074:	8987c83a 	sub	r3,r17,r6
 400b078:	88c9803a 	cmpltu	r4,r17,r3
 400b07c:	4245c83a 	sub	r2,r8,r9
 400b080:	1105c83a 	sub	r2,r2,r4
 400b084:	1100202c 	andhi	r4,r2,128
 400b088:	203ebb26 	beq	r4,zero,400ab78 <__alt_mem_onchip_memory+0xfc002b78>
 400b08c:	3463c83a 	sub	r17,r6,r17
 400b090:	4a07c83a 	sub	r3,r9,r8
 400b094:	344d803a 	cmpltu	r6,r6,r17
 400b098:	1991c83a 	sub	r8,r3,r6
 400b09c:	3825883a 	mov	r18,r7
 400b0a0:	003e5706 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b0a4:	4984b03a 	or	r2,r9,r6
 400b0a8:	10002e26 	beq	r2,zero,400b164 <__adddf3+0x7e0>
 400b0ac:	4004d0fa 	srli	r2,r8,3
 400b0b0:	8822d0fa 	srli	r17,r17,3
 400b0b4:	4010977a 	slli	r8,r8,29
 400b0b8:	10c0022c 	andhi	r3,r2,8
 400b0bc:	4462b03a 	or	r17,r8,r17
 400b0c0:	18000826 	beq	r3,zero,400b0e4 <__adddf3+0x760>
 400b0c4:	4808d0fa 	srli	r4,r9,3
 400b0c8:	20c0022c 	andhi	r3,r4,8
 400b0cc:	1800051e 	bne	r3,zero,400b0e4 <__adddf3+0x760>
 400b0d0:	300cd0fa 	srli	r6,r6,3
 400b0d4:	4806977a 	slli	r3,r9,29
 400b0d8:	2005883a 	mov	r2,r4
 400b0dc:	3825883a 	mov	r18,r7
 400b0e0:	19a2b03a 	or	r17,r3,r6
 400b0e4:	8810d77a 	srli	r8,r17,29
 400b0e8:	100490fa 	slli	r2,r2,3
 400b0ec:	882290fa 	slli	r17,r17,3
 400b0f0:	0401ffc4 	movi	r16,2047
 400b0f4:	4090b03a 	or	r8,r8,r2
 400b0f8:	003e4106 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b0fc:	0141ffc4 	movi	r5,2047
 400b100:	117fc71e 	bne	r2,r5,400b020 <__alt_mem_onchip_memory+0xfc003020>
 400b104:	4811883a 	mov	r8,r9
 400b108:	3023883a 	mov	r17,r6
 400b10c:	1021883a 	mov	r16,r2
 400b110:	003e3b06 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b114:	10002f26 	beq	r2,zero,400b1d4 <__adddf3+0x850>
 400b118:	4984b03a 	or	r2,r9,r6
 400b11c:	10001126 	beq	r2,zero,400b164 <__adddf3+0x7e0>
 400b120:	4004d0fa 	srli	r2,r8,3
 400b124:	8822d0fa 	srli	r17,r17,3
 400b128:	4010977a 	slli	r8,r8,29
 400b12c:	10c0022c 	andhi	r3,r2,8
 400b130:	4462b03a 	or	r17,r8,r17
 400b134:	183feb26 	beq	r3,zero,400b0e4 <__alt_mem_onchip_memory+0xfc0030e4>
 400b138:	4808d0fa 	srli	r4,r9,3
 400b13c:	20c0022c 	andhi	r3,r4,8
 400b140:	183fe81e 	bne	r3,zero,400b0e4 <__alt_mem_onchip_memory+0xfc0030e4>
 400b144:	300cd0fa 	srli	r6,r6,3
 400b148:	4806977a 	slli	r3,r9,29
 400b14c:	2005883a 	mov	r2,r4
 400b150:	19a2b03a 	or	r17,r3,r6
 400b154:	003fe306 	br	400b0e4 <__alt_mem_onchip_memory+0xfc0030e4>
 400b158:	0011883a 	mov	r8,zero
 400b15c:	0005883a 	mov	r2,zero
 400b160:	003e3f06 	br	400aa60 <__alt_mem_onchip_memory+0xfc002a60>
 400b164:	0401ffc4 	movi	r16,2047
 400b168:	003e2506 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b16c:	0013883a 	mov	r9,zero
 400b170:	003f8406 	br	400af84 <__alt_mem_onchip_memory+0xfc002f84>
 400b174:	0005883a 	mov	r2,zero
 400b178:	0007883a 	mov	r3,zero
 400b17c:	003e8906 	br	400aba4 <__alt_mem_onchip_memory+0xfc002ba4>
 400b180:	197ff804 	addi	r5,r3,-32
 400b184:	01000804 	movi	r4,32
 400b188:	414ad83a 	srl	r5,r8,r5
 400b18c:	19002426 	beq	r3,r4,400b220 <__adddf3+0x89c>
 400b190:	01001004 	movi	r4,64
 400b194:	20c7c83a 	sub	r3,r4,r3
 400b198:	40c6983a 	sll	r3,r8,r3
 400b19c:	1c46b03a 	or	r3,r3,r17
 400b1a0:	1806c03a 	cmpne	r3,r3,zero
 400b1a4:	28e2b03a 	or	r17,r5,r3
 400b1a8:	0007883a 	mov	r3,zero
 400b1ac:	003f2306 	br	400ae3c <__alt_mem_onchip_memory+0xfc002e3c>
 400b1b0:	0007883a 	mov	r3,zero
 400b1b4:	5811883a 	mov	r8,r11
 400b1b8:	00bfffc4 	movi	r2,-1
 400b1bc:	0401ffc4 	movi	r16,2047
 400b1c0:	003e7806 	br	400aba4 <__alt_mem_onchip_memory+0xfc002ba4>
 400b1c4:	4462b03a 	or	r17,r8,r17
 400b1c8:	8822c03a 	cmpne	r17,r17,zero
 400b1cc:	0009883a 	mov	r4,zero
 400b1d0:	003fa006 	br	400b054 <__alt_mem_onchip_memory+0xfc003054>
 400b1d4:	4811883a 	mov	r8,r9
 400b1d8:	3023883a 	mov	r17,r6
 400b1dc:	0401ffc4 	movi	r16,2047
 400b1e0:	003e0706 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b1e4:	4811883a 	mov	r8,r9
 400b1e8:	3023883a 	mov	r17,r6
 400b1ec:	003e0406 	br	400aa00 <__alt_mem_onchip_memory+0xfc002a00>
 400b1f0:	21fff804 	addi	r7,r4,-32
 400b1f4:	01400804 	movi	r5,32
 400b1f8:	41ced83a 	srl	r7,r8,r7
 400b1fc:	21400a26 	beq	r4,r5,400b228 <__adddf3+0x8a4>
 400b200:	01401004 	movi	r5,64
 400b204:	2909c83a 	sub	r4,r5,r4
 400b208:	4108983a 	sll	r4,r8,r4
 400b20c:	2448b03a 	or	r4,r4,r17
 400b210:	2008c03a 	cmpne	r4,r4,zero
 400b214:	3922b03a 	or	r17,r7,r4
 400b218:	0009883a 	mov	r4,zero
 400b21c:	003f8d06 	br	400b054 <__alt_mem_onchip_memory+0xfc003054>
 400b220:	0007883a 	mov	r3,zero
 400b224:	003fdd06 	br	400b19c <__alt_mem_onchip_memory+0xfc00319c>
 400b228:	0009883a 	mov	r4,zero
 400b22c:	003ff706 	br	400b20c <__alt_mem_onchip_memory+0xfc00320c>

0400b230 <__divdf3>:
 400b230:	defff004 	addi	sp,sp,-64
 400b234:	dc800815 	stw	r18,32(sp)
 400b238:	2824d53a 	srli	r18,r5,20
 400b23c:	dd800c15 	stw	r22,48(sp)
 400b240:	282cd7fa 	srli	r22,r5,31
 400b244:	dc000615 	stw	r16,24(sp)
 400b248:	04000434 	movhi	r16,16
 400b24c:	843fffc4 	addi	r16,r16,-1
 400b250:	dfc00f15 	stw	ra,60(sp)
 400b254:	df000e15 	stw	fp,56(sp)
 400b258:	ddc00d15 	stw	r23,52(sp)
 400b25c:	dd400b15 	stw	r21,44(sp)
 400b260:	dd000a15 	stw	r20,40(sp)
 400b264:	dcc00915 	stw	r19,36(sp)
 400b268:	dc400715 	stw	r17,28(sp)
 400b26c:	9481ffcc 	andi	r18,r18,2047
 400b270:	2c20703a 	and	r16,r5,r16
 400b274:	b2003fcc 	andi	r8,r22,255
 400b278:	90006126 	beq	r18,zero,400b400 <__divdf3+0x1d0>
 400b27c:	0081ffc4 	movi	r2,2047
 400b280:	202b883a 	mov	r21,r4
 400b284:	90803726 	beq	r18,r2,400b364 <__divdf3+0x134>
 400b288:	80800434 	orhi	r2,r16,16
 400b28c:	100490fa 	slli	r2,r2,3
 400b290:	2020d77a 	srli	r16,r4,29
 400b294:	202a90fa 	slli	r21,r4,3
 400b298:	94bf0044 	addi	r18,r18,-1023
 400b29c:	80a0b03a 	or	r16,r16,r2
 400b2a0:	0013883a 	mov	r9,zero
 400b2a4:	000b883a 	mov	r5,zero
 400b2a8:	3806d53a 	srli	r3,r7,20
 400b2ac:	382ed7fa 	srli	r23,r7,31
 400b2b0:	04400434 	movhi	r17,16
 400b2b4:	8c7fffc4 	addi	r17,r17,-1
 400b2b8:	18c1ffcc 	andi	r3,r3,2047
 400b2bc:	3029883a 	mov	r20,r6
 400b2c0:	3c62703a 	and	r17,r7,r17
 400b2c4:	bf003fcc 	andi	fp,r23,255
 400b2c8:	18006e26 	beq	r3,zero,400b484 <__divdf3+0x254>
 400b2cc:	0081ffc4 	movi	r2,2047
 400b2d0:	18806626 	beq	r3,r2,400b46c <__divdf3+0x23c>
 400b2d4:	88800434 	orhi	r2,r17,16
 400b2d8:	100490fa 	slli	r2,r2,3
 400b2dc:	3022d77a 	srli	r17,r6,29
 400b2e0:	302890fa 	slli	r20,r6,3
 400b2e4:	18ff0044 	addi	r3,r3,-1023
 400b2e8:	88a2b03a 	or	r17,r17,r2
 400b2ec:	000f883a 	mov	r7,zero
 400b2f0:	b5e6f03a 	xor	r19,r22,r23
 400b2f4:	3a4cb03a 	or	r6,r7,r9
 400b2f8:	008003c4 	movi	r2,15
 400b2fc:	9809883a 	mov	r4,r19
 400b300:	90c7c83a 	sub	r3,r18,r3
 400b304:	9cc03fcc 	andi	r19,r19,255
 400b308:	11809636 	bltu	r2,r6,400b564 <__divdf3+0x334>
 400b30c:	300c90ba 	slli	r6,r6,2
 400b310:	00810074 	movhi	r2,1025
 400b314:	10acc904 	addi	r2,r2,-19676
 400b318:	308d883a 	add	r6,r6,r2
 400b31c:	30800017 	ldw	r2,0(r6)
 400b320:	1000683a 	jmp	r2
 400b324:	0400b564 	muli	r16,zero,725
 400b328:	0400b39c 	xori	r16,zero,718
 400b32c:	0400b554 	movui	r16,725
 400b330:	0400b390 	cmplti	r16,zero,718
 400b334:	0400b554 	movui	r16,725
 400b338:	0400b528 	cmpgeui	r16,zero,724
 400b33c:	0400b554 	movui	r16,725
 400b340:	0400b390 	cmplti	r16,zero,718
 400b344:	0400b39c 	xori	r16,zero,718
 400b348:	0400b39c 	xori	r16,zero,718
 400b34c:	0400b528 	cmpgeui	r16,zero,724
 400b350:	0400b390 	cmplti	r16,zero,718
 400b354:	0400b380 	call	400b38 <__alt_mem_sdram-0x3bff4c8>
 400b358:	0400b380 	call	400b38 <__alt_mem_sdram-0x3bff4c8>
 400b35c:	0400b380 	call	400b38 <__alt_mem_sdram-0x3bff4c8>
 400b360:	0400b8ec 	andhi	r16,zero,739
 400b364:	2404b03a 	or	r2,r4,r16
 400b368:	10006c1e 	bne	r2,zero,400b51c <__divdf3+0x2ec>
 400b36c:	02400204 	movi	r9,8
 400b370:	0021883a 	mov	r16,zero
 400b374:	002b883a 	mov	r21,zero
 400b378:	01400084 	movi	r5,2
 400b37c:	003fca06 	br	400b2a8 <__alt_mem_onchip_memory+0xfc0032a8>
 400b380:	8023883a 	mov	r17,r16
 400b384:	a829883a 	mov	r20,r21
 400b388:	4039883a 	mov	fp,r8
 400b38c:	280f883a 	mov	r7,r5
 400b390:	00800084 	movi	r2,2
 400b394:	3881601e 	bne	r7,r2,400b918 <__divdf3+0x6e8>
 400b398:	e027883a 	mov	r19,fp
 400b39c:	9900004c 	andi	r4,r19,1
 400b3a0:	0081ffc4 	movi	r2,2047
 400b3a4:	0021883a 	mov	r16,zero
 400b3a8:	002b883a 	mov	r21,zero
 400b3ac:	1004953a 	slli	r2,r2,20
 400b3b0:	20c03fcc 	andi	r3,r4,255
 400b3b4:	01400434 	movhi	r5,16
 400b3b8:	297fffc4 	addi	r5,r5,-1
 400b3bc:	180697fa 	slli	r3,r3,31
 400b3c0:	8160703a 	and	r16,r16,r5
 400b3c4:	80a0b03a 	or	r16,r16,r2
 400b3c8:	80c6b03a 	or	r3,r16,r3
 400b3cc:	a805883a 	mov	r2,r21
 400b3d0:	dfc00f17 	ldw	ra,60(sp)
 400b3d4:	df000e17 	ldw	fp,56(sp)
 400b3d8:	ddc00d17 	ldw	r23,52(sp)
 400b3dc:	dd800c17 	ldw	r22,48(sp)
 400b3e0:	dd400b17 	ldw	r21,44(sp)
 400b3e4:	dd000a17 	ldw	r20,40(sp)
 400b3e8:	dcc00917 	ldw	r19,36(sp)
 400b3ec:	dc800817 	ldw	r18,32(sp)
 400b3f0:	dc400717 	ldw	r17,28(sp)
 400b3f4:	dc000617 	ldw	r16,24(sp)
 400b3f8:	dec01004 	addi	sp,sp,64
 400b3fc:	f800283a 	ret
 400b400:	2404b03a 	or	r2,r4,r16
 400b404:	2023883a 	mov	r17,r4
 400b408:	10003f26 	beq	r2,zero,400b508 <__divdf3+0x2d8>
 400b40c:	80015e26 	beq	r16,zero,400b988 <__divdf3+0x758>
 400b410:	8009883a 	mov	r4,r16
 400b414:	d9800215 	stw	r6,8(sp)
 400b418:	d9c00515 	stw	r7,20(sp)
 400b41c:	da000415 	stw	r8,16(sp)
 400b420:	400d1c40 	call	400d1c4 <__clzsi2>
 400b424:	d9800217 	ldw	r6,8(sp)
 400b428:	d9c00517 	ldw	r7,20(sp)
 400b42c:	da000417 	ldw	r8,16(sp)
 400b430:	113ffd44 	addi	r4,r2,-11
 400b434:	00c00704 	movi	r3,28
 400b438:	19014f16 	blt	r3,r4,400b978 <__divdf3+0x748>
 400b43c:	00c00744 	movi	r3,29
 400b440:	157ffe04 	addi	r21,r2,-8
 400b444:	1907c83a 	sub	r3,r3,r4
 400b448:	8560983a 	sll	r16,r16,r21
 400b44c:	88c6d83a 	srl	r3,r17,r3
 400b450:	8d6a983a 	sll	r21,r17,r21
 400b454:	1c20b03a 	or	r16,r3,r16
 400b458:	1080fcc4 	addi	r2,r2,1011
 400b45c:	00a5c83a 	sub	r18,zero,r2
 400b460:	0013883a 	mov	r9,zero
 400b464:	000b883a 	mov	r5,zero
 400b468:	003f8f06 	br	400b2a8 <__alt_mem_onchip_memory+0xfc0032a8>
 400b46c:	3444b03a 	or	r2,r6,r17
 400b470:	1000231e 	bne	r2,zero,400b500 <__divdf3+0x2d0>
 400b474:	0023883a 	mov	r17,zero
 400b478:	0029883a 	mov	r20,zero
 400b47c:	01c00084 	movi	r7,2
 400b480:	003f9b06 	br	400b2f0 <__alt_mem_onchip_memory+0xfc0032f0>
 400b484:	3444b03a 	or	r2,r6,r17
 400b488:	10001926 	beq	r2,zero,400b4f0 <__divdf3+0x2c0>
 400b48c:	88014b26 	beq	r17,zero,400b9bc <__divdf3+0x78c>
 400b490:	8809883a 	mov	r4,r17
 400b494:	d9400115 	stw	r5,4(sp)
 400b498:	d9800215 	stw	r6,8(sp)
 400b49c:	da000415 	stw	r8,16(sp)
 400b4a0:	da400315 	stw	r9,12(sp)
 400b4a4:	400d1c40 	call	400d1c4 <__clzsi2>
 400b4a8:	d9400117 	ldw	r5,4(sp)
 400b4ac:	d9800217 	ldw	r6,8(sp)
 400b4b0:	da000417 	ldw	r8,16(sp)
 400b4b4:	da400317 	ldw	r9,12(sp)
 400b4b8:	113ffd44 	addi	r4,r2,-11
 400b4bc:	00c00704 	movi	r3,28
 400b4c0:	19013a16 	blt	r3,r4,400b9ac <__divdf3+0x77c>
 400b4c4:	00c00744 	movi	r3,29
 400b4c8:	153ffe04 	addi	r20,r2,-8
 400b4cc:	1907c83a 	sub	r3,r3,r4
 400b4d0:	8d22983a 	sll	r17,r17,r20
 400b4d4:	30c6d83a 	srl	r3,r6,r3
 400b4d8:	3528983a 	sll	r20,r6,r20
 400b4dc:	1c62b03a 	or	r17,r3,r17
 400b4e0:	1080fcc4 	addi	r2,r2,1011
 400b4e4:	0087c83a 	sub	r3,zero,r2
 400b4e8:	000f883a 	mov	r7,zero
 400b4ec:	003f8006 	br	400b2f0 <__alt_mem_onchip_memory+0xfc0032f0>
 400b4f0:	0023883a 	mov	r17,zero
 400b4f4:	0029883a 	mov	r20,zero
 400b4f8:	01c00044 	movi	r7,1
 400b4fc:	003f7c06 	br	400b2f0 <__alt_mem_onchip_memory+0xfc0032f0>
 400b500:	01c000c4 	movi	r7,3
 400b504:	003f7a06 	br	400b2f0 <__alt_mem_onchip_memory+0xfc0032f0>
 400b508:	02400104 	movi	r9,4
 400b50c:	0021883a 	mov	r16,zero
 400b510:	002b883a 	mov	r21,zero
 400b514:	01400044 	movi	r5,1
 400b518:	003f6306 	br	400b2a8 <__alt_mem_onchip_memory+0xfc0032a8>
 400b51c:	02400304 	movi	r9,12
 400b520:	014000c4 	movi	r5,3
 400b524:	003f6006 	br	400b2a8 <__alt_mem_onchip_memory+0xfc0032a8>
 400b528:	04000434 	movhi	r16,16
 400b52c:	0009883a 	mov	r4,zero
 400b530:	843fffc4 	addi	r16,r16,-1
 400b534:	057fffc4 	movi	r21,-1
 400b538:	0081ffc4 	movi	r2,2047
 400b53c:	003f9b06 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400b540:	00c00044 	movi	r3,1
 400b544:	1887c83a 	sub	r3,r3,r2
 400b548:	01000e04 	movi	r4,56
 400b54c:	20c1530e 	bge	r4,r3,400ba9c <__divdf3+0x86c>
 400b550:	9900004c 	andi	r4,r19,1
 400b554:	0005883a 	mov	r2,zero
 400b558:	0021883a 	mov	r16,zero
 400b55c:	002b883a 	mov	r21,zero
 400b560:	003f9206 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400b564:	8c012e36 	bltu	r17,r16,400ba20 <__divdf3+0x7f0>
 400b568:	84412c26 	beq	r16,r17,400ba1c <__divdf3+0x7ec>
 400b56c:	a82f883a 	mov	r23,r21
 400b570:	18ffffc4 	addi	r3,r3,-1
 400b574:	002b883a 	mov	r21,zero
 400b578:	a004d63a 	srli	r2,r20,24
 400b57c:	8822923a 	slli	r17,r17,8
 400b580:	a028923a 	slli	r20,r20,8
 400b584:	8009883a 	mov	r4,r16
 400b588:	88acb03a 	or	r22,r17,r2
 400b58c:	dd000015 	stw	r20,0(sp)
 400b590:	b028d43a 	srli	r20,r22,16
 400b594:	d8c00215 	stw	r3,8(sp)
 400b598:	b4bfffcc 	andi	r18,r22,65535
 400b59c:	a00b883a 	mov	r5,r20
 400b5a0:	400a8a00 	call	400a8a0 <__udivsi3>
 400b5a4:	100b883a 	mov	r5,r2
 400b5a8:	9009883a 	mov	r4,r18
 400b5ac:	1023883a 	mov	r17,r2
 400b5b0:	400a95c0 	call	400a95c <__mulsi3>
 400b5b4:	8009883a 	mov	r4,r16
 400b5b8:	a00b883a 	mov	r5,r20
 400b5bc:	1039883a 	mov	fp,r2
 400b5c0:	400a9040 	call	400a904 <__umodsi3>
 400b5c4:	1004943a 	slli	r2,r2,16
 400b5c8:	b808d43a 	srli	r4,r23,16
 400b5cc:	d8c00217 	ldw	r3,8(sp)
 400b5d0:	2084b03a 	or	r2,r4,r2
 400b5d4:	1700062e 	bgeu	r2,fp,400b5f0 <__divdf3+0x3c0>
 400b5d8:	1585883a 	add	r2,r2,r22
 400b5dc:	893fffc4 	addi	r4,r17,-1
 400b5e0:	15811d36 	bltu	r2,r22,400ba58 <__divdf3+0x828>
 400b5e4:	17011c2e 	bgeu	r2,fp,400ba58 <__divdf3+0x828>
 400b5e8:	8c7fff84 	addi	r17,r17,-2
 400b5ec:	1585883a 	add	r2,r2,r22
 400b5f0:	1739c83a 	sub	fp,r2,fp
 400b5f4:	a00b883a 	mov	r5,r20
 400b5f8:	e009883a 	mov	r4,fp
 400b5fc:	d8c00215 	stw	r3,8(sp)
 400b600:	400a8a00 	call	400a8a0 <__udivsi3>
 400b604:	100b883a 	mov	r5,r2
 400b608:	9009883a 	mov	r4,r18
 400b60c:	1021883a 	mov	r16,r2
 400b610:	400a95c0 	call	400a95c <__mulsi3>
 400b614:	a00b883a 	mov	r5,r20
 400b618:	e009883a 	mov	r4,fp
 400b61c:	d8800415 	stw	r2,16(sp)
 400b620:	400a9040 	call	400a904 <__umodsi3>
 400b624:	1004943a 	slli	r2,r2,16
 400b628:	da000417 	ldw	r8,16(sp)
 400b62c:	bdffffcc 	andi	r23,r23,65535
 400b630:	b884b03a 	or	r2,r23,r2
 400b634:	d8c00217 	ldw	r3,8(sp)
 400b638:	1200062e 	bgeu	r2,r8,400b654 <__divdf3+0x424>
 400b63c:	1585883a 	add	r2,r2,r22
 400b640:	813fffc4 	addi	r4,r16,-1
 400b644:	15810236 	bltu	r2,r22,400ba50 <__divdf3+0x820>
 400b648:	1201012e 	bgeu	r2,r8,400ba50 <__divdf3+0x820>
 400b64c:	843fff84 	addi	r16,r16,-2
 400b650:	1585883a 	add	r2,r2,r22
 400b654:	8822943a 	slli	r17,r17,16
 400b658:	d9800017 	ldw	r6,0(sp)
 400b65c:	1211c83a 	sub	r8,r2,r8
 400b660:	8c22b03a 	or	r17,r17,r16
 400b664:	373fffcc 	andi	fp,r6,65535
 400b668:	8abfffcc 	andi	r10,r17,65535
 400b66c:	8820d43a 	srli	r16,r17,16
 400b670:	5009883a 	mov	r4,r10
 400b674:	e00b883a 	mov	r5,fp
 400b678:	302ed43a 	srli	r23,r6,16
 400b67c:	d8c00215 	stw	r3,8(sp)
 400b680:	da000415 	stw	r8,16(sp)
 400b684:	da800115 	stw	r10,4(sp)
 400b688:	400a95c0 	call	400a95c <__mulsi3>
 400b68c:	800b883a 	mov	r5,r16
 400b690:	e009883a 	mov	r4,fp
 400b694:	d8800515 	stw	r2,20(sp)
 400b698:	400a95c0 	call	400a95c <__mulsi3>
 400b69c:	8009883a 	mov	r4,r16
 400b6a0:	b80b883a 	mov	r5,r23
 400b6a4:	d8800315 	stw	r2,12(sp)
 400b6a8:	400a95c0 	call	400a95c <__mulsi3>
 400b6ac:	da800117 	ldw	r10,4(sp)
 400b6b0:	b80b883a 	mov	r5,r23
 400b6b4:	1021883a 	mov	r16,r2
 400b6b8:	5009883a 	mov	r4,r10
 400b6bc:	400a95c0 	call	400a95c <__mulsi3>
 400b6c0:	d9c00517 	ldw	r7,20(sp)
 400b6c4:	da400317 	ldw	r9,12(sp)
 400b6c8:	d8c00217 	ldw	r3,8(sp)
 400b6cc:	3808d43a 	srli	r4,r7,16
 400b6d0:	1245883a 	add	r2,r2,r9
 400b6d4:	da000417 	ldw	r8,16(sp)
 400b6d8:	2085883a 	add	r2,r4,r2
 400b6dc:	1240022e 	bgeu	r2,r9,400b6e8 <__divdf3+0x4b8>
 400b6e0:	01000074 	movhi	r4,1
 400b6e4:	8121883a 	add	r16,r16,r4
 400b6e8:	1008d43a 	srli	r4,r2,16
 400b6ec:	1004943a 	slli	r2,r2,16
 400b6f0:	39ffffcc 	andi	r7,r7,65535
 400b6f4:	2409883a 	add	r4,r4,r16
 400b6f8:	11c5883a 	add	r2,r2,r7
 400b6fc:	4100bb36 	bltu	r8,r4,400b9ec <__divdf3+0x7bc>
 400b700:	4100d726 	beq	r8,r4,400ba60 <__divdf3+0x830>
 400b704:	4109c83a 	sub	r4,r8,r4
 400b708:	a8a1c83a 	sub	r16,r21,r2
 400b70c:	ac2b803a 	cmpltu	r21,r21,r16
 400b710:	256bc83a 	sub	r21,r4,r21
 400b714:	b540d926 	beq	r22,r21,400ba7c <__divdf3+0x84c>
 400b718:	a00b883a 	mov	r5,r20
 400b71c:	a809883a 	mov	r4,r21
 400b720:	d8c00215 	stw	r3,8(sp)
 400b724:	400a8a00 	call	400a8a0 <__udivsi3>
 400b728:	100b883a 	mov	r5,r2
 400b72c:	9009883a 	mov	r4,r18
 400b730:	d8800515 	stw	r2,20(sp)
 400b734:	400a95c0 	call	400a95c <__mulsi3>
 400b738:	a809883a 	mov	r4,r21
 400b73c:	a00b883a 	mov	r5,r20
 400b740:	d8800415 	stw	r2,16(sp)
 400b744:	400a9040 	call	400a904 <__umodsi3>
 400b748:	1004943a 	slli	r2,r2,16
 400b74c:	8008d43a 	srli	r4,r16,16
 400b750:	da000417 	ldw	r8,16(sp)
 400b754:	d8c00217 	ldw	r3,8(sp)
 400b758:	2084b03a 	or	r2,r4,r2
 400b75c:	d9c00517 	ldw	r7,20(sp)
 400b760:	1200062e 	bgeu	r2,r8,400b77c <__divdf3+0x54c>
 400b764:	1585883a 	add	r2,r2,r22
 400b768:	393fffc4 	addi	r4,r7,-1
 400b76c:	1580c536 	bltu	r2,r22,400ba84 <__divdf3+0x854>
 400b770:	1200c42e 	bgeu	r2,r8,400ba84 <__divdf3+0x854>
 400b774:	39ffff84 	addi	r7,r7,-2
 400b778:	1585883a 	add	r2,r2,r22
 400b77c:	122bc83a 	sub	r21,r2,r8
 400b780:	a00b883a 	mov	r5,r20
 400b784:	a809883a 	mov	r4,r21
 400b788:	d8c00215 	stw	r3,8(sp)
 400b78c:	d9c00515 	stw	r7,20(sp)
 400b790:	400a8a00 	call	400a8a0 <__udivsi3>
 400b794:	9009883a 	mov	r4,r18
 400b798:	100b883a 	mov	r5,r2
 400b79c:	d8800415 	stw	r2,16(sp)
 400b7a0:	400a95c0 	call	400a95c <__mulsi3>
 400b7a4:	a809883a 	mov	r4,r21
 400b7a8:	a00b883a 	mov	r5,r20
 400b7ac:	1025883a 	mov	r18,r2
 400b7b0:	400a9040 	call	400a904 <__umodsi3>
 400b7b4:	1004943a 	slli	r2,r2,16
 400b7b8:	813fffcc 	andi	r4,r16,65535
 400b7bc:	d8c00217 	ldw	r3,8(sp)
 400b7c0:	20a0b03a 	or	r16,r4,r2
 400b7c4:	d9c00517 	ldw	r7,20(sp)
 400b7c8:	da000417 	ldw	r8,16(sp)
 400b7cc:	8480062e 	bgeu	r16,r18,400b7e8 <__divdf3+0x5b8>
 400b7d0:	85a1883a 	add	r16,r16,r22
 400b7d4:	40bfffc4 	addi	r2,r8,-1
 400b7d8:	8580ac36 	bltu	r16,r22,400ba8c <__divdf3+0x85c>
 400b7dc:	8480ab2e 	bgeu	r16,r18,400ba8c <__divdf3+0x85c>
 400b7e0:	423fff84 	addi	r8,r8,-2
 400b7e4:	85a1883a 	add	r16,r16,r22
 400b7e8:	3804943a 	slli	r2,r7,16
 400b7ec:	84a1c83a 	sub	r16,r16,r18
 400b7f0:	e009883a 	mov	r4,fp
 400b7f4:	1228b03a 	or	r20,r2,r8
 400b7f8:	a1ffffcc 	andi	r7,r20,65535
 400b7fc:	a024d43a 	srli	r18,r20,16
 400b800:	380b883a 	mov	r5,r7
 400b804:	d8c00215 	stw	r3,8(sp)
 400b808:	d9c00515 	stw	r7,20(sp)
 400b80c:	400a95c0 	call	400a95c <__mulsi3>
 400b810:	900b883a 	mov	r5,r18
 400b814:	e009883a 	mov	r4,fp
 400b818:	102b883a 	mov	r21,r2
 400b81c:	400a95c0 	call	400a95c <__mulsi3>
 400b820:	900b883a 	mov	r5,r18
 400b824:	b809883a 	mov	r4,r23
 400b828:	1039883a 	mov	fp,r2
 400b82c:	400a95c0 	call	400a95c <__mulsi3>
 400b830:	d9c00517 	ldw	r7,20(sp)
 400b834:	b80b883a 	mov	r5,r23
 400b838:	1025883a 	mov	r18,r2
 400b83c:	3809883a 	mov	r4,r7
 400b840:	400a95c0 	call	400a95c <__mulsi3>
 400b844:	a808d43a 	srli	r4,r21,16
 400b848:	1705883a 	add	r2,r2,fp
 400b84c:	d8c00217 	ldw	r3,8(sp)
 400b850:	2085883a 	add	r2,r4,r2
 400b854:	1700022e 	bgeu	r2,fp,400b860 <__divdf3+0x630>
 400b858:	01000074 	movhi	r4,1
 400b85c:	9125883a 	add	r18,r18,r4
 400b860:	1008d43a 	srli	r4,r2,16
 400b864:	1004943a 	slli	r2,r2,16
 400b868:	ad7fffcc 	andi	r21,r21,65535
 400b86c:	2489883a 	add	r4,r4,r18
 400b870:	1545883a 	add	r2,r2,r21
 400b874:	81003836 	bltu	r16,r4,400b958 <__divdf3+0x728>
 400b878:	81003626 	beq	r16,r4,400b954 <__divdf3+0x724>
 400b87c:	a5000054 	ori	r20,r20,1
 400b880:	1880ffc4 	addi	r2,r3,1023
 400b884:	00bf2e0e 	bge	zero,r2,400b540 <__alt_mem_onchip_memory+0xfc003540>
 400b888:	a10001cc 	andi	r4,r20,7
 400b88c:	20000726 	beq	r4,zero,400b8ac <__divdf3+0x67c>
 400b890:	a10003cc 	andi	r4,r20,15
 400b894:	01400104 	movi	r5,4
 400b898:	21400426 	beq	r4,r5,400b8ac <__divdf3+0x67c>
 400b89c:	a149883a 	add	r4,r20,r5
 400b8a0:	2529803a 	cmpltu	r20,r4,r20
 400b8a4:	8d23883a 	add	r17,r17,r20
 400b8a8:	2029883a 	mov	r20,r4
 400b8ac:	8900402c 	andhi	r4,r17,256
 400b8b0:	20000426 	beq	r4,zero,400b8c4 <__divdf3+0x694>
 400b8b4:	18810004 	addi	r2,r3,1024
 400b8b8:	00ffc034 	movhi	r3,65280
 400b8bc:	18ffffc4 	addi	r3,r3,-1
 400b8c0:	88e2703a 	and	r17,r17,r3
 400b8c4:	00c1ff84 	movi	r3,2046
 400b8c8:	18beb416 	blt	r3,r2,400b39c <__alt_mem_onchip_memory+0xfc00339c>
 400b8cc:	a028d0fa 	srli	r20,r20,3
 400b8d0:	882a977a 	slli	r21,r17,29
 400b8d4:	8820927a 	slli	r16,r17,9
 400b8d8:	1081ffcc 	andi	r2,r2,2047
 400b8dc:	ad2ab03a 	or	r21,r21,r20
 400b8e0:	8020d33a 	srli	r16,r16,12
 400b8e4:	9900004c 	andi	r4,r19,1
 400b8e8:	003eb006 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400b8ec:	8080022c 	andhi	r2,r16,8
 400b8f0:	10001226 	beq	r2,zero,400b93c <__divdf3+0x70c>
 400b8f4:	8880022c 	andhi	r2,r17,8
 400b8f8:	1000101e 	bne	r2,zero,400b93c <__divdf3+0x70c>
 400b8fc:	00800434 	movhi	r2,16
 400b900:	8c000234 	orhi	r16,r17,8
 400b904:	10bfffc4 	addi	r2,r2,-1
 400b908:	b809883a 	mov	r4,r23
 400b90c:	80a0703a 	and	r16,r16,r2
 400b910:	a02b883a 	mov	r21,r20
 400b914:	003f0806 	br	400b538 <__alt_mem_onchip_memory+0xfc003538>
 400b918:	008000c4 	movi	r2,3
 400b91c:	3880b126 	beq	r7,r2,400bbe4 <__divdf3+0x9b4>
 400b920:	00800044 	movi	r2,1
 400b924:	38805b1e 	bne	r7,r2,400ba94 <__divdf3+0x864>
 400b928:	e009883a 	mov	r4,fp
 400b92c:	0005883a 	mov	r2,zero
 400b930:	0021883a 	mov	r16,zero
 400b934:	002b883a 	mov	r21,zero
 400b938:	003e9c06 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400b93c:	00800434 	movhi	r2,16
 400b940:	84000234 	orhi	r16,r16,8
 400b944:	10bfffc4 	addi	r2,r2,-1
 400b948:	b009883a 	mov	r4,r22
 400b94c:	80a0703a 	and	r16,r16,r2
 400b950:	003ef906 	br	400b538 <__alt_mem_onchip_memory+0xfc003538>
 400b954:	103fca26 	beq	r2,zero,400b880 <__alt_mem_onchip_memory+0xfc003880>
 400b958:	b421883a 	add	r16,r22,r16
 400b95c:	a17fffc4 	addi	r5,r20,-1
 400b960:	8580422e 	bgeu	r16,r22,400ba6c <__divdf3+0x83c>
 400b964:	2829883a 	mov	r20,r5
 400b968:	813fc41e 	bne	r16,r4,400b87c <__alt_mem_onchip_memory+0xfc00387c>
 400b96c:	d9800017 	ldw	r6,0(sp)
 400b970:	30bfc21e 	bne	r6,r2,400b87c <__alt_mem_onchip_memory+0xfc00387c>
 400b974:	003fc206 	br	400b880 <__alt_mem_onchip_memory+0xfc003880>
 400b978:	143ff604 	addi	r16,r2,-40
 400b97c:	8c20983a 	sll	r16,r17,r16
 400b980:	002b883a 	mov	r21,zero
 400b984:	003eb406 	br	400b458 <__alt_mem_onchip_memory+0xfc003458>
 400b988:	d9800215 	stw	r6,8(sp)
 400b98c:	d9c00515 	stw	r7,20(sp)
 400b990:	da000415 	stw	r8,16(sp)
 400b994:	400d1c40 	call	400d1c4 <__clzsi2>
 400b998:	10800804 	addi	r2,r2,32
 400b99c:	da000417 	ldw	r8,16(sp)
 400b9a0:	d9c00517 	ldw	r7,20(sp)
 400b9a4:	d9800217 	ldw	r6,8(sp)
 400b9a8:	003ea106 	br	400b430 <__alt_mem_onchip_memory+0xfc003430>
 400b9ac:	147ff604 	addi	r17,r2,-40
 400b9b0:	3462983a 	sll	r17,r6,r17
 400b9b4:	0029883a 	mov	r20,zero
 400b9b8:	003ec906 	br	400b4e0 <__alt_mem_onchip_memory+0xfc0034e0>
 400b9bc:	3009883a 	mov	r4,r6
 400b9c0:	d9400115 	stw	r5,4(sp)
 400b9c4:	d9800215 	stw	r6,8(sp)
 400b9c8:	da000415 	stw	r8,16(sp)
 400b9cc:	da400315 	stw	r9,12(sp)
 400b9d0:	400d1c40 	call	400d1c4 <__clzsi2>
 400b9d4:	10800804 	addi	r2,r2,32
 400b9d8:	da400317 	ldw	r9,12(sp)
 400b9dc:	da000417 	ldw	r8,16(sp)
 400b9e0:	d9800217 	ldw	r6,8(sp)
 400b9e4:	d9400117 	ldw	r5,4(sp)
 400b9e8:	003eb306 	br	400b4b8 <__alt_mem_onchip_memory+0xfc0034b8>
 400b9ec:	d9800017 	ldw	r6,0(sp)
 400b9f0:	a9ab883a 	add	r21,r21,r6
 400b9f4:	a98b803a 	cmpltu	r5,r21,r6
 400b9f8:	2d8b883a 	add	r5,r5,r22
 400b9fc:	2a11883a 	add	r8,r5,r8
 400ba00:	897fffc4 	addi	r5,r17,-1
 400ba04:	b2000c2e 	bgeu	r22,r8,400ba38 <__divdf3+0x808>
 400ba08:	41003f36 	bltu	r8,r4,400bb08 <__divdf3+0x8d8>
 400ba0c:	22006c26 	beq	r4,r8,400bbc0 <__divdf3+0x990>
 400ba10:	4109c83a 	sub	r4,r8,r4
 400ba14:	2823883a 	mov	r17,r5
 400ba18:	003f3b06 	br	400b708 <__alt_mem_onchip_memory+0xfc003708>
 400ba1c:	ad3ed336 	bltu	r21,r20,400b56c <__alt_mem_onchip_memory+0xfc00356c>
 400ba20:	a804d07a 	srli	r2,r21,1
 400ba24:	802e97fa 	slli	r23,r16,31
 400ba28:	a82a97fa 	slli	r21,r21,31
 400ba2c:	8020d07a 	srli	r16,r16,1
 400ba30:	b8aeb03a 	or	r23,r23,r2
 400ba34:	003ed006 	br	400b578 <__alt_mem_onchip_memory+0xfc003578>
 400ba38:	b23ff51e 	bne	r22,r8,400ba10 <__alt_mem_onchip_memory+0xfc003a10>
 400ba3c:	d9800017 	ldw	r6,0(sp)
 400ba40:	a9bff12e 	bgeu	r21,r6,400ba08 <__alt_mem_onchip_memory+0xfc003a08>
 400ba44:	b109c83a 	sub	r4,r22,r4
 400ba48:	2823883a 	mov	r17,r5
 400ba4c:	003f2e06 	br	400b708 <__alt_mem_onchip_memory+0xfc003708>
 400ba50:	2021883a 	mov	r16,r4
 400ba54:	003eff06 	br	400b654 <__alt_mem_onchip_memory+0xfc003654>
 400ba58:	2023883a 	mov	r17,r4
 400ba5c:	003ee406 	br	400b5f0 <__alt_mem_onchip_memory+0xfc0035f0>
 400ba60:	a8bfe236 	bltu	r21,r2,400b9ec <__alt_mem_onchip_memory+0xfc0039ec>
 400ba64:	0009883a 	mov	r4,zero
 400ba68:	003f2706 	br	400b708 <__alt_mem_onchip_memory+0xfc003708>
 400ba6c:	81002d36 	bltu	r16,r4,400bb24 <__divdf3+0x8f4>
 400ba70:	24005626 	beq	r4,r16,400bbcc <__divdf3+0x99c>
 400ba74:	2829883a 	mov	r20,r5
 400ba78:	003f8006 	br	400b87c <__alt_mem_onchip_memory+0xfc00387c>
 400ba7c:	053fffc4 	movi	r20,-1
 400ba80:	003f7f06 	br	400b880 <__alt_mem_onchip_memory+0xfc003880>
 400ba84:	200f883a 	mov	r7,r4
 400ba88:	003f3c06 	br	400b77c <__alt_mem_onchip_memory+0xfc00377c>
 400ba8c:	1011883a 	mov	r8,r2
 400ba90:	003f5506 	br	400b7e8 <__alt_mem_onchip_memory+0xfc0037e8>
 400ba94:	e027883a 	mov	r19,fp
 400ba98:	003f7906 	br	400b880 <__alt_mem_onchip_memory+0xfc003880>
 400ba9c:	010007c4 	movi	r4,31
 400baa0:	20c02816 	blt	r4,r3,400bb44 <__divdf3+0x914>
 400baa4:	00800804 	movi	r2,32
 400baa8:	10c5c83a 	sub	r2,r2,r3
 400baac:	888a983a 	sll	r5,r17,r2
 400bab0:	a0c8d83a 	srl	r4,r20,r3
 400bab4:	a084983a 	sll	r2,r20,r2
 400bab8:	88e2d83a 	srl	r17,r17,r3
 400babc:	2906b03a 	or	r3,r5,r4
 400bac0:	1004c03a 	cmpne	r2,r2,zero
 400bac4:	1886b03a 	or	r3,r3,r2
 400bac8:	188001cc 	andi	r2,r3,7
 400bacc:	10000726 	beq	r2,zero,400baec <__divdf3+0x8bc>
 400bad0:	188003cc 	andi	r2,r3,15
 400bad4:	01000104 	movi	r4,4
 400bad8:	11000426 	beq	r2,r4,400baec <__divdf3+0x8bc>
 400badc:	1805883a 	mov	r2,r3
 400bae0:	10c00104 	addi	r3,r2,4
 400bae4:	1885803a 	cmpltu	r2,r3,r2
 400bae8:	88a3883a 	add	r17,r17,r2
 400baec:	8880202c 	andhi	r2,r17,128
 400baf0:	10002926 	beq	r2,zero,400bb98 <__divdf3+0x968>
 400baf4:	9900004c 	andi	r4,r19,1
 400baf8:	00800044 	movi	r2,1
 400bafc:	0021883a 	mov	r16,zero
 400bb00:	002b883a 	mov	r21,zero
 400bb04:	003e2906 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400bb08:	d9800017 	ldw	r6,0(sp)
 400bb0c:	8c7fff84 	addi	r17,r17,-2
 400bb10:	a9ab883a 	add	r21,r21,r6
 400bb14:	a98b803a 	cmpltu	r5,r21,r6
 400bb18:	2d8b883a 	add	r5,r5,r22
 400bb1c:	2a11883a 	add	r8,r5,r8
 400bb20:	003ef806 	br	400b704 <__alt_mem_onchip_memory+0xfc003704>
 400bb24:	d9800017 	ldw	r6,0(sp)
 400bb28:	318f883a 	add	r7,r6,r6
 400bb2c:	398b803a 	cmpltu	r5,r7,r6
 400bb30:	2d8d883a 	add	r6,r5,r22
 400bb34:	81a1883a 	add	r16,r16,r6
 400bb38:	a17fff84 	addi	r5,r20,-2
 400bb3c:	d9c00015 	stw	r7,0(sp)
 400bb40:	003f8806 	br	400b964 <__alt_mem_onchip_memory+0xfc003964>
 400bb44:	013ff844 	movi	r4,-31
 400bb48:	2085c83a 	sub	r2,r4,r2
 400bb4c:	8888d83a 	srl	r4,r17,r2
 400bb50:	00800804 	movi	r2,32
 400bb54:	18802126 	beq	r3,r2,400bbdc <__divdf3+0x9ac>
 400bb58:	04001004 	movi	r16,64
 400bb5c:	80c7c83a 	sub	r3,r16,r3
 400bb60:	88e0983a 	sll	r16,r17,r3
 400bb64:	8504b03a 	or	r2,r16,r20
 400bb68:	1004c03a 	cmpne	r2,r2,zero
 400bb6c:	2084b03a 	or	r2,r4,r2
 400bb70:	144001cc 	andi	r17,r2,7
 400bb74:	88000d1e 	bne	r17,zero,400bbac <__divdf3+0x97c>
 400bb78:	0021883a 	mov	r16,zero
 400bb7c:	102ad0fa 	srli	r21,r2,3
 400bb80:	9900004c 	andi	r4,r19,1
 400bb84:	0005883a 	mov	r2,zero
 400bb88:	ac6ab03a 	or	r21,r21,r17
 400bb8c:	003e0706 	br	400b3ac <__alt_mem_onchip_memory+0xfc0033ac>
 400bb90:	1007883a 	mov	r3,r2
 400bb94:	0023883a 	mov	r17,zero
 400bb98:	8820927a 	slli	r16,r17,9
 400bb9c:	1805883a 	mov	r2,r3
 400bba0:	8822977a 	slli	r17,r17,29
 400bba4:	8020d33a 	srli	r16,r16,12
 400bba8:	003ff406 	br	400bb7c <__alt_mem_onchip_memory+0xfc003b7c>
 400bbac:	10c003cc 	andi	r3,r2,15
 400bbb0:	01000104 	movi	r4,4
 400bbb4:	193ff626 	beq	r3,r4,400bb90 <__alt_mem_onchip_memory+0xfc003b90>
 400bbb8:	0023883a 	mov	r17,zero
 400bbbc:	003fc806 	br	400bae0 <__alt_mem_onchip_memory+0xfc003ae0>
 400bbc0:	a8bfd136 	bltu	r21,r2,400bb08 <__alt_mem_onchip_memory+0xfc003b08>
 400bbc4:	2823883a 	mov	r17,r5
 400bbc8:	003fa606 	br	400ba64 <__alt_mem_onchip_memory+0xfc003a64>
 400bbcc:	d9800017 	ldw	r6,0(sp)
 400bbd0:	30bfd436 	bltu	r6,r2,400bb24 <__alt_mem_onchip_memory+0xfc003b24>
 400bbd4:	2829883a 	mov	r20,r5
 400bbd8:	003f6406 	br	400b96c <__alt_mem_onchip_memory+0xfc00396c>
 400bbdc:	0021883a 	mov	r16,zero
 400bbe0:	003fe006 	br	400bb64 <__alt_mem_onchip_memory+0xfc003b64>
 400bbe4:	00800434 	movhi	r2,16
 400bbe8:	8c000234 	orhi	r16,r17,8
 400bbec:	10bfffc4 	addi	r2,r2,-1
 400bbf0:	e009883a 	mov	r4,fp
 400bbf4:	80a0703a 	and	r16,r16,r2
 400bbf8:	a02b883a 	mov	r21,r20
 400bbfc:	003e4e06 	br	400b538 <__alt_mem_onchip_memory+0xfc003538>

0400bc00 <__eqdf2>:
 400bc00:	2804d53a 	srli	r2,r5,20
 400bc04:	3806d53a 	srli	r3,r7,20
 400bc08:	02000434 	movhi	r8,16
 400bc0c:	423fffc4 	addi	r8,r8,-1
 400bc10:	1081ffcc 	andi	r2,r2,2047
 400bc14:	0281ffc4 	movi	r10,2047
 400bc18:	2a12703a 	and	r9,r5,r8
 400bc1c:	18c1ffcc 	andi	r3,r3,2047
 400bc20:	3a10703a 	and	r8,r7,r8
 400bc24:	280ad7fa 	srli	r5,r5,31
 400bc28:	380ed7fa 	srli	r7,r7,31
 400bc2c:	12801026 	beq	r2,r10,400bc70 <__eqdf2+0x70>
 400bc30:	0281ffc4 	movi	r10,2047
 400bc34:	1a800a26 	beq	r3,r10,400bc60 <__eqdf2+0x60>
 400bc38:	10c00226 	beq	r2,r3,400bc44 <__eqdf2+0x44>
 400bc3c:	00800044 	movi	r2,1
 400bc40:	f800283a 	ret
 400bc44:	4a3ffd1e 	bne	r9,r8,400bc3c <__alt_mem_onchip_memory+0xfc003c3c>
 400bc48:	21bffc1e 	bne	r4,r6,400bc3c <__alt_mem_onchip_memory+0xfc003c3c>
 400bc4c:	29c00c26 	beq	r5,r7,400bc80 <__eqdf2+0x80>
 400bc50:	103ffa1e 	bne	r2,zero,400bc3c <__alt_mem_onchip_memory+0xfc003c3c>
 400bc54:	2244b03a 	or	r2,r4,r9
 400bc58:	1004c03a 	cmpne	r2,r2,zero
 400bc5c:	f800283a 	ret
 400bc60:	3214b03a 	or	r10,r6,r8
 400bc64:	503ff426 	beq	r10,zero,400bc38 <__alt_mem_onchip_memory+0xfc003c38>
 400bc68:	00800044 	movi	r2,1
 400bc6c:	f800283a 	ret
 400bc70:	2254b03a 	or	r10,r4,r9
 400bc74:	503fee26 	beq	r10,zero,400bc30 <__alt_mem_onchip_memory+0xfc003c30>
 400bc78:	00800044 	movi	r2,1
 400bc7c:	f800283a 	ret
 400bc80:	0005883a 	mov	r2,zero
 400bc84:	f800283a 	ret

0400bc88 <__gedf2>:
 400bc88:	2804d53a 	srli	r2,r5,20
 400bc8c:	3806d53a 	srli	r3,r7,20
 400bc90:	02000434 	movhi	r8,16
 400bc94:	423fffc4 	addi	r8,r8,-1
 400bc98:	1081ffcc 	andi	r2,r2,2047
 400bc9c:	0241ffc4 	movi	r9,2047
 400bca0:	2a14703a 	and	r10,r5,r8
 400bca4:	18c1ffcc 	andi	r3,r3,2047
 400bca8:	3a10703a 	and	r8,r7,r8
 400bcac:	280ad7fa 	srli	r5,r5,31
 400bcb0:	380ed7fa 	srli	r7,r7,31
 400bcb4:	12401d26 	beq	r2,r9,400bd2c <__gedf2+0xa4>
 400bcb8:	0241ffc4 	movi	r9,2047
 400bcbc:	1a401226 	beq	r3,r9,400bd08 <__gedf2+0x80>
 400bcc0:	1000081e 	bne	r2,zero,400bce4 <__gedf2+0x5c>
 400bcc4:	2296b03a 	or	r11,r4,r10
 400bcc8:	5813003a 	cmpeq	r9,r11,zero
 400bccc:	1800091e 	bne	r3,zero,400bcf4 <__gedf2+0x6c>
 400bcd0:	3218b03a 	or	r12,r6,r8
 400bcd4:	6000071e 	bne	r12,zero,400bcf4 <__gedf2+0x6c>
 400bcd8:	0005883a 	mov	r2,zero
 400bcdc:	5800101e 	bne	r11,zero,400bd20 <__gedf2+0x98>
 400bce0:	f800283a 	ret
 400bce4:	18000c1e 	bne	r3,zero,400bd18 <__gedf2+0x90>
 400bce8:	3212b03a 	or	r9,r6,r8
 400bcec:	48000c26 	beq	r9,zero,400bd20 <__gedf2+0x98>
 400bcf0:	0013883a 	mov	r9,zero
 400bcf4:	39c03fcc 	andi	r7,r7,255
 400bcf8:	48000826 	beq	r9,zero,400bd1c <__gedf2+0x94>
 400bcfc:	38000926 	beq	r7,zero,400bd24 <__gedf2+0x9c>
 400bd00:	00800044 	movi	r2,1
 400bd04:	f800283a 	ret
 400bd08:	3212b03a 	or	r9,r6,r8
 400bd0c:	483fec26 	beq	r9,zero,400bcc0 <__alt_mem_onchip_memory+0xfc003cc0>
 400bd10:	00bfff84 	movi	r2,-2
 400bd14:	f800283a 	ret
 400bd18:	39c03fcc 	andi	r7,r7,255
 400bd1c:	29c00626 	beq	r5,r7,400bd38 <__gedf2+0xb0>
 400bd20:	283ff726 	beq	r5,zero,400bd00 <__alt_mem_onchip_memory+0xfc003d00>
 400bd24:	00bfffc4 	movi	r2,-1
 400bd28:	f800283a 	ret
 400bd2c:	2292b03a 	or	r9,r4,r10
 400bd30:	483fe126 	beq	r9,zero,400bcb8 <__alt_mem_onchip_memory+0xfc003cb8>
 400bd34:	003ff606 	br	400bd10 <__alt_mem_onchip_memory+0xfc003d10>
 400bd38:	18bff916 	blt	r3,r2,400bd20 <__alt_mem_onchip_memory+0xfc003d20>
 400bd3c:	10c00316 	blt	r2,r3,400bd4c <__gedf2+0xc4>
 400bd40:	42bff736 	bltu	r8,r10,400bd20 <__alt_mem_onchip_memory+0xfc003d20>
 400bd44:	52000326 	beq	r10,r8,400bd54 <__gedf2+0xcc>
 400bd48:	5200042e 	bgeu	r10,r8,400bd5c <__gedf2+0xd4>
 400bd4c:	283fec1e 	bne	r5,zero,400bd00 <__alt_mem_onchip_memory+0xfc003d00>
 400bd50:	003ff406 	br	400bd24 <__alt_mem_onchip_memory+0xfc003d24>
 400bd54:	313ff236 	bltu	r6,r4,400bd20 <__alt_mem_onchip_memory+0xfc003d20>
 400bd58:	21bffc36 	bltu	r4,r6,400bd4c <__alt_mem_onchip_memory+0xfc003d4c>
 400bd5c:	0005883a 	mov	r2,zero
 400bd60:	f800283a 	ret

0400bd64 <__ledf2>:
 400bd64:	2804d53a 	srli	r2,r5,20
 400bd68:	3810d53a 	srli	r8,r7,20
 400bd6c:	00c00434 	movhi	r3,16
 400bd70:	18ffffc4 	addi	r3,r3,-1
 400bd74:	1081ffcc 	andi	r2,r2,2047
 400bd78:	0241ffc4 	movi	r9,2047
 400bd7c:	28d4703a 	and	r10,r5,r3
 400bd80:	4201ffcc 	andi	r8,r8,2047
 400bd84:	38c6703a 	and	r3,r7,r3
 400bd88:	280ad7fa 	srli	r5,r5,31
 400bd8c:	380ed7fa 	srli	r7,r7,31
 400bd90:	12401f26 	beq	r2,r9,400be10 <__ledf2+0xac>
 400bd94:	0241ffc4 	movi	r9,2047
 400bd98:	42401426 	beq	r8,r9,400bdec <__ledf2+0x88>
 400bd9c:	1000091e 	bne	r2,zero,400bdc4 <__ledf2+0x60>
 400bda0:	2296b03a 	or	r11,r4,r10
 400bda4:	5813003a 	cmpeq	r9,r11,zero
 400bda8:	29403fcc 	andi	r5,r5,255
 400bdac:	40000a1e 	bne	r8,zero,400bdd8 <__ledf2+0x74>
 400bdb0:	30d8b03a 	or	r12,r6,r3
 400bdb4:	6000081e 	bne	r12,zero,400bdd8 <__ledf2+0x74>
 400bdb8:	0005883a 	mov	r2,zero
 400bdbc:	5800111e 	bne	r11,zero,400be04 <__ledf2+0xa0>
 400bdc0:	f800283a 	ret
 400bdc4:	29403fcc 	andi	r5,r5,255
 400bdc8:	40000c1e 	bne	r8,zero,400bdfc <__ledf2+0x98>
 400bdcc:	30d2b03a 	or	r9,r6,r3
 400bdd0:	48000c26 	beq	r9,zero,400be04 <__ledf2+0xa0>
 400bdd4:	0013883a 	mov	r9,zero
 400bdd8:	39c03fcc 	andi	r7,r7,255
 400bddc:	48000826 	beq	r9,zero,400be00 <__ledf2+0x9c>
 400bde0:	38001126 	beq	r7,zero,400be28 <__ledf2+0xc4>
 400bde4:	00800044 	movi	r2,1
 400bde8:	f800283a 	ret
 400bdec:	30d2b03a 	or	r9,r6,r3
 400bdf0:	483fea26 	beq	r9,zero,400bd9c <__alt_mem_onchip_memory+0xfc003d9c>
 400bdf4:	00800084 	movi	r2,2
 400bdf8:	f800283a 	ret
 400bdfc:	39c03fcc 	andi	r7,r7,255
 400be00:	39400726 	beq	r7,r5,400be20 <__ledf2+0xbc>
 400be04:	2800081e 	bne	r5,zero,400be28 <__ledf2+0xc4>
 400be08:	00800044 	movi	r2,1
 400be0c:	f800283a 	ret
 400be10:	2292b03a 	or	r9,r4,r10
 400be14:	483fdf26 	beq	r9,zero,400bd94 <__alt_mem_onchip_memory+0xfc003d94>
 400be18:	00800084 	movi	r2,2
 400be1c:	f800283a 	ret
 400be20:	4080030e 	bge	r8,r2,400be30 <__ledf2+0xcc>
 400be24:	383fef26 	beq	r7,zero,400bde4 <__alt_mem_onchip_memory+0xfc003de4>
 400be28:	00bfffc4 	movi	r2,-1
 400be2c:	f800283a 	ret
 400be30:	123feb16 	blt	r2,r8,400bde0 <__alt_mem_onchip_memory+0xfc003de0>
 400be34:	1abff336 	bltu	r3,r10,400be04 <__alt_mem_onchip_memory+0xfc003e04>
 400be38:	50c00326 	beq	r10,r3,400be48 <__ledf2+0xe4>
 400be3c:	50c0042e 	bgeu	r10,r3,400be50 <__ledf2+0xec>
 400be40:	283fe81e 	bne	r5,zero,400bde4 <__alt_mem_onchip_memory+0xfc003de4>
 400be44:	003ff806 	br	400be28 <__alt_mem_onchip_memory+0xfc003e28>
 400be48:	313fee36 	bltu	r6,r4,400be04 <__alt_mem_onchip_memory+0xfc003e04>
 400be4c:	21bffc36 	bltu	r4,r6,400be40 <__alt_mem_onchip_memory+0xfc003e40>
 400be50:	0005883a 	mov	r2,zero
 400be54:	f800283a 	ret

0400be58 <__muldf3>:
 400be58:	deffee04 	addi	sp,sp,-72
 400be5c:	dd000c15 	stw	r20,48(sp)
 400be60:	2828d53a 	srli	r20,r5,20
 400be64:	ddc00f15 	stw	r23,60(sp)
 400be68:	282ed7fa 	srli	r23,r5,31
 400be6c:	dc000815 	stw	r16,32(sp)
 400be70:	04000434 	movhi	r16,16
 400be74:	dcc00b15 	stw	r19,44(sp)
 400be78:	843fffc4 	addi	r16,r16,-1
 400be7c:	dfc01115 	stw	ra,68(sp)
 400be80:	df001015 	stw	fp,64(sp)
 400be84:	dd800e15 	stw	r22,56(sp)
 400be88:	dd400d15 	stw	r21,52(sp)
 400be8c:	dc800a15 	stw	r18,40(sp)
 400be90:	dc400915 	stw	r17,36(sp)
 400be94:	a501ffcc 	andi	r20,r20,2047
 400be98:	2c20703a 	and	r16,r5,r16
 400be9c:	b827883a 	mov	r19,r23
 400bea0:	ba403fcc 	andi	r9,r23,255
 400bea4:	a0006026 	beq	r20,zero,400c028 <__muldf3+0x1d0>
 400bea8:	0081ffc4 	movi	r2,2047
 400beac:	202d883a 	mov	r22,r4
 400beb0:	a0803626 	beq	r20,r2,400bf8c <__muldf3+0x134>
 400beb4:	84000434 	orhi	r16,r16,16
 400beb8:	200ad77a 	srli	r5,r4,29
 400bebc:	800490fa 	slli	r2,r16,3
 400bec0:	202c90fa 	slli	r22,r4,3
 400bec4:	a53f0044 	addi	r20,r20,-1023
 400bec8:	28a0b03a 	or	r16,r5,r2
 400becc:	002b883a 	mov	r21,zero
 400bed0:	000b883a 	mov	r5,zero
 400bed4:	3804d53a 	srli	r2,r7,20
 400bed8:	3838d7fa 	srli	fp,r7,31
 400bedc:	04400434 	movhi	r17,16
 400bee0:	8c7fffc4 	addi	r17,r17,-1
 400bee4:	1081ffcc 	andi	r2,r2,2047
 400bee8:	3025883a 	mov	r18,r6
 400beec:	3c62703a 	and	r17,r7,r17
 400bef0:	e2803fcc 	andi	r10,fp,255
 400bef4:	10006d26 	beq	r2,zero,400c0ac <__muldf3+0x254>
 400bef8:	00c1ffc4 	movi	r3,2047
 400befc:	10c06526 	beq	r2,r3,400c094 <__muldf3+0x23c>
 400bf00:	8c400434 	orhi	r17,r17,16
 400bf04:	300ed77a 	srli	r7,r6,29
 400bf08:	880690fa 	slli	r3,r17,3
 400bf0c:	302490fa 	slli	r18,r6,3
 400bf10:	10bf0044 	addi	r2,r2,-1023
 400bf14:	38e2b03a 	or	r17,r7,r3
 400bf18:	000f883a 	mov	r7,zero
 400bf1c:	a087883a 	add	r3,r20,r2
 400bf20:	010003c4 	movi	r4,15
 400bf24:	3d44b03a 	or	r2,r7,r21
 400bf28:	e5ccf03a 	xor	r6,fp,r23
 400bf2c:	1a000044 	addi	r8,r3,1
 400bf30:	20809b36 	bltu	r4,r2,400c1a0 <__muldf3+0x348>
 400bf34:	100490ba 	slli	r2,r2,2
 400bf38:	01010074 	movhi	r4,1025
 400bf3c:	212fd304 	addi	r4,r4,-16564
 400bf40:	1105883a 	add	r2,r2,r4
 400bf44:	10800017 	ldw	r2,0(r2)
 400bf48:	1000683a 	jmp	r2
 400bf4c:	0400c1a0 	cmpeqi	r16,zero,774
 400bf50:	0400bfac 	andhi	r16,zero,766
 400bf54:	0400bfac 	andhi	r16,zero,766
 400bf58:	0400bfa8 	cmpgeui	r16,zero,766
 400bf5c:	0400c17c 	xorhi	r16,zero,773
 400bf60:	0400c17c 	xorhi	r16,zero,773
 400bf64:	0400c164 	muli	r16,zero,773
 400bf68:	0400bfa8 	cmpgeui	r16,zero,766
 400bf6c:	0400c17c 	xorhi	r16,zero,773
 400bf70:	0400c164 	muli	r16,zero,773
 400bf74:	0400c17c 	xorhi	r16,zero,773
 400bf78:	0400bfa8 	cmpgeui	r16,zero,766
 400bf7c:	0400c18c 	andi	r16,zero,774
 400bf80:	0400c18c 	andi	r16,zero,774
 400bf84:	0400c18c 	andi	r16,zero,774
 400bf88:	0400c4ec 	andhi	r16,zero,787
 400bf8c:	2404b03a 	or	r2,r4,r16
 400bf90:	1000711e 	bne	r2,zero,400c158 <__muldf3+0x300>
 400bf94:	05400204 	movi	r21,8
 400bf98:	0021883a 	mov	r16,zero
 400bf9c:	002d883a 	mov	r22,zero
 400bfa0:	01400084 	movi	r5,2
 400bfa4:	003fcb06 	br	400bed4 <__alt_mem_onchip_memory+0xfc003ed4>
 400bfa8:	500d883a 	mov	r6,r10
 400bfac:	00800084 	movi	r2,2
 400bfb0:	38805926 	beq	r7,r2,400c118 <__muldf3+0x2c0>
 400bfb4:	008000c4 	movi	r2,3
 400bfb8:	3881bb26 	beq	r7,r2,400c6a8 <__muldf3+0x850>
 400bfbc:	00800044 	movi	r2,1
 400bfc0:	3881961e 	bne	r7,r2,400c61c <__muldf3+0x7c4>
 400bfc4:	3027883a 	mov	r19,r6
 400bfc8:	0005883a 	mov	r2,zero
 400bfcc:	0021883a 	mov	r16,zero
 400bfd0:	002d883a 	mov	r22,zero
 400bfd4:	1004953a 	slli	r2,r2,20
 400bfd8:	98c03fcc 	andi	r3,r19,255
 400bfdc:	04400434 	movhi	r17,16
 400bfe0:	8c7fffc4 	addi	r17,r17,-1
 400bfe4:	180697fa 	slli	r3,r3,31
 400bfe8:	8460703a 	and	r16,r16,r17
 400bfec:	80a0b03a 	or	r16,r16,r2
 400bff0:	80c6b03a 	or	r3,r16,r3
 400bff4:	b005883a 	mov	r2,r22
 400bff8:	dfc01117 	ldw	ra,68(sp)
 400bffc:	df001017 	ldw	fp,64(sp)
 400c000:	ddc00f17 	ldw	r23,60(sp)
 400c004:	dd800e17 	ldw	r22,56(sp)
 400c008:	dd400d17 	ldw	r21,52(sp)
 400c00c:	dd000c17 	ldw	r20,48(sp)
 400c010:	dcc00b17 	ldw	r19,44(sp)
 400c014:	dc800a17 	ldw	r18,40(sp)
 400c018:	dc400917 	ldw	r17,36(sp)
 400c01c:	dc000817 	ldw	r16,32(sp)
 400c020:	dec01204 	addi	sp,sp,72
 400c024:	f800283a 	ret
 400c028:	2404b03a 	or	r2,r4,r16
 400c02c:	202b883a 	mov	r21,r4
 400c030:	10004426 	beq	r2,zero,400c144 <__muldf3+0x2ec>
 400c034:	80015126 	beq	r16,zero,400c57c <__muldf3+0x724>
 400c038:	8009883a 	mov	r4,r16
 400c03c:	d9800715 	stw	r6,28(sp)
 400c040:	d9c00215 	stw	r7,8(sp)
 400c044:	da400415 	stw	r9,16(sp)
 400c048:	400d1c40 	call	400d1c4 <__clzsi2>
 400c04c:	d9800717 	ldw	r6,28(sp)
 400c050:	d9c00217 	ldw	r7,8(sp)
 400c054:	da400417 	ldw	r9,16(sp)
 400c058:	113ffd44 	addi	r4,r2,-11
 400c05c:	00c00704 	movi	r3,28
 400c060:	19014216 	blt	r3,r4,400c56c <__muldf3+0x714>
 400c064:	00c00744 	movi	r3,29
 400c068:	15bffe04 	addi	r22,r2,-8
 400c06c:	1907c83a 	sub	r3,r3,r4
 400c070:	85a0983a 	sll	r16,r16,r22
 400c074:	a8c6d83a 	srl	r3,r21,r3
 400c078:	adac983a 	sll	r22,r21,r22
 400c07c:	1c20b03a 	or	r16,r3,r16
 400c080:	1080fcc4 	addi	r2,r2,1011
 400c084:	00a9c83a 	sub	r20,zero,r2
 400c088:	002b883a 	mov	r21,zero
 400c08c:	000b883a 	mov	r5,zero
 400c090:	003f9006 	br	400bed4 <__alt_mem_onchip_memory+0xfc003ed4>
 400c094:	3446b03a 	or	r3,r6,r17
 400c098:	1800281e 	bne	r3,zero,400c13c <__muldf3+0x2e4>
 400c09c:	0023883a 	mov	r17,zero
 400c0a0:	0025883a 	mov	r18,zero
 400c0a4:	01c00084 	movi	r7,2
 400c0a8:	003f9c06 	br	400bf1c <__alt_mem_onchip_memory+0xfc003f1c>
 400c0ac:	3446b03a 	or	r3,r6,r17
 400c0b0:	18001e26 	beq	r3,zero,400c12c <__muldf3+0x2d4>
 400c0b4:	88012126 	beq	r17,zero,400c53c <__muldf3+0x6e4>
 400c0b8:	8809883a 	mov	r4,r17
 400c0bc:	d9400215 	stw	r5,8(sp)
 400c0c0:	d9800715 	stw	r6,28(sp)
 400c0c4:	da400415 	stw	r9,16(sp)
 400c0c8:	da800315 	stw	r10,12(sp)
 400c0cc:	400d1c40 	call	400d1c4 <__clzsi2>
 400c0d0:	d9400217 	ldw	r5,8(sp)
 400c0d4:	d9800717 	ldw	r6,28(sp)
 400c0d8:	da400417 	ldw	r9,16(sp)
 400c0dc:	da800317 	ldw	r10,12(sp)
 400c0e0:	113ffd44 	addi	r4,r2,-11
 400c0e4:	00c00704 	movi	r3,28
 400c0e8:	19011016 	blt	r3,r4,400c52c <__muldf3+0x6d4>
 400c0ec:	00c00744 	movi	r3,29
 400c0f0:	14bffe04 	addi	r18,r2,-8
 400c0f4:	1907c83a 	sub	r3,r3,r4
 400c0f8:	8ca2983a 	sll	r17,r17,r18
 400c0fc:	30c6d83a 	srl	r3,r6,r3
 400c100:	34a4983a 	sll	r18,r6,r18
 400c104:	1c62b03a 	or	r17,r3,r17
 400c108:	1080fcc4 	addi	r2,r2,1011
 400c10c:	0085c83a 	sub	r2,zero,r2
 400c110:	000f883a 	mov	r7,zero
 400c114:	003f8106 	br	400bf1c <__alt_mem_onchip_memory+0xfc003f1c>
 400c118:	3027883a 	mov	r19,r6
 400c11c:	0081ffc4 	movi	r2,2047
 400c120:	0021883a 	mov	r16,zero
 400c124:	002d883a 	mov	r22,zero
 400c128:	003faa06 	br	400bfd4 <__alt_mem_onchip_memory+0xfc003fd4>
 400c12c:	0023883a 	mov	r17,zero
 400c130:	0025883a 	mov	r18,zero
 400c134:	01c00044 	movi	r7,1
 400c138:	003f7806 	br	400bf1c <__alt_mem_onchip_memory+0xfc003f1c>
 400c13c:	01c000c4 	movi	r7,3
 400c140:	003f7606 	br	400bf1c <__alt_mem_onchip_memory+0xfc003f1c>
 400c144:	05400104 	movi	r21,4
 400c148:	0021883a 	mov	r16,zero
 400c14c:	002d883a 	mov	r22,zero
 400c150:	01400044 	movi	r5,1
 400c154:	003f5f06 	br	400bed4 <__alt_mem_onchip_memory+0xfc003ed4>
 400c158:	05400304 	movi	r21,12
 400c15c:	014000c4 	movi	r5,3
 400c160:	003f5c06 	br	400bed4 <__alt_mem_onchip_memory+0xfc003ed4>
 400c164:	04000434 	movhi	r16,16
 400c168:	0027883a 	mov	r19,zero
 400c16c:	843fffc4 	addi	r16,r16,-1
 400c170:	05bfffc4 	movi	r22,-1
 400c174:	0081ffc4 	movi	r2,2047
 400c178:	003f9606 	br	400bfd4 <__alt_mem_onchip_memory+0xfc003fd4>
 400c17c:	8023883a 	mov	r17,r16
 400c180:	b025883a 	mov	r18,r22
 400c184:	280f883a 	mov	r7,r5
 400c188:	003f8806 	br	400bfac <__alt_mem_onchip_memory+0xfc003fac>
 400c18c:	8023883a 	mov	r17,r16
 400c190:	b025883a 	mov	r18,r22
 400c194:	480d883a 	mov	r6,r9
 400c198:	280f883a 	mov	r7,r5
 400c19c:	003f8306 	br	400bfac <__alt_mem_onchip_memory+0xfc003fac>
 400c1a0:	b026d43a 	srli	r19,r22,16
 400c1a4:	902ed43a 	srli	r23,r18,16
 400c1a8:	b5bfffcc 	andi	r22,r22,65535
 400c1ac:	94bfffcc 	andi	r18,r18,65535
 400c1b0:	b00b883a 	mov	r5,r22
 400c1b4:	9009883a 	mov	r4,r18
 400c1b8:	d8c00515 	stw	r3,20(sp)
 400c1bc:	d9800715 	stw	r6,28(sp)
 400c1c0:	da000615 	stw	r8,24(sp)
 400c1c4:	400a95c0 	call	400a95c <__mulsi3>
 400c1c8:	980b883a 	mov	r5,r19
 400c1cc:	9009883a 	mov	r4,r18
 400c1d0:	1029883a 	mov	r20,r2
 400c1d4:	400a95c0 	call	400a95c <__mulsi3>
 400c1d8:	b80b883a 	mov	r5,r23
 400c1dc:	9809883a 	mov	r4,r19
 400c1e0:	102b883a 	mov	r21,r2
 400c1e4:	400a95c0 	call	400a95c <__mulsi3>
 400c1e8:	b809883a 	mov	r4,r23
 400c1ec:	b00b883a 	mov	r5,r22
 400c1f0:	1039883a 	mov	fp,r2
 400c1f4:	400a95c0 	call	400a95c <__mulsi3>
 400c1f8:	a008d43a 	srli	r4,r20,16
 400c1fc:	1545883a 	add	r2,r2,r21
 400c200:	d8c00517 	ldw	r3,20(sp)
 400c204:	2085883a 	add	r2,r4,r2
 400c208:	d9800717 	ldw	r6,28(sp)
 400c20c:	da000617 	ldw	r8,24(sp)
 400c210:	1540022e 	bgeu	r2,r21,400c21c <__muldf3+0x3c4>
 400c214:	01000074 	movhi	r4,1
 400c218:	e139883a 	add	fp,fp,r4
 400c21c:	100e943a 	slli	r7,r2,16
 400c220:	1004d43a 	srli	r2,r2,16
 400c224:	882ad43a 	srli	r21,r17,16
 400c228:	a53fffcc 	andi	r20,r20,65535
 400c22c:	8c7fffcc 	andi	r17,r17,65535
 400c230:	3d29883a 	add	r20,r7,r20
 400c234:	b00b883a 	mov	r5,r22
 400c238:	8809883a 	mov	r4,r17
 400c23c:	d8c00515 	stw	r3,20(sp)
 400c240:	d9800715 	stw	r6,28(sp)
 400c244:	da000615 	stw	r8,24(sp)
 400c248:	dd000115 	stw	r20,4(sp)
 400c24c:	d8800015 	stw	r2,0(sp)
 400c250:	400a95c0 	call	400a95c <__mulsi3>
 400c254:	980b883a 	mov	r5,r19
 400c258:	8809883a 	mov	r4,r17
 400c25c:	d8800215 	stw	r2,8(sp)
 400c260:	400a95c0 	call	400a95c <__mulsi3>
 400c264:	9809883a 	mov	r4,r19
 400c268:	a80b883a 	mov	r5,r21
 400c26c:	1029883a 	mov	r20,r2
 400c270:	400a95c0 	call	400a95c <__mulsi3>
 400c274:	b00b883a 	mov	r5,r22
 400c278:	a809883a 	mov	r4,r21
 400c27c:	d8800415 	stw	r2,16(sp)
 400c280:	400a95c0 	call	400a95c <__mulsi3>
 400c284:	d9c00217 	ldw	r7,8(sp)
 400c288:	1505883a 	add	r2,r2,r20
 400c28c:	d8c00517 	ldw	r3,20(sp)
 400c290:	3826d43a 	srli	r19,r7,16
 400c294:	d9800717 	ldw	r6,28(sp)
 400c298:	da000617 	ldw	r8,24(sp)
 400c29c:	9885883a 	add	r2,r19,r2
 400c2a0:	da400417 	ldw	r9,16(sp)
 400c2a4:	1500022e 	bgeu	r2,r20,400c2b0 <__muldf3+0x458>
 400c2a8:	01000074 	movhi	r4,1
 400c2ac:	4913883a 	add	r9,r9,r4
 400c2b0:	1028d43a 	srli	r20,r2,16
 400c2b4:	1004943a 	slli	r2,r2,16
 400c2b8:	802cd43a 	srli	r22,r16,16
 400c2bc:	843fffcc 	andi	r16,r16,65535
 400c2c0:	3cffffcc 	andi	r19,r7,65535
 400c2c4:	9009883a 	mov	r4,r18
 400c2c8:	800b883a 	mov	r5,r16
 400c2cc:	a269883a 	add	r20,r20,r9
 400c2d0:	d8c00515 	stw	r3,20(sp)
 400c2d4:	d9800715 	stw	r6,28(sp)
 400c2d8:	da000615 	stw	r8,24(sp)
 400c2dc:	14e7883a 	add	r19,r2,r19
 400c2e0:	400a95c0 	call	400a95c <__mulsi3>
 400c2e4:	9009883a 	mov	r4,r18
 400c2e8:	b00b883a 	mov	r5,r22
 400c2ec:	d8800315 	stw	r2,12(sp)
 400c2f0:	400a95c0 	call	400a95c <__mulsi3>
 400c2f4:	b809883a 	mov	r4,r23
 400c2f8:	b00b883a 	mov	r5,r22
 400c2fc:	d8800215 	stw	r2,8(sp)
 400c300:	400a95c0 	call	400a95c <__mulsi3>
 400c304:	b80b883a 	mov	r5,r23
 400c308:	8009883a 	mov	r4,r16
 400c30c:	d8800415 	stw	r2,16(sp)
 400c310:	400a95c0 	call	400a95c <__mulsi3>
 400c314:	da800317 	ldw	r10,12(sp)
 400c318:	d9c00217 	ldw	r7,8(sp)
 400c31c:	d9000017 	ldw	r4,0(sp)
 400c320:	502ed43a 	srli	r23,r10,16
 400c324:	11c5883a 	add	r2,r2,r7
 400c328:	24e5883a 	add	r18,r4,r19
 400c32c:	b885883a 	add	r2,r23,r2
 400c330:	d8c00517 	ldw	r3,20(sp)
 400c334:	d9800717 	ldw	r6,28(sp)
 400c338:	da000617 	ldw	r8,24(sp)
 400c33c:	da400417 	ldw	r9,16(sp)
 400c340:	11c0022e 	bgeu	r2,r7,400c34c <__muldf3+0x4f4>
 400c344:	01000074 	movhi	r4,1
 400c348:	4913883a 	add	r9,r9,r4
 400c34c:	100ed43a 	srli	r7,r2,16
 400c350:	1004943a 	slli	r2,r2,16
 400c354:	55ffffcc 	andi	r23,r10,65535
 400c358:	3a53883a 	add	r9,r7,r9
 400c35c:	8809883a 	mov	r4,r17
 400c360:	800b883a 	mov	r5,r16
 400c364:	d8c00515 	stw	r3,20(sp)
 400c368:	d9800715 	stw	r6,28(sp)
 400c36c:	da000615 	stw	r8,24(sp)
 400c370:	da400415 	stw	r9,16(sp)
 400c374:	15ef883a 	add	r23,r2,r23
 400c378:	400a95c0 	call	400a95c <__mulsi3>
 400c37c:	8809883a 	mov	r4,r17
 400c380:	b00b883a 	mov	r5,r22
 400c384:	d8800215 	stw	r2,8(sp)
 400c388:	400a95c0 	call	400a95c <__mulsi3>
 400c38c:	b00b883a 	mov	r5,r22
 400c390:	a809883a 	mov	r4,r21
 400c394:	d8800315 	stw	r2,12(sp)
 400c398:	400a95c0 	call	400a95c <__mulsi3>
 400c39c:	8009883a 	mov	r4,r16
 400c3a0:	a80b883a 	mov	r5,r21
 400c3a4:	1023883a 	mov	r17,r2
 400c3a8:	400a95c0 	call	400a95c <__mulsi3>
 400c3ac:	d9c00217 	ldw	r7,8(sp)
 400c3b0:	da800317 	ldw	r10,12(sp)
 400c3b4:	d8c00517 	ldw	r3,20(sp)
 400c3b8:	3808d43a 	srli	r4,r7,16
 400c3bc:	1285883a 	add	r2,r2,r10
 400c3c0:	d9800717 	ldw	r6,28(sp)
 400c3c4:	2085883a 	add	r2,r4,r2
 400c3c8:	da000617 	ldw	r8,24(sp)
 400c3cc:	da400417 	ldw	r9,16(sp)
 400c3d0:	1280022e 	bgeu	r2,r10,400c3dc <__muldf3+0x584>
 400c3d4:	01000074 	movhi	r4,1
 400c3d8:	8923883a 	add	r17,r17,r4
 400c3dc:	1008943a 	slli	r4,r2,16
 400c3e0:	39ffffcc 	andi	r7,r7,65535
 400c3e4:	e4b9883a 	add	fp,fp,r18
 400c3e8:	21cf883a 	add	r7,r4,r7
 400c3ec:	e4e7803a 	cmpltu	r19,fp,r19
 400c3f0:	3d0f883a 	add	r7,r7,r20
 400c3f4:	bf39883a 	add	fp,r23,fp
 400c3f8:	99c9883a 	add	r4,r19,r7
 400c3fc:	e5ef803a 	cmpltu	r23,fp,r23
 400c400:	490b883a 	add	r5,r9,r4
 400c404:	1004d43a 	srli	r2,r2,16
 400c408:	b965883a 	add	r18,r23,r5
 400c40c:	24c9803a 	cmpltu	r4,r4,r19
 400c410:	3d29803a 	cmpltu	r20,r7,r20
 400c414:	a128b03a 	or	r20,r20,r4
 400c418:	95ef803a 	cmpltu	r23,r18,r23
 400c41c:	2a53803a 	cmpltu	r9,r5,r9
 400c420:	a0a9883a 	add	r20,r20,r2
 400c424:	4deeb03a 	or	r23,r9,r23
 400c428:	a5ef883a 	add	r23,r20,r23
 400c42c:	bc63883a 	add	r17,r23,r17
 400c430:	e004927a 	slli	r2,fp,9
 400c434:	d9000117 	ldw	r4,4(sp)
 400c438:	882e927a 	slli	r23,r17,9
 400c43c:	9022d5fa 	srli	r17,r18,23
 400c440:	e038d5fa 	srli	fp,fp,23
 400c444:	1104b03a 	or	r2,r2,r4
 400c448:	9024927a 	slli	r18,r18,9
 400c44c:	1004c03a 	cmpne	r2,r2,zero
 400c450:	bc62b03a 	or	r17,r23,r17
 400c454:	1738b03a 	or	fp,r2,fp
 400c458:	8880402c 	andhi	r2,r17,256
 400c45c:	e4a4b03a 	or	r18,fp,r18
 400c460:	10000726 	beq	r2,zero,400c480 <__muldf3+0x628>
 400c464:	9006d07a 	srli	r3,r18,1
 400c468:	880497fa 	slli	r2,r17,31
 400c46c:	9480004c 	andi	r18,r18,1
 400c470:	8822d07a 	srli	r17,r17,1
 400c474:	1ca4b03a 	or	r18,r3,r18
 400c478:	14a4b03a 	or	r18,r2,r18
 400c47c:	4007883a 	mov	r3,r8
 400c480:	1880ffc4 	addi	r2,r3,1023
 400c484:	0080460e 	bge	zero,r2,400c5a0 <__muldf3+0x748>
 400c488:	910001cc 	andi	r4,r18,7
 400c48c:	20000726 	beq	r4,zero,400c4ac <__muldf3+0x654>
 400c490:	910003cc 	andi	r4,r18,15
 400c494:	01400104 	movi	r5,4
 400c498:	21400426 	beq	r4,r5,400c4ac <__muldf3+0x654>
 400c49c:	9149883a 	add	r4,r18,r5
 400c4a0:	24a5803a 	cmpltu	r18,r4,r18
 400c4a4:	8ca3883a 	add	r17,r17,r18
 400c4a8:	2025883a 	mov	r18,r4
 400c4ac:	8900402c 	andhi	r4,r17,256
 400c4b0:	20000426 	beq	r4,zero,400c4c4 <__muldf3+0x66c>
 400c4b4:	18810004 	addi	r2,r3,1024
 400c4b8:	00ffc034 	movhi	r3,65280
 400c4bc:	18ffffc4 	addi	r3,r3,-1
 400c4c0:	88e2703a 	and	r17,r17,r3
 400c4c4:	00c1ff84 	movi	r3,2046
 400c4c8:	18bf1316 	blt	r3,r2,400c118 <__alt_mem_onchip_memory+0xfc004118>
 400c4cc:	882c977a 	slli	r22,r17,29
 400c4d0:	9024d0fa 	srli	r18,r18,3
 400c4d4:	8822927a 	slli	r17,r17,9
 400c4d8:	1081ffcc 	andi	r2,r2,2047
 400c4dc:	b4acb03a 	or	r22,r22,r18
 400c4e0:	8820d33a 	srli	r16,r17,12
 400c4e4:	3027883a 	mov	r19,r6
 400c4e8:	003eba06 	br	400bfd4 <__alt_mem_onchip_memory+0xfc003fd4>
 400c4ec:	8080022c 	andhi	r2,r16,8
 400c4f0:	10000926 	beq	r2,zero,400c518 <__muldf3+0x6c0>
 400c4f4:	8880022c 	andhi	r2,r17,8
 400c4f8:	1000071e 	bne	r2,zero,400c518 <__muldf3+0x6c0>
 400c4fc:	00800434 	movhi	r2,16
 400c500:	8c000234 	orhi	r16,r17,8
 400c504:	10bfffc4 	addi	r2,r2,-1
 400c508:	e027883a 	mov	r19,fp
 400c50c:	80a0703a 	and	r16,r16,r2
 400c510:	902d883a 	mov	r22,r18
 400c514:	003f1706 	br	400c174 <__alt_mem_onchip_memory+0xfc004174>
 400c518:	00800434 	movhi	r2,16
 400c51c:	84000234 	orhi	r16,r16,8
 400c520:	10bfffc4 	addi	r2,r2,-1
 400c524:	80a0703a 	and	r16,r16,r2
 400c528:	003f1206 	br	400c174 <__alt_mem_onchip_memory+0xfc004174>
 400c52c:	147ff604 	addi	r17,r2,-40
 400c530:	3462983a 	sll	r17,r6,r17
 400c534:	0025883a 	mov	r18,zero
 400c538:	003ef306 	br	400c108 <__alt_mem_onchip_memory+0xfc004108>
 400c53c:	3009883a 	mov	r4,r6
 400c540:	d9400215 	stw	r5,8(sp)
 400c544:	d9800715 	stw	r6,28(sp)
 400c548:	da400415 	stw	r9,16(sp)
 400c54c:	da800315 	stw	r10,12(sp)
 400c550:	400d1c40 	call	400d1c4 <__clzsi2>
 400c554:	10800804 	addi	r2,r2,32
 400c558:	da800317 	ldw	r10,12(sp)
 400c55c:	da400417 	ldw	r9,16(sp)
 400c560:	d9800717 	ldw	r6,28(sp)
 400c564:	d9400217 	ldw	r5,8(sp)
 400c568:	003edd06 	br	400c0e0 <__alt_mem_onchip_memory+0xfc0040e0>
 400c56c:	143ff604 	addi	r16,r2,-40
 400c570:	ac20983a 	sll	r16,r21,r16
 400c574:	002d883a 	mov	r22,zero
 400c578:	003ec106 	br	400c080 <__alt_mem_onchip_memory+0xfc004080>
 400c57c:	d9800715 	stw	r6,28(sp)
 400c580:	d9c00215 	stw	r7,8(sp)
 400c584:	da400415 	stw	r9,16(sp)
 400c588:	400d1c40 	call	400d1c4 <__clzsi2>
 400c58c:	10800804 	addi	r2,r2,32
 400c590:	da400417 	ldw	r9,16(sp)
 400c594:	d9c00217 	ldw	r7,8(sp)
 400c598:	d9800717 	ldw	r6,28(sp)
 400c59c:	003eae06 	br	400c058 <__alt_mem_onchip_memory+0xfc004058>
 400c5a0:	00c00044 	movi	r3,1
 400c5a4:	1887c83a 	sub	r3,r3,r2
 400c5a8:	01000e04 	movi	r4,56
 400c5ac:	20fe8516 	blt	r4,r3,400bfc4 <__alt_mem_onchip_memory+0xfc003fc4>
 400c5b0:	010007c4 	movi	r4,31
 400c5b4:	20c01b16 	blt	r4,r3,400c624 <__muldf3+0x7cc>
 400c5b8:	00800804 	movi	r2,32
 400c5bc:	10c5c83a 	sub	r2,r2,r3
 400c5c0:	888a983a 	sll	r5,r17,r2
 400c5c4:	90c8d83a 	srl	r4,r18,r3
 400c5c8:	9084983a 	sll	r2,r18,r2
 400c5cc:	88e2d83a 	srl	r17,r17,r3
 400c5d0:	2906b03a 	or	r3,r5,r4
 400c5d4:	1004c03a 	cmpne	r2,r2,zero
 400c5d8:	1886b03a 	or	r3,r3,r2
 400c5dc:	188001cc 	andi	r2,r3,7
 400c5e0:	10000726 	beq	r2,zero,400c600 <__muldf3+0x7a8>
 400c5e4:	188003cc 	andi	r2,r3,15
 400c5e8:	01000104 	movi	r4,4
 400c5ec:	11000426 	beq	r2,r4,400c600 <__muldf3+0x7a8>
 400c5f0:	1805883a 	mov	r2,r3
 400c5f4:	10c00104 	addi	r3,r2,4
 400c5f8:	1885803a 	cmpltu	r2,r3,r2
 400c5fc:	88a3883a 	add	r17,r17,r2
 400c600:	8880202c 	andhi	r2,r17,128
 400c604:	10001c26 	beq	r2,zero,400c678 <__muldf3+0x820>
 400c608:	3027883a 	mov	r19,r6
 400c60c:	00800044 	movi	r2,1
 400c610:	0021883a 	mov	r16,zero
 400c614:	002d883a 	mov	r22,zero
 400c618:	003e6e06 	br	400bfd4 <__alt_mem_onchip_memory+0xfc003fd4>
 400c61c:	4007883a 	mov	r3,r8
 400c620:	003f9706 	br	400c480 <__alt_mem_onchip_memory+0xfc004480>
 400c624:	017ff844 	movi	r5,-31
 400c628:	2885c83a 	sub	r2,r5,r2
 400c62c:	888ad83a 	srl	r5,r17,r2
 400c630:	00800804 	movi	r2,32
 400c634:	18801a26 	beq	r3,r2,400c6a0 <__muldf3+0x848>
 400c638:	01001004 	movi	r4,64
 400c63c:	20c7c83a 	sub	r3,r4,r3
 400c640:	88e2983a 	sll	r17,r17,r3
 400c644:	8ca4b03a 	or	r18,r17,r18
 400c648:	9004c03a 	cmpne	r2,r18,zero
 400c64c:	2884b03a 	or	r2,r5,r2
 400c650:	144001cc 	andi	r17,r2,7
 400c654:	88000d1e 	bne	r17,zero,400c68c <__muldf3+0x834>
 400c658:	0021883a 	mov	r16,zero
 400c65c:	102cd0fa 	srli	r22,r2,3
 400c660:	3027883a 	mov	r19,r6
 400c664:	0005883a 	mov	r2,zero
 400c668:	b46cb03a 	or	r22,r22,r17
 400c66c:	003e5906 	br	400bfd4 <__alt_mem_onchip_memory+0xfc003fd4>
 400c670:	1007883a 	mov	r3,r2
 400c674:	0023883a 	mov	r17,zero
 400c678:	8820927a 	slli	r16,r17,9
 400c67c:	1805883a 	mov	r2,r3
 400c680:	8822977a 	slli	r17,r17,29
 400c684:	8020d33a 	srli	r16,r16,12
 400c688:	003ff406 	br	400c65c <__alt_mem_onchip_memory+0xfc00465c>
 400c68c:	10c003cc 	andi	r3,r2,15
 400c690:	01000104 	movi	r4,4
 400c694:	193ff626 	beq	r3,r4,400c670 <__alt_mem_onchip_memory+0xfc004670>
 400c698:	0023883a 	mov	r17,zero
 400c69c:	003fd506 	br	400c5f4 <__alt_mem_onchip_memory+0xfc0045f4>
 400c6a0:	0023883a 	mov	r17,zero
 400c6a4:	003fe706 	br	400c644 <__alt_mem_onchip_memory+0xfc004644>
 400c6a8:	00800434 	movhi	r2,16
 400c6ac:	8c000234 	orhi	r16,r17,8
 400c6b0:	10bfffc4 	addi	r2,r2,-1
 400c6b4:	3027883a 	mov	r19,r6
 400c6b8:	80a0703a 	and	r16,r16,r2
 400c6bc:	902d883a 	mov	r22,r18
 400c6c0:	003eac06 	br	400c174 <__alt_mem_onchip_memory+0xfc004174>

0400c6c4 <__subdf3>:
 400c6c4:	02000434 	movhi	r8,16
 400c6c8:	423fffc4 	addi	r8,r8,-1
 400c6cc:	defffb04 	addi	sp,sp,-20
 400c6d0:	2a14703a 	and	r10,r5,r8
 400c6d4:	3812d53a 	srli	r9,r7,20
 400c6d8:	3a10703a 	and	r8,r7,r8
 400c6dc:	2006d77a 	srli	r3,r4,29
 400c6e0:	3004d77a 	srli	r2,r6,29
 400c6e4:	dc000015 	stw	r16,0(sp)
 400c6e8:	501490fa 	slli	r10,r10,3
 400c6ec:	2820d53a 	srli	r16,r5,20
 400c6f0:	401090fa 	slli	r8,r8,3
 400c6f4:	dc800215 	stw	r18,8(sp)
 400c6f8:	dc400115 	stw	r17,4(sp)
 400c6fc:	dfc00415 	stw	ra,16(sp)
 400c700:	202290fa 	slli	r17,r4,3
 400c704:	dcc00315 	stw	r19,12(sp)
 400c708:	4a41ffcc 	andi	r9,r9,2047
 400c70c:	0101ffc4 	movi	r4,2047
 400c710:	2824d7fa 	srli	r18,r5,31
 400c714:	8401ffcc 	andi	r16,r16,2047
 400c718:	50c6b03a 	or	r3,r10,r3
 400c71c:	380ed7fa 	srli	r7,r7,31
 400c720:	408ab03a 	or	r5,r8,r2
 400c724:	300c90fa 	slli	r6,r6,3
 400c728:	49009626 	beq	r9,r4,400c984 <__subdf3+0x2c0>
 400c72c:	39c0005c 	xori	r7,r7,1
 400c730:	8245c83a 	sub	r2,r16,r9
 400c734:	3c807426 	beq	r7,r18,400c908 <__subdf3+0x244>
 400c738:	0080af0e 	bge	zero,r2,400c9f8 <__subdf3+0x334>
 400c73c:	48002a1e 	bne	r9,zero,400c7e8 <__subdf3+0x124>
 400c740:	2988b03a 	or	r4,r5,r6
 400c744:	20009a1e 	bne	r4,zero,400c9b0 <__subdf3+0x2ec>
 400c748:	888001cc 	andi	r2,r17,7
 400c74c:	10000726 	beq	r2,zero,400c76c <__subdf3+0xa8>
 400c750:	888003cc 	andi	r2,r17,15
 400c754:	01000104 	movi	r4,4
 400c758:	11000426 	beq	r2,r4,400c76c <__subdf3+0xa8>
 400c75c:	890b883a 	add	r5,r17,r4
 400c760:	2c63803a 	cmpltu	r17,r5,r17
 400c764:	1c47883a 	add	r3,r3,r17
 400c768:	2823883a 	mov	r17,r5
 400c76c:	1880202c 	andhi	r2,r3,128
 400c770:	10005926 	beq	r2,zero,400c8d8 <__subdf3+0x214>
 400c774:	84000044 	addi	r16,r16,1
 400c778:	0081ffc4 	movi	r2,2047
 400c77c:	8080be26 	beq	r16,r2,400ca78 <__subdf3+0x3b4>
 400c780:	017fe034 	movhi	r5,65408
 400c784:	297fffc4 	addi	r5,r5,-1
 400c788:	1946703a 	and	r3,r3,r5
 400c78c:	1804977a 	slli	r2,r3,29
 400c790:	1806927a 	slli	r3,r3,9
 400c794:	8822d0fa 	srli	r17,r17,3
 400c798:	8401ffcc 	andi	r16,r16,2047
 400c79c:	180ad33a 	srli	r5,r3,12
 400c7a0:	9100004c 	andi	r4,r18,1
 400c7a4:	1444b03a 	or	r2,r2,r17
 400c7a8:	80c1ffcc 	andi	r3,r16,2047
 400c7ac:	1820953a 	slli	r16,r3,20
 400c7b0:	20c03fcc 	andi	r3,r4,255
 400c7b4:	180897fa 	slli	r4,r3,31
 400c7b8:	00c00434 	movhi	r3,16
 400c7bc:	18ffffc4 	addi	r3,r3,-1
 400c7c0:	28c6703a 	and	r3,r5,r3
 400c7c4:	1c06b03a 	or	r3,r3,r16
 400c7c8:	1906b03a 	or	r3,r3,r4
 400c7cc:	dfc00417 	ldw	ra,16(sp)
 400c7d0:	dcc00317 	ldw	r19,12(sp)
 400c7d4:	dc800217 	ldw	r18,8(sp)
 400c7d8:	dc400117 	ldw	r17,4(sp)
 400c7dc:	dc000017 	ldw	r16,0(sp)
 400c7e0:	dec00504 	addi	sp,sp,20
 400c7e4:	f800283a 	ret
 400c7e8:	0101ffc4 	movi	r4,2047
 400c7ec:	813fd626 	beq	r16,r4,400c748 <__alt_mem_onchip_memory+0xfc004748>
 400c7f0:	29402034 	orhi	r5,r5,128
 400c7f4:	01000e04 	movi	r4,56
 400c7f8:	2080a316 	blt	r4,r2,400ca88 <__subdf3+0x3c4>
 400c7fc:	010007c4 	movi	r4,31
 400c800:	2080c616 	blt	r4,r2,400cb1c <__subdf3+0x458>
 400c804:	01000804 	movi	r4,32
 400c808:	2089c83a 	sub	r4,r4,r2
 400c80c:	2910983a 	sll	r8,r5,r4
 400c810:	308ed83a 	srl	r7,r6,r2
 400c814:	3108983a 	sll	r4,r6,r4
 400c818:	2884d83a 	srl	r2,r5,r2
 400c81c:	41ccb03a 	or	r6,r8,r7
 400c820:	2008c03a 	cmpne	r4,r4,zero
 400c824:	310cb03a 	or	r6,r6,r4
 400c828:	898dc83a 	sub	r6,r17,r6
 400c82c:	89a3803a 	cmpltu	r17,r17,r6
 400c830:	1887c83a 	sub	r3,r3,r2
 400c834:	1c47c83a 	sub	r3,r3,r17
 400c838:	3023883a 	mov	r17,r6
 400c83c:	1880202c 	andhi	r2,r3,128
 400c840:	10002326 	beq	r2,zero,400c8d0 <__subdf3+0x20c>
 400c844:	04c02034 	movhi	r19,128
 400c848:	9cffffc4 	addi	r19,r19,-1
 400c84c:	1ce6703a 	and	r19,r3,r19
 400c850:	98007a26 	beq	r19,zero,400ca3c <__subdf3+0x378>
 400c854:	9809883a 	mov	r4,r19
 400c858:	400d1c40 	call	400d1c4 <__clzsi2>
 400c85c:	113ffe04 	addi	r4,r2,-8
 400c860:	00c007c4 	movi	r3,31
 400c864:	19007b16 	blt	r3,r4,400ca54 <__subdf3+0x390>
 400c868:	00800804 	movi	r2,32
 400c86c:	1105c83a 	sub	r2,r2,r4
 400c870:	8884d83a 	srl	r2,r17,r2
 400c874:	9906983a 	sll	r3,r19,r4
 400c878:	8922983a 	sll	r17,r17,r4
 400c87c:	10c4b03a 	or	r2,r2,r3
 400c880:	24007816 	blt	r4,r16,400ca64 <__subdf3+0x3a0>
 400c884:	2421c83a 	sub	r16,r4,r16
 400c888:	80c00044 	addi	r3,r16,1
 400c88c:	010007c4 	movi	r4,31
 400c890:	20c09516 	blt	r4,r3,400cae8 <__subdf3+0x424>
 400c894:	01400804 	movi	r5,32
 400c898:	28cbc83a 	sub	r5,r5,r3
 400c89c:	88c8d83a 	srl	r4,r17,r3
 400c8a0:	8962983a 	sll	r17,r17,r5
 400c8a4:	114a983a 	sll	r5,r2,r5
 400c8a8:	10c6d83a 	srl	r3,r2,r3
 400c8ac:	8804c03a 	cmpne	r2,r17,zero
 400c8b0:	290ab03a 	or	r5,r5,r4
 400c8b4:	28a2b03a 	or	r17,r5,r2
 400c8b8:	0021883a 	mov	r16,zero
 400c8bc:	003fa206 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400c8c0:	2090b03a 	or	r8,r4,r2
 400c8c4:	40018e26 	beq	r8,zero,400cf00 <__subdf3+0x83c>
 400c8c8:	1007883a 	mov	r3,r2
 400c8cc:	2023883a 	mov	r17,r4
 400c8d0:	888001cc 	andi	r2,r17,7
 400c8d4:	103f9e1e 	bne	r2,zero,400c750 <__alt_mem_onchip_memory+0xfc004750>
 400c8d8:	1804977a 	slli	r2,r3,29
 400c8dc:	8822d0fa 	srli	r17,r17,3
 400c8e0:	1810d0fa 	srli	r8,r3,3
 400c8e4:	9100004c 	andi	r4,r18,1
 400c8e8:	1444b03a 	or	r2,r2,r17
 400c8ec:	00c1ffc4 	movi	r3,2047
 400c8f0:	80c02826 	beq	r16,r3,400c994 <__subdf3+0x2d0>
 400c8f4:	01400434 	movhi	r5,16
 400c8f8:	297fffc4 	addi	r5,r5,-1
 400c8fc:	80e0703a 	and	r16,r16,r3
 400c900:	414a703a 	and	r5,r8,r5
 400c904:	003fa806 	br	400c7a8 <__alt_mem_onchip_memory+0xfc0047a8>
 400c908:	0080630e 	bge	zero,r2,400ca98 <__subdf3+0x3d4>
 400c90c:	48003026 	beq	r9,zero,400c9d0 <__subdf3+0x30c>
 400c910:	0101ffc4 	movi	r4,2047
 400c914:	813f8c26 	beq	r16,r4,400c748 <__alt_mem_onchip_memory+0xfc004748>
 400c918:	29402034 	orhi	r5,r5,128
 400c91c:	01000e04 	movi	r4,56
 400c920:	2080a90e 	bge	r4,r2,400cbc8 <__subdf3+0x504>
 400c924:	298cb03a 	or	r6,r5,r6
 400c928:	3012c03a 	cmpne	r9,r6,zero
 400c92c:	0005883a 	mov	r2,zero
 400c930:	4c53883a 	add	r9,r9,r17
 400c934:	4c63803a 	cmpltu	r17,r9,r17
 400c938:	10c7883a 	add	r3,r2,r3
 400c93c:	88c7883a 	add	r3,r17,r3
 400c940:	4823883a 	mov	r17,r9
 400c944:	1880202c 	andhi	r2,r3,128
 400c948:	1000d026 	beq	r2,zero,400cc8c <__subdf3+0x5c8>
 400c94c:	84000044 	addi	r16,r16,1
 400c950:	0081ffc4 	movi	r2,2047
 400c954:	8080fe26 	beq	r16,r2,400cd50 <__subdf3+0x68c>
 400c958:	00bfe034 	movhi	r2,65408
 400c95c:	10bfffc4 	addi	r2,r2,-1
 400c960:	1886703a 	and	r3,r3,r2
 400c964:	880ad07a 	srli	r5,r17,1
 400c968:	180497fa 	slli	r2,r3,31
 400c96c:	8900004c 	andi	r4,r17,1
 400c970:	2922b03a 	or	r17,r5,r4
 400c974:	1806d07a 	srli	r3,r3,1
 400c978:	1462b03a 	or	r17,r2,r17
 400c97c:	3825883a 	mov	r18,r7
 400c980:	003f7106 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400c984:	2984b03a 	or	r2,r5,r6
 400c988:	103f6826 	beq	r2,zero,400c72c <__alt_mem_onchip_memory+0xfc00472c>
 400c98c:	39c03fcc 	andi	r7,r7,255
 400c990:	003f6706 	br	400c730 <__alt_mem_onchip_memory+0xfc004730>
 400c994:	4086b03a 	or	r3,r8,r2
 400c998:	18015226 	beq	r3,zero,400cee4 <__subdf3+0x820>
 400c99c:	00c00434 	movhi	r3,16
 400c9a0:	41400234 	orhi	r5,r8,8
 400c9a4:	18ffffc4 	addi	r3,r3,-1
 400c9a8:	28ca703a 	and	r5,r5,r3
 400c9ac:	003f7e06 	br	400c7a8 <__alt_mem_onchip_memory+0xfc0047a8>
 400c9b0:	10bfffc4 	addi	r2,r2,-1
 400c9b4:	1000491e 	bne	r2,zero,400cadc <__subdf3+0x418>
 400c9b8:	898fc83a 	sub	r7,r17,r6
 400c9bc:	89e3803a 	cmpltu	r17,r17,r7
 400c9c0:	1947c83a 	sub	r3,r3,r5
 400c9c4:	1c47c83a 	sub	r3,r3,r17
 400c9c8:	3823883a 	mov	r17,r7
 400c9cc:	003f9b06 	br	400c83c <__alt_mem_onchip_memory+0xfc00483c>
 400c9d0:	2988b03a 	or	r4,r5,r6
 400c9d4:	203f5c26 	beq	r4,zero,400c748 <__alt_mem_onchip_memory+0xfc004748>
 400c9d8:	10bfffc4 	addi	r2,r2,-1
 400c9dc:	1000931e 	bne	r2,zero,400cc2c <__subdf3+0x568>
 400c9e0:	898d883a 	add	r6,r17,r6
 400c9e4:	3463803a 	cmpltu	r17,r6,r17
 400c9e8:	1947883a 	add	r3,r3,r5
 400c9ec:	88c7883a 	add	r3,r17,r3
 400c9f0:	3023883a 	mov	r17,r6
 400c9f4:	003fd306 	br	400c944 <__alt_mem_onchip_memory+0xfc004944>
 400c9f8:	1000541e 	bne	r2,zero,400cb4c <__subdf3+0x488>
 400c9fc:	80800044 	addi	r2,r16,1
 400ca00:	1081ffcc 	andi	r2,r2,2047
 400ca04:	01000044 	movi	r4,1
 400ca08:	2080a20e 	bge	r4,r2,400cc94 <__subdf3+0x5d0>
 400ca0c:	8989c83a 	sub	r4,r17,r6
 400ca10:	8905803a 	cmpltu	r2,r17,r4
 400ca14:	1967c83a 	sub	r19,r3,r5
 400ca18:	98a7c83a 	sub	r19,r19,r2
 400ca1c:	9880202c 	andhi	r2,r19,128
 400ca20:	10006326 	beq	r2,zero,400cbb0 <__subdf3+0x4ec>
 400ca24:	3463c83a 	sub	r17,r6,r17
 400ca28:	28c7c83a 	sub	r3,r5,r3
 400ca2c:	344d803a 	cmpltu	r6,r6,r17
 400ca30:	19a7c83a 	sub	r19,r3,r6
 400ca34:	3825883a 	mov	r18,r7
 400ca38:	983f861e 	bne	r19,zero,400c854 <__alt_mem_onchip_memory+0xfc004854>
 400ca3c:	8809883a 	mov	r4,r17
 400ca40:	400d1c40 	call	400d1c4 <__clzsi2>
 400ca44:	10800804 	addi	r2,r2,32
 400ca48:	113ffe04 	addi	r4,r2,-8
 400ca4c:	00c007c4 	movi	r3,31
 400ca50:	193f850e 	bge	r3,r4,400c868 <__alt_mem_onchip_memory+0xfc004868>
 400ca54:	10bff604 	addi	r2,r2,-40
 400ca58:	8884983a 	sll	r2,r17,r2
 400ca5c:	0023883a 	mov	r17,zero
 400ca60:	243f880e 	bge	r4,r16,400c884 <__alt_mem_onchip_memory+0xfc004884>
 400ca64:	00ffe034 	movhi	r3,65408
 400ca68:	18ffffc4 	addi	r3,r3,-1
 400ca6c:	8121c83a 	sub	r16,r16,r4
 400ca70:	10c6703a 	and	r3,r2,r3
 400ca74:	003f3406 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ca78:	9100004c 	andi	r4,r18,1
 400ca7c:	000b883a 	mov	r5,zero
 400ca80:	0005883a 	mov	r2,zero
 400ca84:	003f4806 	br	400c7a8 <__alt_mem_onchip_memory+0xfc0047a8>
 400ca88:	298cb03a 	or	r6,r5,r6
 400ca8c:	300cc03a 	cmpne	r6,r6,zero
 400ca90:	0005883a 	mov	r2,zero
 400ca94:	003f6406 	br	400c828 <__alt_mem_onchip_memory+0xfc004828>
 400ca98:	10009a1e 	bne	r2,zero,400cd04 <__subdf3+0x640>
 400ca9c:	82400044 	addi	r9,r16,1
 400caa0:	4881ffcc 	andi	r2,r9,2047
 400caa4:	02800044 	movi	r10,1
 400caa8:	5080670e 	bge	r10,r2,400cc48 <__subdf3+0x584>
 400caac:	0081ffc4 	movi	r2,2047
 400cab0:	4880af26 	beq	r9,r2,400cd70 <__subdf3+0x6ac>
 400cab4:	898d883a 	add	r6,r17,r6
 400cab8:	1945883a 	add	r2,r3,r5
 400cabc:	3447803a 	cmpltu	r3,r6,r17
 400cac0:	1887883a 	add	r3,r3,r2
 400cac4:	182297fa 	slli	r17,r3,31
 400cac8:	300cd07a 	srli	r6,r6,1
 400cacc:	1806d07a 	srli	r3,r3,1
 400cad0:	4821883a 	mov	r16,r9
 400cad4:	89a2b03a 	or	r17,r17,r6
 400cad8:	003f1b06 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cadc:	0101ffc4 	movi	r4,2047
 400cae0:	813f441e 	bne	r16,r4,400c7f4 <__alt_mem_onchip_memory+0xfc0047f4>
 400cae4:	003f1806 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cae8:	843ff844 	addi	r16,r16,-31
 400caec:	01400804 	movi	r5,32
 400caf0:	1408d83a 	srl	r4,r2,r16
 400caf4:	19405026 	beq	r3,r5,400cc38 <__subdf3+0x574>
 400caf8:	01401004 	movi	r5,64
 400cafc:	28c7c83a 	sub	r3,r5,r3
 400cb00:	10c4983a 	sll	r2,r2,r3
 400cb04:	88a2b03a 	or	r17,r17,r2
 400cb08:	8822c03a 	cmpne	r17,r17,zero
 400cb0c:	2462b03a 	or	r17,r4,r17
 400cb10:	0007883a 	mov	r3,zero
 400cb14:	0021883a 	mov	r16,zero
 400cb18:	003f6d06 	br	400c8d0 <__alt_mem_onchip_memory+0xfc0048d0>
 400cb1c:	11fff804 	addi	r7,r2,-32
 400cb20:	01000804 	movi	r4,32
 400cb24:	29ced83a 	srl	r7,r5,r7
 400cb28:	11004526 	beq	r2,r4,400cc40 <__subdf3+0x57c>
 400cb2c:	01001004 	movi	r4,64
 400cb30:	2089c83a 	sub	r4,r4,r2
 400cb34:	2904983a 	sll	r2,r5,r4
 400cb38:	118cb03a 	or	r6,r2,r6
 400cb3c:	300cc03a 	cmpne	r6,r6,zero
 400cb40:	398cb03a 	or	r6,r7,r6
 400cb44:	0005883a 	mov	r2,zero
 400cb48:	003f3706 	br	400c828 <__alt_mem_onchip_memory+0xfc004828>
 400cb4c:	80002a26 	beq	r16,zero,400cbf8 <__subdf3+0x534>
 400cb50:	0101ffc4 	movi	r4,2047
 400cb54:	49006626 	beq	r9,r4,400ccf0 <__subdf3+0x62c>
 400cb58:	0085c83a 	sub	r2,zero,r2
 400cb5c:	18c02034 	orhi	r3,r3,128
 400cb60:	01000e04 	movi	r4,56
 400cb64:	20807e16 	blt	r4,r2,400cd60 <__subdf3+0x69c>
 400cb68:	010007c4 	movi	r4,31
 400cb6c:	2080e716 	blt	r4,r2,400cf0c <__subdf3+0x848>
 400cb70:	01000804 	movi	r4,32
 400cb74:	2089c83a 	sub	r4,r4,r2
 400cb78:	1914983a 	sll	r10,r3,r4
 400cb7c:	8890d83a 	srl	r8,r17,r2
 400cb80:	8908983a 	sll	r4,r17,r4
 400cb84:	1884d83a 	srl	r2,r3,r2
 400cb88:	5222b03a 	or	r17,r10,r8
 400cb8c:	2006c03a 	cmpne	r3,r4,zero
 400cb90:	88e2b03a 	or	r17,r17,r3
 400cb94:	3463c83a 	sub	r17,r6,r17
 400cb98:	2885c83a 	sub	r2,r5,r2
 400cb9c:	344d803a 	cmpltu	r6,r6,r17
 400cba0:	1187c83a 	sub	r3,r2,r6
 400cba4:	4821883a 	mov	r16,r9
 400cba8:	3825883a 	mov	r18,r7
 400cbac:	003f2306 	br	400c83c <__alt_mem_onchip_memory+0xfc00483c>
 400cbb0:	24d0b03a 	or	r8,r4,r19
 400cbb4:	40001b1e 	bne	r8,zero,400cc24 <__subdf3+0x560>
 400cbb8:	0005883a 	mov	r2,zero
 400cbbc:	0009883a 	mov	r4,zero
 400cbc0:	0021883a 	mov	r16,zero
 400cbc4:	003f4906 	br	400c8ec <__alt_mem_onchip_memory+0xfc0048ec>
 400cbc8:	010007c4 	movi	r4,31
 400cbcc:	20803a16 	blt	r4,r2,400ccb8 <__subdf3+0x5f4>
 400cbd0:	01000804 	movi	r4,32
 400cbd4:	2089c83a 	sub	r4,r4,r2
 400cbd8:	2912983a 	sll	r9,r5,r4
 400cbdc:	3090d83a 	srl	r8,r6,r2
 400cbe0:	3108983a 	sll	r4,r6,r4
 400cbe4:	2884d83a 	srl	r2,r5,r2
 400cbe8:	4a12b03a 	or	r9,r9,r8
 400cbec:	2008c03a 	cmpne	r4,r4,zero
 400cbf0:	4912b03a 	or	r9,r9,r4
 400cbf4:	003f4e06 	br	400c930 <__alt_mem_onchip_memory+0xfc004930>
 400cbf8:	1c48b03a 	or	r4,r3,r17
 400cbfc:	20003c26 	beq	r4,zero,400ccf0 <__subdf3+0x62c>
 400cc00:	0084303a 	nor	r2,zero,r2
 400cc04:	1000381e 	bne	r2,zero,400cce8 <__subdf3+0x624>
 400cc08:	3463c83a 	sub	r17,r6,r17
 400cc0c:	28c5c83a 	sub	r2,r5,r3
 400cc10:	344d803a 	cmpltu	r6,r6,r17
 400cc14:	1187c83a 	sub	r3,r2,r6
 400cc18:	4821883a 	mov	r16,r9
 400cc1c:	3825883a 	mov	r18,r7
 400cc20:	003f0606 	br	400c83c <__alt_mem_onchip_memory+0xfc00483c>
 400cc24:	2023883a 	mov	r17,r4
 400cc28:	003f0906 	br	400c850 <__alt_mem_onchip_memory+0xfc004850>
 400cc2c:	0101ffc4 	movi	r4,2047
 400cc30:	813f3a1e 	bne	r16,r4,400c91c <__alt_mem_onchip_memory+0xfc00491c>
 400cc34:	003ec406 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cc38:	0005883a 	mov	r2,zero
 400cc3c:	003fb106 	br	400cb04 <__alt_mem_onchip_memory+0xfc004b04>
 400cc40:	0005883a 	mov	r2,zero
 400cc44:	003fbc06 	br	400cb38 <__alt_mem_onchip_memory+0xfc004b38>
 400cc48:	1c44b03a 	or	r2,r3,r17
 400cc4c:	80008e1e 	bne	r16,zero,400ce88 <__subdf3+0x7c4>
 400cc50:	1000c826 	beq	r2,zero,400cf74 <__subdf3+0x8b0>
 400cc54:	2984b03a 	or	r2,r5,r6
 400cc58:	103ebb26 	beq	r2,zero,400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cc5c:	8989883a 	add	r4,r17,r6
 400cc60:	1945883a 	add	r2,r3,r5
 400cc64:	2447803a 	cmpltu	r3,r4,r17
 400cc68:	1887883a 	add	r3,r3,r2
 400cc6c:	1880202c 	andhi	r2,r3,128
 400cc70:	2023883a 	mov	r17,r4
 400cc74:	103f1626 	beq	r2,zero,400c8d0 <__alt_mem_onchip_memory+0xfc0048d0>
 400cc78:	00bfe034 	movhi	r2,65408
 400cc7c:	10bfffc4 	addi	r2,r2,-1
 400cc80:	5021883a 	mov	r16,r10
 400cc84:	1886703a 	and	r3,r3,r2
 400cc88:	003eaf06 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cc8c:	3825883a 	mov	r18,r7
 400cc90:	003f0f06 	br	400c8d0 <__alt_mem_onchip_memory+0xfc0048d0>
 400cc94:	1c44b03a 	or	r2,r3,r17
 400cc98:	8000251e 	bne	r16,zero,400cd30 <__subdf3+0x66c>
 400cc9c:	1000661e 	bne	r2,zero,400ce38 <__subdf3+0x774>
 400cca0:	2990b03a 	or	r8,r5,r6
 400cca4:	40009626 	beq	r8,zero,400cf00 <__subdf3+0x83c>
 400cca8:	2807883a 	mov	r3,r5
 400ccac:	3023883a 	mov	r17,r6
 400ccb0:	3825883a 	mov	r18,r7
 400ccb4:	003ea406 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ccb8:	127ff804 	addi	r9,r2,-32
 400ccbc:	01000804 	movi	r4,32
 400ccc0:	2a52d83a 	srl	r9,r5,r9
 400ccc4:	11008c26 	beq	r2,r4,400cef8 <__subdf3+0x834>
 400ccc8:	01001004 	movi	r4,64
 400cccc:	2085c83a 	sub	r2,r4,r2
 400ccd0:	2884983a 	sll	r2,r5,r2
 400ccd4:	118cb03a 	or	r6,r2,r6
 400ccd8:	300cc03a 	cmpne	r6,r6,zero
 400ccdc:	4992b03a 	or	r9,r9,r6
 400cce0:	0005883a 	mov	r2,zero
 400cce4:	003f1206 	br	400c930 <__alt_mem_onchip_memory+0xfc004930>
 400cce8:	0101ffc4 	movi	r4,2047
 400ccec:	493f9c1e 	bne	r9,r4,400cb60 <__alt_mem_onchip_memory+0xfc004b60>
 400ccf0:	2807883a 	mov	r3,r5
 400ccf4:	3023883a 	mov	r17,r6
 400ccf8:	4821883a 	mov	r16,r9
 400ccfc:	3825883a 	mov	r18,r7
 400cd00:	003e9106 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cd04:	80001f1e 	bne	r16,zero,400cd84 <__subdf3+0x6c0>
 400cd08:	1c48b03a 	or	r4,r3,r17
 400cd0c:	20005a26 	beq	r4,zero,400ce78 <__subdf3+0x7b4>
 400cd10:	0084303a 	nor	r2,zero,r2
 400cd14:	1000561e 	bne	r2,zero,400ce70 <__subdf3+0x7ac>
 400cd18:	89a3883a 	add	r17,r17,r6
 400cd1c:	1945883a 	add	r2,r3,r5
 400cd20:	898d803a 	cmpltu	r6,r17,r6
 400cd24:	3087883a 	add	r3,r6,r2
 400cd28:	4821883a 	mov	r16,r9
 400cd2c:	003f0506 	br	400c944 <__alt_mem_onchip_memory+0xfc004944>
 400cd30:	10002b1e 	bne	r2,zero,400cde0 <__subdf3+0x71c>
 400cd34:	2984b03a 	or	r2,r5,r6
 400cd38:	10008026 	beq	r2,zero,400cf3c <__subdf3+0x878>
 400cd3c:	2807883a 	mov	r3,r5
 400cd40:	3023883a 	mov	r17,r6
 400cd44:	3825883a 	mov	r18,r7
 400cd48:	0401ffc4 	movi	r16,2047
 400cd4c:	003e7e06 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cd50:	3809883a 	mov	r4,r7
 400cd54:	0011883a 	mov	r8,zero
 400cd58:	0005883a 	mov	r2,zero
 400cd5c:	003ee306 	br	400c8ec <__alt_mem_onchip_memory+0xfc0048ec>
 400cd60:	1c62b03a 	or	r17,r3,r17
 400cd64:	8822c03a 	cmpne	r17,r17,zero
 400cd68:	0005883a 	mov	r2,zero
 400cd6c:	003f8906 	br	400cb94 <__alt_mem_onchip_memory+0xfc004b94>
 400cd70:	3809883a 	mov	r4,r7
 400cd74:	4821883a 	mov	r16,r9
 400cd78:	0011883a 	mov	r8,zero
 400cd7c:	0005883a 	mov	r2,zero
 400cd80:	003eda06 	br	400c8ec <__alt_mem_onchip_memory+0xfc0048ec>
 400cd84:	0101ffc4 	movi	r4,2047
 400cd88:	49003b26 	beq	r9,r4,400ce78 <__subdf3+0x7b4>
 400cd8c:	0085c83a 	sub	r2,zero,r2
 400cd90:	18c02034 	orhi	r3,r3,128
 400cd94:	01000e04 	movi	r4,56
 400cd98:	20806e16 	blt	r4,r2,400cf54 <__subdf3+0x890>
 400cd9c:	010007c4 	movi	r4,31
 400cda0:	20807716 	blt	r4,r2,400cf80 <__subdf3+0x8bc>
 400cda4:	01000804 	movi	r4,32
 400cda8:	2089c83a 	sub	r4,r4,r2
 400cdac:	1914983a 	sll	r10,r3,r4
 400cdb0:	8890d83a 	srl	r8,r17,r2
 400cdb4:	8908983a 	sll	r4,r17,r4
 400cdb8:	1884d83a 	srl	r2,r3,r2
 400cdbc:	5222b03a 	or	r17,r10,r8
 400cdc0:	2006c03a 	cmpne	r3,r4,zero
 400cdc4:	88e2b03a 	or	r17,r17,r3
 400cdc8:	89a3883a 	add	r17,r17,r6
 400cdcc:	1145883a 	add	r2,r2,r5
 400cdd0:	898d803a 	cmpltu	r6,r17,r6
 400cdd4:	3087883a 	add	r3,r6,r2
 400cdd8:	4821883a 	mov	r16,r9
 400cddc:	003ed906 	br	400c944 <__alt_mem_onchip_memory+0xfc004944>
 400cde0:	2984b03a 	or	r2,r5,r6
 400cde4:	10004226 	beq	r2,zero,400cef0 <__subdf3+0x82c>
 400cde8:	1808d0fa 	srli	r4,r3,3
 400cdec:	8822d0fa 	srli	r17,r17,3
 400cdf0:	1806977a 	slli	r3,r3,29
 400cdf4:	2080022c 	andhi	r2,r4,8
 400cdf8:	1c62b03a 	or	r17,r3,r17
 400cdfc:	10000826 	beq	r2,zero,400ce20 <__subdf3+0x75c>
 400ce00:	2812d0fa 	srli	r9,r5,3
 400ce04:	4880022c 	andhi	r2,r9,8
 400ce08:	1000051e 	bne	r2,zero,400ce20 <__subdf3+0x75c>
 400ce0c:	300cd0fa 	srli	r6,r6,3
 400ce10:	2804977a 	slli	r2,r5,29
 400ce14:	4809883a 	mov	r4,r9
 400ce18:	3825883a 	mov	r18,r7
 400ce1c:	11a2b03a 	or	r17,r2,r6
 400ce20:	8806d77a 	srli	r3,r17,29
 400ce24:	200890fa 	slli	r4,r4,3
 400ce28:	882290fa 	slli	r17,r17,3
 400ce2c:	0401ffc4 	movi	r16,2047
 400ce30:	1906b03a 	or	r3,r3,r4
 400ce34:	003e4406 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ce38:	2984b03a 	or	r2,r5,r6
 400ce3c:	103e4226 	beq	r2,zero,400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ce40:	8989c83a 	sub	r4,r17,r6
 400ce44:	8911803a 	cmpltu	r8,r17,r4
 400ce48:	1945c83a 	sub	r2,r3,r5
 400ce4c:	1205c83a 	sub	r2,r2,r8
 400ce50:	1200202c 	andhi	r8,r2,128
 400ce54:	403e9a26 	beq	r8,zero,400c8c0 <__alt_mem_onchip_memory+0xfc0048c0>
 400ce58:	3463c83a 	sub	r17,r6,r17
 400ce5c:	28c5c83a 	sub	r2,r5,r3
 400ce60:	344d803a 	cmpltu	r6,r6,r17
 400ce64:	1187c83a 	sub	r3,r2,r6
 400ce68:	3825883a 	mov	r18,r7
 400ce6c:	003e3606 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ce70:	0101ffc4 	movi	r4,2047
 400ce74:	493fc71e 	bne	r9,r4,400cd94 <__alt_mem_onchip_memory+0xfc004d94>
 400ce78:	2807883a 	mov	r3,r5
 400ce7c:	3023883a 	mov	r17,r6
 400ce80:	4821883a 	mov	r16,r9
 400ce84:	003e3006 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400ce88:	10003626 	beq	r2,zero,400cf64 <__subdf3+0x8a0>
 400ce8c:	2984b03a 	or	r2,r5,r6
 400ce90:	10001726 	beq	r2,zero,400cef0 <__subdf3+0x82c>
 400ce94:	1808d0fa 	srli	r4,r3,3
 400ce98:	8822d0fa 	srli	r17,r17,3
 400ce9c:	1806977a 	slli	r3,r3,29
 400cea0:	2080022c 	andhi	r2,r4,8
 400cea4:	1c62b03a 	or	r17,r3,r17
 400cea8:	10000726 	beq	r2,zero,400cec8 <__subdf3+0x804>
 400ceac:	2812d0fa 	srli	r9,r5,3
 400ceb0:	4880022c 	andhi	r2,r9,8
 400ceb4:	1000041e 	bne	r2,zero,400cec8 <__subdf3+0x804>
 400ceb8:	300cd0fa 	srli	r6,r6,3
 400cebc:	2804977a 	slli	r2,r5,29
 400cec0:	4809883a 	mov	r4,r9
 400cec4:	11a2b03a 	or	r17,r2,r6
 400cec8:	8806d77a 	srli	r3,r17,29
 400cecc:	200890fa 	slli	r4,r4,3
 400ced0:	882290fa 	slli	r17,r17,3
 400ced4:	3825883a 	mov	r18,r7
 400ced8:	1906b03a 	or	r3,r3,r4
 400cedc:	0401ffc4 	movi	r16,2047
 400cee0:	003e1906 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cee4:	000b883a 	mov	r5,zero
 400cee8:	0005883a 	mov	r2,zero
 400ceec:	003e2e06 	br	400c7a8 <__alt_mem_onchip_memory+0xfc0047a8>
 400cef0:	0401ffc4 	movi	r16,2047
 400cef4:	003e1406 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cef8:	0005883a 	mov	r2,zero
 400cefc:	003f7506 	br	400ccd4 <__alt_mem_onchip_memory+0xfc004cd4>
 400cf00:	0005883a 	mov	r2,zero
 400cf04:	0009883a 	mov	r4,zero
 400cf08:	003e7806 	br	400c8ec <__alt_mem_onchip_memory+0xfc0048ec>
 400cf0c:	123ff804 	addi	r8,r2,-32
 400cf10:	01000804 	movi	r4,32
 400cf14:	1a10d83a 	srl	r8,r3,r8
 400cf18:	11002526 	beq	r2,r4,400cfb0 <__subdf3+0x8ec>
 400cf1c:	01001004 	movi	r4,64
 400cf20:	2085c83a 	sub	r2,r4,r2
 400cf24:	1884983a 	sll	r2,r3,r2
 400cf28:	1444b03a 	or	r2,r2,r17
 400cf2c:	1004c03a 	cmpne	r2,r2,zero
 400cf30:	40a2b03a 	or	r17,r8,r2
 400cf34:	0005883a 	mov	r2,zero
 400cf38:	003f1606 	br	400cb94 <__alt_mem_onchip_memory+0xfc004b94>
 400cf3c:	02000434 	movhi	r8,16
 400cf40:	0009883a 	mov	r4,zero
 400cf44:	423fffc4 	addi	r8,r8,-1
 400cf48:	00bfffc4 	movi	r2,-1
 400cf4c:	0401ffc4 	movi	r16,2047
 400cf50:	003e6606 	br	400c8ec <__alt_mem_onchip_memory+0xfc0048ec>
 400cf54:	1c62b03a 	or	r17,r3,r17
 400cf58:	8822c03a 	cmpne	r17,r17,zero
 400cf5c:	0005883a 	mov	r2,zero
 400cf60:	003f9906 	br	400cdc8 <__alt_mem_onchip_memory+0xfc004dc8>
 400cf64:	2807883a 	mov	r3,r5
 400cf68:	3023883a 	mov	r17,r6
 400cf6c:	0401ffc4 	movi	r16,2047
 400cf70:	003df506 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cf74:	2807883a 	mov	r3,r5
 400cf78:	3023883a 	mov	r17,r6
 400cf7c:	003df206 	br	400c748 <__alt_mem_onchip_memory+0xfc004748>
 400cf80:	123ff804 	addi	r8,r2,-32
 400cf84:	01000804 	movi	r4,32
 400cf88:	1a10d83a 	srl	r8,r3,r8
 400cf8c:	11000a26 	beq	r2,r4,400cfb8 <__subdf3+0x8f4>
 400cf90:	01001004 	movi	r4,64
 400cf94:	2085c83a 	sub	r2,r4,r2
 400cf98:	1884983a 	sll	r2,r3,r2
 400cf9c:	1444b03a 	or	r2,r2,r17
 400cfa0:	1004c03a 	cmpne	r2,r2,zero
 400cfa4:	40a2b03a 	or	r17,r8,r2
 400cfa8:	0005883a 	mov	r2,zero
 400cfac:	003f8606 	br	400cdc8 <__alt_mem_onchip_memory+0xfc004dc8>
 400cfb0:	0005883a 	mov	r2,zero
 400cfb4:	003fdc06 	br	400cf28 <__alt_mem_onchip_memory+0xfc004f28>
 400cfb8:	0005883a 	mov	r2,zero
 400cfbc:	003ff706 	br	400cf9c <__alt_mem_onchip_memory+0xfc004f9c>

0400cfc0 <__fixdfsi>:
 400cfc0:	280cd53a 	srli	r6,r5,20
 400cfc4:	00c00434 	movhi	r3,16
 400cfc8:	18ffffc4 	addi	r3,r3,-1
 400cfcc:	3181ffcc 	andi	r6,r6,2047
 400cfd0:	01c0ff84 	movi	r7,1022
 400cfd4:	28c6703a 	and	r3,r5,r3
 400cfd8:	280ad7fa 	srli	r5,r5,31
 400cfdc:	3980120e 	bge	r7,r6,400d028 <__fixdfsi+0x68>
 400cfe0:	00810744 	movi	r2,1053
 400cfe4:	11800c16 	blt	r2,r6,400d018 <__fixdfsi+0x58>
 400cfe8:	00810cc4 	movi	r2,1075
 400cfec:	1185c83a 	sub	r2,r2,r6
 400cff0:	01c007c4 	movi	r7,31
 400cff4:	18c00434 	orhi	r3,r3,16
 400cff8:	38800d16 	blt	r7,r2,400d030 <__fixdfsi+0x70>
 400cffc:	31befb44 	addi	r6,r6,-1043
 400d000:	2084d83a 	srl	r2,r4,r2
 400d004:	1986983a 	sll	r3,r3,r6
 400d008:	1884b03a 	or	r2,r3,r2
 400d00c:	28000726 	beq	r5,zero,400d02c <__fixdfsi+0x6c>
 400d010:	0085c83a 	sub	r2,zero,r2
 400d014:	f800283a 	ret
 400d018:	00a00034 	movhi	r2,32768
 400d01c:	10bfffc4 	addi	r2,r2,-1
 400d020:	2885883a 	add	r2,r5,r2
 400d024:	f800283a 	ret
 400d028:	0005883a 	mov	r2,zero
 400d02c:	f800283a 	ret
 400d030:	008104c4 	movi	r2,1043
 400d034:	1185c83a 	sub	r2,r2,r6
 400d038:	1884d83a 	srl	r2,r3,r2
 400d03c:	003ff306 	br	400d00c <__alt_mem_onchip_memory+0xfc00500c>

0400d040 <__floatsidf>:
 400d040:	defffd04 	addi	sp,sp,-12
 400d044:	dfc00215 	stw	ra,8(sp)
 400d048:	dc400115 	stw	r17,4(sp)
 400d04c:	dc000015 	stw	r16,0(sp)
 400d050:	20002b26 	beq	r4,zero,400d100 <__floatsidf+0xc0>
 400d054:	2023883a 	mov	r17,r4
 400d058:	2020d7fa 	srli	r16,r4,31
 400d05c:	20002d16 	blt	r4,zero,400d114 <__floatsidf+0xd4>
 400d060:	8809883a 	mov	r4,r17
 400d064:	400d1c40 	call	400d1c4 <__clzsi2>
 400d068:	01410784 	movi	r5,1054
 400d06c:	288bc83a 	sub	r5,r5,r2
 400d070:	01010cc4 	movi	r4,1075
 400d074:	2149c83a 	sub	r4,r4,r5
 400d078:	00c007c4 	movi	r3,31
 400d07c:	1900160e 	bge	r3,r4,400d0d8 <__floatsidf+0x98>
 400d080:	00c104c4 	movi	r3,1043
 400d084:	1947c83a 	sub	r3,r3,r5
 400d088:	88c6983a 	sll	r3,r17,r3
 400d08c:	00800434 	movhi	r2,16
 400d090:	10bfffc4 	addi	r2,r2,-1
 400d094:	1886703a 	and	r3,r3,r2
 400d098:	2941ffcc 	andi	r5,r5,2047
 400d09c:	800d883a 	mov	r6,r16
 400d0a0:	0005883a 	mov	r2,zero
 400d0a4:	280a953a 	slli	r5,r5,20
 400d0a8:	31803fcc 	andi	r6,r6,255
 400d0ac:	01000434 	movhi	r4,16
 400d0b0:	300c97fa 	slli	r6,r6,31
 400d0b4:	213fffc4 	addi	r4,r4,-1
 400d0b8:	1906703a 	and	r3,r3,r4
 400d0bc:	1946b03a 	or	r3,r3,r5
 400d0c0:	1986b03a 	or	r3,r3,r6
 400d0c4:	dfc00217 	ldw	ra,8(sp)
 400d0c8:	dc400117 	ldw	r17,4(sp)
 400d0cc:	dc000017 	ldw	r16,0(sp)
 400d0d0:	dec00304 	addi	sp,sp,12
 400d0d4:	f800283a 	ret
 400d0d8:	00c002c4 	movi	r3,11
 400d0dc:	1887c83a 	sub	r3,r3,r2
 400d0e0:	88c6d83a 	srl	r3,r17,r3
 400d0e4:	8904983a 	sll	r2,r17,r4
 400d0e8:	01000434 	movhi	r4,16
 400d0ec:	213fffc4 	addi	r4,r4,-1
 400d0f0:	2941ffcc 	andi	r5,r5,2047
 400d0f4:	1906703a 	and	r3,r3,r4
 400d0f8:	800d883a 	mov	r6,r16
 400d0fc:	003fe906 	br	400d0a4 <__alt_mem_onchip_memory+0xfc0050a4>
 400d100:	000d883a 	mov	r6,zero
 400d104:	000b883a 	mov	r5,zero
 400d108:	0007883a 	mov	r3,zero
 400d10c:	0005883a 	mov	r2,zero
 400d110:	003fe406 	br	400d0a4 <__alt_mem_onchip_memory+0xfc0050a4>
 400d114:	0123c83a 	sub	r17,zero,r4
 400d118:	003fd106 	br	400d060 <__alt_mem_onchip_memory+0xfc005060>

0400d11c <__floatunsidf>:
 400d11c:	defffe04 	addi	sp,sp,-8
 400d120:	dc000015 	stw	r16,0(sp)
 400d124:	dfc00115 	stw	ra,4(sp)
 400d128:	2021883a 	mov	r16,r4
 400d12c:	20002226 	beq	r4,zero,400d1b8 <__floatunsidf+0x9c>
 400d130:	400d1c40 	call	400d1c4 <__clzsi2>
 400d134:	01010784 	movi	r4,1054
 400d138:	2089c83a 	sub	r4,r4,r2
 400d13c:	01810cc4 	movi	r6,1075
 400d140:	310dc83a 	sub	r6,r6,r4
 400d144:	00c007c4 	movi	r3,31
 400d148:	1980120e 	bge	r3,r6,400d194 <__floatunsidf+0x78>
 400d14c:	00c104c4 	movi	r3,1043
 400d150:	1907c83a 	sub	r3,r3,r4
 400d154:	80ca983a 	sll	r5,r16,r3
 400d158:	00800434 	movhi	r2,16
 400d15c:	10bfffc4 	addi	r2,r2,-1
 400d160:	2101ffcc 	andi	r4,r4,2047
 400d164:	0021883a 	mov	r16,zero
 400d168:	288a703a 	and	r5,r5,r2
 400d16c:	2008953a 	slli	r4,r4,20
 400d170:	00c00434 	movhi	r3,16
 400d174:	18ffffc4 	addi	r3,r3,-1
 400d178:	28c6703a 	and	r3,r5,r3
 400d17c:	8005883a 	mov	r2,r16
 400d180:	1906b03a 	or	r3,r3,r4
 400d184:	dfc00117 	ldw	ra,4(sp)
 400d188:	dc000017 	ldw	r16,0(sp)
 400d18c:	dec00204 	addi	sp,sp,8
 400d190:	f800283a 	ret
 400d194:	00c002c4 	movi	r3,11
 400d198:	188bc83a 	sub	r5,r3,r2
 400d19c:	814ad83a 	srl	r5,r16,r5
 400d1a0:	00c00434 	movhi	r3,16
 400d1a4:	18ffffc4 	addi	r3,r3,-1
 400d1a8:	81a0983a 	sll	r16,r16,r6
 400d1ac:	2101ffcc 	andi	r4,r4,2047
 400d1b0:	28ca703a 	and	r5,r5,r3
 400d1b4:	003fed06 	br	400d16c <__alt_mem_onchip_memory+0xfc00516c>
 400d1b8:	0009883a 	mov	r4,zero
 400d1bc:	000b883a 	mov	r5,zero
 400d1c0:	003fea06 	br	400d16c <__alt_mem_onchip_memory+0xfc00516c>

0400d1c4 <__clzsi2>:
 400d1c4:	00bfffd4 	movui	r2,65535
 400d1c8:	11000536 	bltu	r2,r4,400d1e0 <__clzsi2+0x1c>
 400d1cc:	00803fc4 	movi	r2,255
 400d1d0:	11000f36 	bltu	r2,r4,400d210 <__clzsi2+0x4c>
 400d1d4:	00800804 	movi	r2,32
 400d1d8:	0007883a 	mov	r3,zero
 400d1dc:	00000506 	br	400d1f4 <__clzsi2+0x30>
 400d1e0:	00804034 	movhi	r2,256
 400d1e4:	10bfffc4 	addi	r2,r2,-1
 400d1e8:	11000c2e 	bgeu	r2,r4,400d21c <__clzsi2+0x58>
 400d1ec:	00800204 	movi	r2,8
 400d1f0:	00c00604 	movi	r3,24
 400d1f4:	20c8d83a 	srl	r4,r4,r3
 400d1f8:	00c10074 	movhi	r3,1025
 400d1fc:	18fec204 	addi	r3,r3,-1272
 400d200:	1909883a 	add	r4,r3,r4
 400d204:	20c00003 	ldbu	r3,0(r4)
 400d208:	10c5c83a 	sub	r2,r2,r3
 400d20c:	f800283a 	ret
 400d210:	00800604 	movi	r2,24
 400d214:	00c00204 	movi	r3,8
 400d218:	003ff606 	br	400d1f4 <__alt_mem_onchip_memory+0xfc0051f4>
 400d21c:	00800404 	movi	r2,16
 400d220:	1007883a 	mov	r3,r2
 400d224:	003ff306 	br	400d1f4 <__alt_mem_onchip_memory+0xfc0051f4>

0400d228 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d228:	defffe04 	addi	sp,sp,-8
 400d22c:	dfc00115 	stw	ra,4(sp)
 400d230:	df000015 	stw	fp,0(sp)
 400d234:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d238:	d0a00b17 	ldw	r2,-32724(gp)
 400d23c:	10000326 	beq	r2,zero,400d24c <alt_get_errno+0x24>
 400d240:	d0a00b17 	ldw	r2,-32724(gp)
 400d244:	103ee83a 	callr	r2
 400d248:	00000106 	br	400d250 <alt_get_errno+0x28>
 400d24c:	d0a6d104 	addi	r2,gp,-25788
}
 400d250:	e037883a 	mov	sp,fp
 400d254:	dfc00117 	ldw	ra,4(sp)
 400d258:	df000017 	ldw	fp,0(sp)
 400d25c:	dec00204 	addi	sp,sp,8
 400d260:	f800283a 	ret

0400d264 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400d264:	defffb04 	addi	sp,sp,-20
 400d268:	dfc00415 	stw	ra,16(sp)
 400d26c:	df000315 	stw	fp,12(sp)
 400d270:	df000304 	addi	fp,sp,12
 400d274:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400d278:	e0bfff17 	ldw	r2,-4(fp)
 400d27c:	10000816 	blt	r2,zero,400d2a0 <close+0x3c>
 400d280:	01400304 	movi	r5,12
 400d284:	e13fff17 	ldw	r4,-4(fp)
 400d288:	400a95c0 	call	400a95c <__mulsi3>
 400d28c:	1007883a 	mov	r3,r2
 400d290:	00810074 	movhi	r2,1025
 400d294:	10814004 	addi	r2,r2,1280
 400d298:	1885883a 	add	r2,r3,r2
 400d29c:	00000106 	br	400d2a4 <close+0x40>
 400d2a0:	0005883a 	mov	r2,zero
 400d2a4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 400d2a8:	e0bffd17 	ldw	r2,-12(fp)
 400d2ac:	10001926 	beq	r2,zero,400d314 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400d2b0:	e0bffd17 	ldw	r2,-12(fp)
 400d2b4:	10800017 	ldw	r2,0(r2)
 400d2b8:	10800417 	ldw	r2,16(r2)
 400d2bc:	10000626 	beq	r2,zero,400d2d8 <close+0x74>
 400d2c0:	e0bffd17 	ldw	r2,-12(fp)
 400d2c4:	10800017 	ldw	r2,0(r2)
 400d2c8:	10800417 	ldw	r2,16(r2)
 400d2cc:	e13ffd17 	ldw	r4,-12(fp)
 400d2d0:	103ee83a 	callr	r2
 400d2d4:	00000106 	br	400d2dc <close+0x78>
 400d2d8:	0005883a 	mov	r2,zero
 400d2dc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400d2e0:	e13fff17 	ldw	r4,-4(fp)
 400d2e4:	400d94c0 	call	400d94c <alt_release_fd>
    if (rval < 0)
 400d2e8:	e0bffe17 	ldw	r2,-8(fp)
 400d2ec:	1000070e 	bge	r2,zero,400d30c <close+0xa8>
    {
      ALT_ERRNO = -rval;
 400d2f0:	400d2280 	call	400d228 <alt_get_errno>
 400d2f4:	1007883a 	mov	r3,r2
 400d2f8:	e0bffe17 	ldw	r2,-8(fp)
 400d2fc:	0085c83a 	sub	r2,zero,r2
 400d300:	18800015 	stw	r2,0(r3)
      return -1;
 400d304:	00bfffc4 	movi	r2,-1
 400d308:	00000706 	br	400d328 <close+0xc4>
    }
    return 0;
 400d30c:	0005883a 	mov	r2,zero
 400d310:	00000506 	br	400d328 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d314:	400d2280 	call	400d228 <alt_get_errno>
 400d318:	1007883a 	mov	r3,r2
 400d31c:	00801444 	movi	r2,81
 400d320:	18800015 	stw	r2,0(r3)
    return -1;
 400d324:	00bfffc4 	movi	r2,-1
  }
}
 400d328:	e037883a 	mov	sp,fp
 400d32c:	dfc00117 	ldw	ra,4(sp)
 400d330:	df000017 	ldw	fp,0(sp)
 400d334:	dec00204 	addi	sp,sp,8
 400d338:	f800283a 	ret

0400d33c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400d33c:	defffc04 	addi	sp,sp,-16
 400d340:	df000315 	stw	fp,12(sp)
 400d344:	df000304 	addi	fp,sp,12
 400d348:	e13ffd15 	stw	r4,-12(fp)
 400d34c:	e17ffe15 	stw	r5,-8(fp)
 400d350:	e1bfff15 	stw	r6,-4(fp)
  return len;
 400d354:	e0bfff17 	ldw	r2,-4(fp)
}
 400d358:	e037883a 	mov	sp,fp
 400d35c:	df000017 	ldw	fp,0(sp)
 400d360:	dec00104 	addi	sp,sp,4
 400d364:	f800283a 	ret

0400d368 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d368:	defffe04 	addi	sp,sp,-8
 400d36c:	dfc00115 	stw	ra,4(sp)
 400d370:	df000015 	stw	fp,0(sp)
 400d374:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d378:	d0a00b17 	ldw	r2,-32724(gp)
 400d37c:	10000326 	beq	r2,zero,400d38c <alt_get_errno+0x24>
 400d380:	d0a00b17 	ldw	r2,-32724(gp)
 400d384:	103ee83a 	callr	r2
 400d388:	00000106 	br	400d390 <alt_get_errno+0x28>
 400d38c:	d0a6d104 	addi	r2,gp,-25788
}
 400d390:	e037883a 	mov	sp,fp
 400d394:	dfc00117 	ldw	ra,4(sp)
 400d398:	df000017 	ldw	fp,0(sp)
 400d39c:	dec00204 	addi	sp,sp,8
 400d3a0:	f800283a 	ret

0400d3a4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 400d3a4:	defffb04 	addi	sp,sp,-20
 400d3a8:	dfc00415 	stw	ra,16(sp)
 400d3ac:	df000315 	stw	fp,12(sp)
 400d3b0:	df000304 	addi	fp,sp,12
 400d3b4:	e13ffe15 	stw	r4,-8(fp)
 400d3b8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d3bc:	e0bffe17 	ldw	r2,-8(fp)
 400d3c0:	10000816 	blt	r2,zero,400d3e4 <fstat+0x40>
 400d3c4:	01400304 	movi	r5,12
 400d3c8:	e13ffe17 	ldw	r4,-8(fp)
 400d3cc:	400a95c0 	call	400a95c <__mulsi3>
 400d3d0:	1007883a 	mov	r3,r2
 400d3d4:	00810074 	movhi	r2,1025
 400d3d8:	10814004 	addi	r2,r2,1280
 400d3dc:	1885883a 	add	r2,r3,r2
 400d3e0:	00000106 	br	400d3e8 <fstat+0x44>
 400d3e4:	0005883a 	mov	r2,zero
 400d3e8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 400d3ec:	e0bffd17 	ldw	r2,-12(fp)
 400d3f0:	10001026 	beq	r2,zero,400d434 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 400d3f4:	e0bffd17 	ldw	r2,-12(fp)
 400d3f8:	10800017 	ldw	r2,0(r2)
 400d3fc:	10800817 	ldw	r2,32(r2)
 400d400:	10000726 	beq	r2,zero,400d420 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 400d404:	e0bffd17 	ldw	r2,-12(fp)
 400d408:	10800017 	ldw	r2,0(r2)
 400d40c:	10800817 	ldw	r2,32(r2)
 400d410:	e17fff17 	ldw	r5,-4(fp)
 400d414:	e13ffd17 	ldw	r4,-12(fp)
 400d418:	103ee83a 	callr	r2
 400d41c:	00000a06 	br	400d448 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 400d420:	e0bfff17 	ldw	r2,-4(fp)
 400d424:	00c80004 	movi	r3,8192
 400d428:	10c00115 	stw	r3,4(r2)
      return 0;
 400d42c:	0005883a 	mov	r2,zero
 400d430:	00000506 	br	400d448 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d434:	400d3680 	call	400d368 <alt_get_errno>
 400d438:	1007883a 	mov	r3,r2
 400d43c:	00801444 	movi	r2,81
 400d440:	18800015 	stw	r2,0(r3)
    return -1;
 400d444:	00bfffc4 	movi	r2,-1
  }
}
 400d448:	e037883a 	mov	sp,fp
 400d44c:	dfc00117 	ldw	ra,4(sp)
 400d450:	df000017 	ldw	fp,0(sp)
 400d454:	dec00204 	addi	sp,sp,8
 400d458:	f800283a 	ret

0400d45c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d45c:	defffe04 	addi	sp,sp,-8
 400d460:	dfc00115 	stw	ra,4(sp)
 400d464:	df000015 	stw	fp,0(sp)
 400d468:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d46c:	d0a00b17 	ldw	r2,-32724(gp)
 400d470:	10000326 	beq	r2,zero,400d480 <alt_get_errno+0x24>
 400d474:	d0a00b17 	ldw	r2,-32724(gp)
 400d478:	103ee83a 	callr	r2
 400d47c:	00000106 	br	400d484 <alt_get_errno+0x28>
 400d480:	d0a6d104 	addi	r2,gp,-25788
}
 400d484:	e037883a 	mov	sp,fp
 400d488:	dfc00117 	ldw	ra,4(sp)
 400d48c:	df000017 	ldw	fp,0(sp)
 400d490:	dec00204 	addi	sp,sp,8
 400d494:	f800283a 	ret

0400d498 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 400d498:	deffed04 	addi	sp,sp,-76
 400d49c:	dfc01215 	stw	ra,72(sp)
 400d4a0:	df001115 	stw	fp,68(sp)
 400d4a4:	df001104 	addi	fp,sp,68
 400d4a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d4ac:	e0bfff17 	ldw	r2,-4(fp)
 400d4b0:	10000816 	blt	r2,zero,400d4d4 <isatty+0x3c>
 400d4b4:	01400304 	movi	r5,12
 400d4b8:	e13fff17 	ldw	r4,-4(fp)
 400d4bc:	400a95c0 	call	400a95c <__mulsi3>
 400d4c0:	1007883a 	mov	r3,r2
 400d4c4:	00810074 	movhi	r2,1025
 400d4c8:	10814004 	addi	r2,r2,1280
 400d4cc:	1885883a 	add	r2,r3,r2
 400d4d0:	00000106 	br	400d4d8 <isatty+0x40>
 400d4d4:	0005883a 	mov	r2,zero
 400d4d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 400d4dc:	e0bfef17 	ldw	r2,-68(fp)
 400d4e0:	10000e26 	beq	r2,zero,400d51c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 400d4e4:	e0bfef17 	ldw	r2,-68(fp)
 400d4e8:	10800017 	ldw	r2,0(r2)
 400d4ec:	10800817 	ldw	r2,32(r2)
 400d4f0:	1000021e 	bne	r2,zero,400d4fc <isatty+0x64>
    {
      return 1;
 400d4f4:	00800044 	movi	r2,1
 400d4f8:	00000d06 	br	400d530 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 400d4fc:	e0bff004 	addi	r2,fp,-64
 400d500:	100b883a 	mov	r5,r2
 400d504:	e13fff17 	ldw	r4,-4(fp)
 400d508:	400d3a40 	call	400d3a4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 400d50c:	e0bff117 	ldw	r2,-60(fp)
 400d510:	10880020 	cmpeqi	r2,r2,8192
 400d514:	10803fcc 	andi	r2,r2,255
 400d518:	00000506 	br	400d530 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d51c:	400d45c0 	call	400d45c <alt_get_errno>
 400d520:	1007883a 	mov	r3,r2
 400d524:	00801444 	movi	r2,81
 400d528:	18800015 	stw	r2,0(r3)
    return 0;
 400d52c:	0005883a 	mov	r2,zero
  }
}
 400d530:	e037883a 	mov	sp,fp
 400d534:	dfc00117 	ldw	ra,4(sp)
 400d538:	df000017 	ldw	fp,0(sp)
 400d53c:	dec00204 	addi	sp,sp,8
 400d540:	f800283a 	ret

0400d544 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400d544:	defffc04 	addi	sp,sp,-16
 400d548:	df000315 	stw	fp,12(sp)
 400d54c:	df000304 	addi	fp,sp,12
 400d550:	e13ffd15 	stw	r4,-12(fp)
 400d554:	e17ffe15 	stw	r5,-8(fp)
 400d558:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 400d55c:	e0fffe17 	ldw	r3,-8(fp)
 400d560:	e0bffd17 	ldw	r2,-12(fp)
 400d564:	18800c26 	beq	r3,r2,400d598 <alt_load_section+0x54>
  {
    while( to != end )
 400d568:	00000806 	br	400d58c <alt_load_section+0x48>
    {
      *to++ = *from++;
 400d56c:	e0bffe17 	ldw	r2,-8(fp)
 400d570:	10c00104 	addi	r3,r2,4
 400d574:	e0fffe15 	stw	r3,-8(fp)
 400d578:	e0fffd17 	ldw	r3,-12(fp)
 400d57c:	19000104 	addi	r4,r3,4
 400d580:	e13ffd15 	stw	r4,-12(fp)
 400d584:	18c00017 	ldw	r3,0(r3)
 400d588:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 400d58c:	e0fffe17 	ldw	r3,-8(fp)
 400d590:	e0bfff17 	ldw	r2,-4(fp)
 400d594:	18bff51e 	bne	r3,r2,400d56c <__alt_mem_onchip_memory+0xfc00556c>
    {
      *to++ = *from++;
    }
  }
}
 400d598:	0001883a 	nop
 400d59c:	e037883a 	mov	sp,fp
 400d5a0:	df000017 	ldw	fp,0(sp)
 400d5a4:	dec00104 	addi	sp,sp,4
 400d5a8:	f800283a 	ret

0400d5ac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400d5ac:	defffe04 	addi	sp,sp,-8
 400d5b0:	dfc00115 	stw	ra,4(sp)
 400d5b4:	df000015 	stw	fp,0(sp)
 400d5b8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400d5bc:	01810074 	movhi	r6,1025
 400d5c0:	3185c804 	addi	r6,r6,5920
 400d5c4:	01410074 	movhi	r5,1025
 400d5c8:	297f0d04 	addi	r5,r5,-972
 400d5cc:	01010074 	movhi	r4,1025
 400d5d0:	2105c804 	addi	r4,r4,5920
 400d5d4:	400d5440 	call	400d544 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400d5d8:	01810034 	movhi	r6,1024
 400d5dc:	31808c04 	addi	r6,r6,560
 400d5e0:	01410034 	movhi	r5,1024
 400d5e4:	29400804 	addi	r5,r5,32
 400d5e8:	01010034 	movhi	r4,1024
 400d5ec:	21000804 	addi	r4,r4,32
 400d5f0:	400d5440 	call	400d544 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400d5f4:	01810074 	movhi	r6,1025
 400d5f8:	31bf0d04 	addi	r6,r6,-972
 400d5fc:	01410074 	movhi	r5,1025
 400d600:	297e3504 	addi	r5,r5,-1836
 400d604:	01010074 	movhi	r4,1025
 400d608:	213e3504 	addi	r4,r4,-1836
 400d60c:	400d5440 	call	400d544 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400d610:	400e81c0 	call	400e81c <alt_dcache_flush_all>
  alt_icache_flush_all();
 400d614:	400e9dc0 	call	400e9dc <alt_icache_flush_all>
}
 400d618:	0001883a 	nop
 400d61c:	e037883a 	mov	sp,fp
 400d620:	dfc00117 	ldw	ra,4(sp)
 400d624:	df000017 	ldw	fp,0(sp)
 400d628:	dec00204 	addi	sp,sp,8
 400d62c:	f800283a 	ret

0400d630 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d630:	defffe04 	addi	sp,sp,-8
 400d634:	dfc00115 	stw	ra,4(sp)
 400d638:	df000015 	stw	fp,0(sp)
 400d63c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d640:	d0a00b17 	ldw	r2,-32724(gp)
 400d644:	10000326 	beq	r2,zero,400d654 <alt_get_errno+0x24>
 400d648:	d0a00b17 	ldw	r2,-32724(gp)
 400d64c:	103ee83a 	callr	r2
 400d650:	00000106 	br	400d658 <alt_get_errno+0x28>
 400d654:	d0a6d104 	addi	r2,gp,-25788
}
 400d658:	e037883a 	mov	sp,fp
 400d65c:	dfc00117 	ldw	ra,4(sp)
 400d660:	df000017 	ldw	fp,0(sp)
 400d664:	dec00204 	addi	sp,sp,8
 400d668:	f800283a 	ret

0400d66c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 400d66c:	defff904 	addi	sp,sp,-28
 400d670:	dfc00615 	stw	ra,24(sp)
 400d674:	df000515 	stw	fp,20(sp)
 400d678:	df000504 	addi	fp,sp,20
 400d67c:	e13ffd15 	stw	r4,-12(fp)
 400d680:	e17ffe15 	stw	r5,-8(fp)
 400d684:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 400d688:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d68c:	e0bffd17 	ldw	r2,-12(fp)
 400d690:	10000816 	blt	r2,zero,400d6b4 <lseek+0x48>
 400d694:	01400304 	movi	r5,12
 400d698:	e13ffd17 	ldw	r4,-12(fp)
 400d69c:	400a95c0 	call	400a95c <__mulsi3>
 400d6a0:	1007883a 	mov	r3,r2
 400d6a4:	00810074 	movhi	r2,1025
 400d6a8:	10814004 	addi	r2,r2,1280
 400d6ac:	1885883a 	add	r2,r3,r2
 400d6b0:	00000106 	br	400d6b8 <lseek+0x4c>
 400d6b4:	0005883a 	mov	r2,zero
 400d6b8:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 400d6bc:	e0bffc17 	ldw	r2,-16(fp)
 400d6c0:	10001026 	beq	r2,zero,400d704 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 400d6c4:	e0bffc17 	ldw	r2,-16(fp)
 400d6c8:	10800017 	ldw	r2,0(r2)
 400d6cc:	10800717 	ldw	r2,28(r2)
 400d6d0:	10000926 	beq	r2,zero,400d6f8 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 400d6d4:	e0bffc17 	ldw	r2,-16(fp)
 400d6d8:	10800017 	ldw	r2,0(r2)
 400d6dc:	10800717 	ldw	r2,28(r2)
 400d6e0:	e1bfff17 	ldw	r6,-4(fp)
 400d6e4:	e17ffe17 	ldw	r5,-8(fp)
 400d6e8:	e13ffc17 	ldw	r4,-16(fp)
 400d6ec:	103ee83a 	callr	r2
 400d6f0:	e0bffb15 	stw	r2,-20(fp)
 400d6f4:	00000506 	br	400d70c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 400d6f8:	00bfde84 	movi	r2,-134
 400d6fc:	e0bffb15 	stw	r2,-20(fp)
 400d700:	00000206 	br	400d70c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 400d704:	00bfebc4 	movi	r2,-81
 400d708:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 400d70c:	e0bffb17 	ldw	r2,-20(fp)
 400d710:	1000070e 	bge	r2,zero,400d730 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 400d714:	400d6300 	call	400d630 <alt_get_errno>
 400d718:	1007883a 	mov	r3,r2
 400d71c:	e0bffb17 	ldw	r2,-20(fp)
 400d720:	0085c83a 	sub	r2,zero,r2
 400d724:	18800015 	stw	r2,0(r3)
    rc = -1;
 400d728:	00bfffc4 	movi	r2,-1
 400d72c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 400d730:	e0bffb17 	ldw	r2,-20(fp)
}
 400d734:	e037883a 	mov	sp,fp
 400d738:	dfc00117 	ldw	ra,4(sp)
 400d73c:	df000017 	ldw	fp,0(sp)
 400d740:	dec00204 	addi	sp,sp,8
 400d744:	f800283a 	ret

0400d748 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400d748:	defffd04 	addi	sp,sp,-12
 400d74c:	dfc00215 	stw	ra,8(sp)
 400d750:	df000115 	stw	fp,4(sp)
 400d754:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400d758:	0009883a 	mov	r4,zero
 400d75c:	400dbf00 	call	400dbf0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400d760:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400d764:	400dc280 	call	400dc28 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400d768:	01810074 	movhi	r6,1025
 400d76c:	31bf0504 	addi	r6,r6,-1004
 400d770:	01410074 	movhi	r5,1025
 400d774:	297f0504 	addi	r5,r5,-1004
 400d778:	01010074 	movhi	r4,1025
 400d77c:	213f0504 	addi	r4,r4,-1004
 400d780:	400ed800 	call	400ed80 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400d784:	400e91c0 	call	400e91c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400d788:	01010074 	movhi	r4,1025
 400d78c:	213a5f04 	addi	r4,r4,-5764
 400d790:	400f5400 	call	400f540 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400d794:	d0a6d217 	ldw	r2,-25784(gp)
 400d798:	d0e6d317 	ldw	r3,-25780(gp)
 400d79c:	d126d417 	ldw	r4,-25776(gp)
 400d7a0:	200d883a 	mov	r6,r4
 400d7a4:	180b883a 	mov	r5,r3
 400d7a8:	1009883a 	mov	r4,r2
 400d7ac:	400026c0 	call	400026c <main>
 400d7b0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400d7b4:	01000044 	movi	r4,1
 400d7b8:	400d2640 	call	400d264 <close>
  exit (result);
 400d7bc:	e13fff17 	ldw	r4,-4(fp)
 400d7c0:	400f5540 	call	400f554 <exit>

0400d7c4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400d7c4:	defffe04 	addi	sp,sp,-8
 400d7c8:	df000115 	stw	fp,4(sp)
 400d7cc:	df000104 	addi	fp,sp,4
 400d7d0:	e13fff15 	stw	r4,-4(fp)
}
 400d7d4:	0001883a 	nop
 400d7d8:	e037883a 	mov	sp,fp
 400d7dc:	df000017 	ldw	fp,0(sp)
 400d7e0:	dec00104 	addi	sp,sp,4
 400d7e4:	f800283a 	ret

0400d7e8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400d7e8:	defffe04 	addi	sp,sp,-8
 400d7ec:	df000115 	stw	fp,4(sp)
 400d7f0:	df000104 	addi	fp,sp,4
 400d7f4:	e13fff15 	stw	r4,-4(fp)
}
 400d7f8:	0001883a 	nop
 400d7fc:	e037883a 	mov	sp,fp
 400d800:	df000017 	ldw	fp,0(sp)
 400d804:	dec00104 	addi	sp,sp,4
 400d808:	f800283a 	ret

0400d80c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d80c:	defffe04 	addi	sp,sp,-8
 400d810:	dfc00115 	stw	ra,4(sp)
 400d814:	df000015 	stw	fp,0(sp)
 400d818:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d81c:	d0a00b17 	ldw	r2,-32724(gp)
 400d820:	10000326 	beq	r2,zero,400d830 <alt_get_errno+0x24>
 400d824:	d0a00b17 	ldw	r2,-32724(gp)
 400d828:	103ee83a 	callr	r2
 400d82c:	00000106 	br	400d834 <alt_get_errno+0x28>
 400d830:	d0a6d104 	addi	r2,gp,-25788
}
 400d834:	e037883a 	mov	sp,fp
 400d838:	dfc00117 	ldw	ra,4(sp)
 400d83c:	df000017 	ldw	fp,0(sp)
 400d840:	dec00204 	addi	sp,sp,8
 400d844:	f800283a 	ret

0400d848 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 400d848:	defff904 	addi	sp,sp,-28
 400d84c:	dfc00615 	stw	ra,24(sp)
 400d850:	df000515 	stw	fp,20(sp)
 400d854:	df000504 	addi	fp,sp,20
 400d858:	e13ffd15 	stw	r4,-12(fp)
 400d85c:	e17ffe15 	stw	r5,-8(fp)
 400d860:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d864:	e0bffd17 	ldw	r2,-12(fp)
 400d868:	10000816 	blt	r2,zero,400d88c <read+0x44>
 400d86c:	01400304 	movi	r5,12
 400d870:	e13ffd17 	ldw	r4,-12(fp)
 400d874:	400a95c0 	call	400a95c <__mulsi3>
 400d878:	1007883a 	mov	r3,r2
 400d87c:	00810074 	movhi	r2,1025
 400d880:	10814004 	addi	r2,r2,1280
 400d884:	1885883a 	add	r2,r3,r2
 400d888:	00000106 	br	400d890 <read+0x48>
 400d88c:	0005883a 	mov	r2,zero
 400d890:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400d894:	e0bffb17 	ldw	r2,-20(fp)
 400d898:	10002226 	beq	r2,zero,400d924 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d89c:	e0bffb17 	ldw	r2,-20(fp)
 400d8a0:	10800217 	ldw	r2,8(r2)
 400d8a4:	108000cc 	andi	r2,r2,3
 400d8a8:	10800060 	cmpeqi	r2,r2,1
 400d8ac:	1000181e 	bne	r2,zero,400d910 <read+0xc8>
        (fd->dev->read))
 400d8b0:	e0bffb17 	ldw	r2,-20(fp)
 400d8b4:	10800017 	ldw	r2,0(r2)
 400d8b8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d8bc:	10001426 	beq	r2,zero,400d910 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 400d8c0:	e0bffb17 	ldw	r2,-20(fp)
 400d8c4:	10800017 	ldw	r2,0(r2)
 400d8c8:	10800517 	ldw	r2,20(r2)
 400d8cc:	e0ffff17 	ldw	r3,-4(fp)
 400d8d0:	180d883a 	mov	r6,r3
 400d8d4:	e17ffe17 	ldw	r5,-8(fp)
 400d8d8:	e13ffb17 	ldw	r4,-20(fp)
 400d8dc:	103ee83a 	callr	r2
 400d8e0:	e0bffc15 	stw	r2,-16(fp)
 400d8e4:	e0bffc17 	ldw	r2,-16(fp)
 400d8e8:	1000070e 	bge	r2,zero,400d908 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 400d8ec:	400d80c0 	call	400d80c <alt_get_errno>
 400d8f0:	1007883a 	mov	r3,r2
 400d8f4:	e0bffc17 	ldw	r2,-16(fp)
 400d8f8:	0085c83a 	sub	r2,zero,r2
 400d8fc:	18800015 	stw	r2,0(r3)
          return -1;
 400d900:	00bfffc4 	movi	r2,-1
 400d904:	00000c06 	br	400d938 <read+0xf0>
        }
        return rval;
 400d908:	e0bffc17 	ldw	r2,-16(fp)
 400d90c:	00000a06 	br	400d938 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 400d910:	400d80c0 	call	400d80c <alt_get_errno>
 400d914:	1007883a 	mov	r3,r2
 400d918:	00800344 	movi	r2,13
 400d91c:	18800015 	stw	r2,0(r3)
 400d920:	00000406 	br	400d934 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 400d924:	400d80c0 	call	400d80c <alt_get_errno>
 400d928:	1007883a 	mov	r3,r2
 400d92c:	00801444 	movi	r2,81
 400d930:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400d934:	00bfffc4 	movi	r2,-1
}
 400d938:	e037883a 	mov	sp,fp
 400d93c:	dfc00117 	ldw	ra,4(sp)
 400d940:	df000017 	ldw	fp,0(sp)
 400d944:	dec00204 	addi	sp,sp,8
 400d948:	f800283a 	ret

0400d94c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400d94c:	defffc04 	addi	sp,sp,-16
 400d950:	dfc00315 	stw	ra,12(sp)
 400d954:	df000215 	stw	fp,8(sp)
 400d958:	dc000115 	stw	r16,4(sp)
 400d95c:	df000204 	addi	fp,sp,8
 400d960:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 400d964:	e0bffe17 	ldw	r2,-8(fp)
 400d968:	108000d0 	cmplti	r2,r2,3
 400d96c:	1000111e 	bne	r2,zero,400d9b4 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 400d970:	04010074 	movhi	r16,1025
 400d974:	84014004 	addi	r16,r16,1280
 400d978:	e0bffe17 	ldw	r2,-8(fp)
 400d97c:	01400304 	movi	r5,12
 400d980:	1009883a 	mov	r4,r2
 400d984:	400a95c0 	call	400a95c <__mulsi3>
 400d988:	8085883a 	add	r2,r16,r2
 400d98c:	10800204 	addi	r2,r2,8
 400d990:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 400d994:	04010074 	movhi	r16,1025
 400d998:	84014004 	addi	r16,r16,1280
 400d99c:	e0bffe17 	ldw	r2,-8(fp)
 400d9a0:	01400304 	movi	r5,12
 400d9a4:	1009883a 	mov	r4,r2
 400d9a8:	400a95c0 	call	400a95c <__mulsi3>
 400d9ac:	8085883a 	add	r2,r16,r2
 400d9b0:	10000015 	stw	zero,0(r2)
  }
}
 400d9b4:	0001883a 	nop
 400d9b8:	e6ffff04 	addi	sp,fp,-4
 400d9bc:	dfc00217 	ldw	ra,8(sp)
 400d9c0:	df000117 	ldw	fp,4(sp)
 400d9c4:	dc000017 	ldw	r16,0(sp)
 400d9c8:	dec00304 	addi	sp,sp,12
 400d9cc:	f800283a 	ret

0400d9d0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400d9d0:	defff904 	addi	sp,sp,-28
 400d9d4:	df000615 	stw	fp,24(sp)
 400d9d8:	df000604 	addi	fp,sp,24
 400d9dc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400d9e0:	0005303a 	rdctl	r2,status
 400d9e4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d9e8:	e0fffe17 	ldw	r3,-8(fp)
 400d9ec:	00bfff84 	movi	r2,-2
 400d9f0:	1884703a 	and	r2,r3,r2
 400d9f4:	1001703a 	wrctl	status,r2
  
  return context;
 400d9f8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400d9fc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400da00:	d0a00c17 	ldw	r2,-32720(gp)
 400da04:	10c000c4 	addi	r3,r2,3
 400da08:	00bfff04 	movi	r2,-4
 400da0c:	1884703a 	and	r2,r3,r2
 400da10:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400da14:	d0e00c17 	ldw	r3,-32720(gp)
 400da18:	e0bfff17 	ldw	r2,-4(fp)
 400da1c:	1887883a 	add	r3,r3,r2
 400da20:	00820034 	movhi	r2,2048
 400da24:	10800004 	addi	r2,r2,0
 400da28:	10c0062e 	bgeu	r2,r3,400da44 <sbrk+0x74>
 400da2c:	e0bffb17 	ldw	r2,-20(fp)
 400da30:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400da34:	e0bffa17 	ldw	r2,-24(fp)
 400da38:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400da3c:	00bfffc4 	movi	r2,-1
 400da40:	00000b06 	br	400da70 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 400da44:	d0a00c17 	ldw	r2,-32720(gp)
 400da48:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 400da4c:	d0e00c17 	ldw	r3,-32720(gp)
 400da50:	e0bfff17 	ldw	r2,-4(fp)
 400da54:	1885883a 	add	r2,r3,r2
 400da58:	d0a00c15 	stw	r2,-32720(gp)
 400da5c:	e0bffb17 	ldw	r2,-20(fp)
 400da60:	e0bffc15 	stw	r2,-16(fp)
 400da64:	e0bffc17 	ldw	r2,-16(fp)
 400da68:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400da6c:	e0bffd17 	ldw	r2,-12(fp)
} 
 400da70:	e037883a 	mov	sp,fp
 400da74:	df000017 	ldw	fp,0(sp)
 400da78:	dec00104 	addi	sp,sp,4
 400da7c:	f800283a 	ret

0400da80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400da80:	defffe04 	addi	sp,sp,-8
 400da84:	dfc00115 	stw	ra,4(sp)
 400da88:	df000015 	stw	fp,0(sp)
 400da8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400da90:	d0a00b17 	ldw	r2,-32724(gp)
 400da94:	10000326 	beq	r2,zero,400daa4 <alt_get_errno+0x24>
 400da98:	d0a00b17 	ldw	r2,-32724(gp)
 400da9c:	103ee83a 	callr	r2
 400daa0:	00000106 	br	400daa8 <alt_get_errno+0x28>
 400daa4:	d0a6d104 	addi	r2,gp,-25788
}
 400daa8:	e037883a 	mov	sp,fp
 400daac:	dfc00117 	ldw	ra,4(sp)
 400dab0:	df000017 	ldw	fp,0(sp)
 400dab4:	dec00204 	addi	sp,sp,8
 400dab8:	f800283a 	ret

0400dabc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 400dabc:	defff904 	addi	sp,sp,-28
 400dac0:	dfc00615 	stw	ra,24(sp)
 400dac4:	df000515 	stw	fp,20(sp)
 400dac8:	df000504 	addi	fp,sp,20
 400dacc:	e13ffd15 	stw	r4,-12(fp)
 400dad0:	e17ffe15 	stw	r5,-8(fp)
 400dad4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400dad8:	e0bffd17 	ldw	r2,-12(fp)
 400dadc:	10000816 	blt	r2,zero,400db00 <write+0x44>
 400dae0:	01400304 	movi	r5,12
 400dae4:	e13ffd17 	ldw	r4,-12(fp)
 400dae8:	400a95c0 	call	400a95c <__mulsi3>
 400daec:	1007883a 	mov	r3,r2
 400daf0:	00810074 	movhi	r2,1025
 400daf4:	10814004 	addi	r2,r2,1280
 400daf8:	1885883a 	add	r2,r3,r2
 400dafc:	00000106 	br	400db04 <write+0x48>
 400db00:	0005883a 	mov	r2,zero
 400db04:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400db08:	e0bffb17 	ldw	r2,-20(fp)
 400db0c:	10002126 	beq	r2,zero,400db94 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 400db10:	e0bffb17 	ldw	r2,-20(fp)
 400db14:	10800217 	ldw	r2,8(r2)
 400db18:	108000cc 	andi	r2,r2,3
 400db1c:	10001826 	beq	r2,zero,400db80 <write+0xc4>
 400db20:	e0bffb17 	ldw	r2,-20(fp)
 400db24:	10800017 	ldw	r2,0(r2)
 400db28:	10800617 	ldw	r2,24(r2)
 400db2c:	10001426 	beq	r2,zero,400db80 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 400db30:	e0bffb17 	ldw	r2,-20(fp)
 400db34:	10800017 	ldw	r2,0(r2)
 400db38:	10800617 	ldw	r2,24(r2)
 400db3c:	e0ffff17 	ldw	r3,-4(fp)
 400db40:	180d883a 	mov	r6,r3
 400db44:	e17ffe17 	ldw	r5,-8(fp)
 400db48:	e13ffb17 	ldw	r4,-20(fp)
 400db4c:	103ee83a 	callr	r2
 400db50:	e0bffc15 	stw	r2,-16(fp)
 400db54:	e0bffc17 	ldw	r2,-16(fp)
 400db58:	1000070e 	bge	r2,zero,400db78 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 400db5c:	400da800 	call	400da80 <alt_get_errno>
 400db60:	1007883a 	mov	r3,r2
 400db64:	e0bffc17 	ldw	r2,-16(fp)
 400db68:	0085c83a 	sub	r2,zero,r2
 400db6c:	18800015 	stw	r2,0(r3)
        return -1;
 400db70:	00bfffc4 	movi	r2,-1
 400db74:	00000c06 	br	400dba8 <write+0xec>
      }
      return rval;
 400db78:	e0bffc17 	ldw	r2,-16(fp)
 400db7c:	00000a06 	br	400dba8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 400db80:	400da800 	call	400da80 <alt_get_errno>
 400db84:	1007883a 	mov	r3,r2
 400db88:	00800344 	movi	r2,13
 400db8c:	18800015 	stw	r2,0(r3)
 400db90:	00000406 	br	400dba4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 400db94:	400da800 	call	400da80 <alt_get_errno>
 400db98:	1007883a 	mov	r3,r2
 400db9c:	00801444 	movi	r2,81
 400dba0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400dba4:	00bfffc4 	movi	r2,-1
}
 400dba8:	e037883a 	mov	sp,fp
 400dbac:	dfc00117 	ldw	ra,4(sp)
 400dbb0:	df000017 	ldw	fp,0(sp)
 400dbb4:	dec00204 	addi	sp,sp,8
 400dbb8:	f800283a 	ret

0400dbbc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400dbbc:	defffd04 	addi	sp,sp,-12
 400dbc0:	dfc00215 	stw	ra,8(sp)
 400dbc4:	df000115 	stw	fp,4(sp)
 400dbc8:	df000104 	addi	fp,sp,4
 400dbcc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400dbd0:	d1600804 	addi	r5,gp,-32736
 400dbd4:	e13fff17 	ldw	r4,-4(fp)
 400dbd8:	400e8780 	call	400e878 <alt_dev_llist_insert>
}
 400dbdc:	e037883a 	mov	sp,fp
 400dbe0:	dfc00117 	ldw	ra,4(sp)
 400dbe4:	df000017 	ldw	fp,0(sp)
 400dbe8:	dec00204 	addi	sp,sp,8
 400dbec:	f800283a 	ret

0400dbf0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400dbf0:	defffd04 	addi	sp,sp,-12
 400dbf4:	dfc00215 	stw	ra,8(sp)
 400dbf8:	df000115 	stw	fp,4(sp)
 400dbfc:	df000104 	addi	fp,sp,4
 400dc00:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
 400dc04:	400f2240 	call	400f224 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400dc08:	00800044 	movi	r2,1
 400dc0c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 400dc10:	0001883a 	nop
 400dc14:	e037883a 	mov	sp,fp
 400dc18:	dfc00117 	ldw	ra,4(sp)
 400dc1c:	df000017 	ldw	fp,0(sp)
 400dc20:	dec00204 	addi	sp,sp,8
 400dc24:	f800283a 	ret

0400dc28 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400dc28:	defffe04 	addi	sp,sp,-8
 400dc2c:	dfc00115 	stw	ra,4(sp)
 400dc30:	df000015 	stw	fp,0(sp)
 400dc34:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( HIGH_RES_TIMER, high_res_timer);
 400dc38:	00820074 	movhi	r2,2049
 400dc3c:	10840004 	addi	r2,r2,4096
 400dc40:	d0a6d515 	stw	r2,-25772(gp)
 400dc44:	0080bef4 	movhi	r2,763
 400dc48:	10bc2004 	addi	r2,r2,-3968
 400dc4c:	d0a6d615 	stw	r2,-25768(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 400dc50:	01800044 	movi	r6,1
 400dc54:	000b883a 	mov	r5,zero
 400dc58:	01010074 	movhi	r4,1025
 400dc5c:	2101aa04 	addi	r4,r4,1704
 400dc60:	400ddec0 	call	400ddec <altera_avalon_jtag_uart_init>
 400dc64:	01010074 	movhi	r4,1025
 400dc68:	2101a004 	addi	r4,r4,1664
 400dc6c:	400dbbc0 	call	400dbbc <alt_dev_reg>
}
 400dc70:	0001883a 	nop
 400dc74:	e037883a 	mov	sp,fp
 400dc78:	dfc00117 	ldw	ra,4(sp)
 400dc7c:	df000017 	ldw	fp,0(sp)
 400dc80:	dec00204 	addi	sp,sp,8
 400dc84:	f800283a 	ret

0400dc88 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400dc88:	defffa04 	addi	sp,sp,-24
 400dc8c:	dfc00515 	stw	ra,20(sp)
 400dc90:	df000415 	stw	fp,16(sp)
 400dc94:	df000404 	addi	fp,sp,16
 400dc98:	e13ffd15 	stw	r4,-12(fp)
 400dc9c:	e17ffe15 	stw	r5,-8(fp)
 400dca0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400dca4:	e0bffd17 	ldw	r2,-12(fp)
 400dca8:	10800017 	ldw	r2,0(r2)
 400dcac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400dcb0:	e0bffc17 	ldw	r2,-16(fp)
 400dcb4:	10c00a04 	addi	r3,r2,40
 400dcb8:	e0bffd17 	ldw	r2,-12(fp)
 400dcbc:	10800217 	ldw	r2,8(r2)
 400dcc0:	100f883a 	mov	r7,r2
 400dcc4:	e1bfff17 	ldw	r6,-4(fp)
 400dcc8:	e17ffe17 	ldw	r5,-8(fp)
 400dccc:	1809883a 	mov	r4,r3
 400dcd0:	400e2b00 	call	400e2b0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400dcd4:	e037883a 	mov	sp,fp
 400dcd8:	dfc00117 	ldw	ra,4(sp)
 400dcdc:	df000017 	ldw	fp,0(sp)
 400dce0:	dec00204 	addi	sp,sp,8
 400dce4:	f800283a 	ret

0400dce8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400dce8:	defffa04 	addi	sp,sp,-24
 400dcec:	dfc00515 	stw	ra,20(sp)
 400dcf0:	df000415 	stw	fp,16(sp)
 400dcf4:	df000404 	addi	fp,sp,16
 400dcf8:	e13ffd15 	stw	r4,-12(fp)
 400dcfc:	e17ffe15 	stw	r5,-8(fp)
 400dd00:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400dd04:	e0bffd17 	ldw	r2,-12(fp)
 400dd08:	10800017 	ldw	r2,0(r2)
 400dd0c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400dd10:	e0bffc17 	ldw	r2,-16(fp)
 400dd14:	10c00a04 	addi	r3,r2,40
 400dd18:	e0bffd17 	ldw	r2,-12(fp)
 400dd1c:	10800217 	ldw	r2,8(r2)
 400dd20:	100f883a 	mov	r7,r2
 400dd24:	e1bfff17 	ldw	r6,-4(fp)
 400dd28:	e17ffe17 	ldw	r5,-8(fp)
 400dd2c:	1809883a 	mov	r4,r3
 400dd30:	400e4cc0 	call	400e4cc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400dd34:	e037883a 	mov	sp,fp
 400dd38:	dfc00117 	ldw	ra,4(sp)
 400dd3c:	df000017 	ldw	fp,0(sp)
 400dd40:	dec00204 	addi	sp,sp,8
 400dd44:	f800283a 	ret

0400dd48 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400dd48:	defffc04 	addi	sp,sp,-16
 400dd4c:	dfc00315 	stw	ra,12(sp)
 400dd50:	df000215 	stw	fp,8(sp)
 400dd54:	df000204 	addi	fp,sp,8
 400dd58:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400dd5c:	e0bfff17 	ldw	r2,-4(fp)
 400dd60:	10800017 	ldw	r2,0(r2)
 400dd64:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400dd68:	e0bffe17 	ldw	r2,-8(fp)
 400dd6c:	10c00a04 	addi	r3,r2,40
 400dd70:	e0bfff17 	ldw	r2,-4(fp)
 400dd74:	10800217 	ldw	r2,8(r2)
 400dd78:	100b883a 	mov	r5,r2
 400dd7c:	1809883a 	mov	r4,r3
 400dd80:	400e1580 	call	400e158 <altera_avalon_jtag_uart_close>
}
 400dd84:	e037883a 	mov	sp,fp
 400dd88:	dfc00117 	ldw	ra,4(sp)
 400dd8c:	df000017 	ldw	fp,0(sp)
 400dd90:	dec00204 	addi	sp,sp,8
 400dd94:	f800283a 	ret

0400dd98 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400dd98:	defffa04 	addi	sp,sp,-24
 400dd9c:	dfc00515 	stw	ra,20(sp)
 400dda0:	df000415 	stw	fp,16(sp)
 400dda4:	df000404 	addi	fp,sp,16
 400dda8:	e13ffd15 	stw	r4,-12(fp)
 400ddac:	e17ffe15 	stw	r5,-8(fp)
 400ddb0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400ddb4:	e0bffd17 	ldw	r2,-12(fp)
 400ddb8:	10800017 	ldw	r2,0(r2)
 400ddbc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400ddc0:	e0bffc17 	ldw	r2,-16(fp)
 400ddc4:	10800a04 	addi	r2,r2,40
 400ddc8:	e1bfff17 	ldw	r6,-4(fp)
 400ddcc:	e17ffe17 	ldw	r5,-8(fp)
 400ddd0:	1009883a 	mov	r4,r2
 400ddd4:	400e1c00 	call	400e1c0 <altera_avalon_jtag_uart_ioctl>
}
 400ddd8:	e037883a 	mov	sp,fp
 400dddc:	dfc00117 	ldw	ra,4(sp)
 400dde0:	df000017 	ldw	fp,0(sp)
 400dde4:	dec00204 	addi	sp,sp,8
 400dde8:	f800283a 	ret

0400ddec <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400ddec:	defffa04 	addi	sp,sp,-24
 400ddf0:	dfc00515 	stw	ra,20(sp)
 400ddf4:	df000415 	stw	fp,16(sp)
 400ddf8:	df000404 	addi	fp,sp,16
 400ddfc:	e13ffd15 	stw	r4,-12(fp)
 400de00:	e17ffe15 	stw	r5,-8(fp)
 400de04:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400de08:	e0bffd17 	ldw	r2,-12(fp)
 400de0c:	00c00044 	movi	r3,1
 400de10:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400de14:	e0bffd17 	ldw	r2,-12(fp)
 400de18:	10800017 	ldw	r2,0(r2)
 400de1c:	10800104 	addi	r2,r2,4
 400de20:	1007883a 	mov	r3,r2
 400de24:	e0bffd17 	ldw	r2,-12(fp)
 400de28:	10800817 	ldw	r2,32(r2)
 400de2c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 400de30:	e0bffe17 	ldw	r2,-8(fp)
 400de34:	e0ffff17 	ldw	r3,-4(fp)
 400de38:	d8000015 	stw	zero,0(sp)
 400de3c:	e1fffd17 	ldw	r7,-12(fp)
 400de40:	01810074 	movhi	r6,1025
 400de44:	31b7ab04 	addi	r6,r6,-8532
 400de48:	180b883a 	mov	r5,r3
 400de4c:	1009883a 	mov	r4,r2
 400de50:	400e9fc0 	call	400e9fc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400de54:	e0bffd17 	ldw	r2,-12(fp)
 400de58:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400de5c:	e0bffd17 	ldw	r2,-12(fp)
 400de60:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400de64:	d0e6d817 	ldw	r3,-25760(gp)
 400de68:	e1fffd17 	ldw	r7,-12(fp)
 400de6c:	01810074 	movhi	r6,1025
 400de70:	31b82e04 	addi	r6,r6,-8008
 400de74:	180b883a 	mov	r5,r3
 400de78:	1009883a 	mov	r4,r2
 400de7c:	400e6f00 	call	400e6f0 <alt_alarm_start>
 400de80:	1000040e 	bge	r2,zero,400de94 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400de84:	e0fffd17 	ldw	r3,-12(fp)
 400de88:	00a00034 	movhi	r2,32768
 400de8c:	10bfffc4 	addi	r2,r2,-1
 400de90:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400de94:	0001883a 	nop
 400de98:	e037883a 	mov	sp,fp
 400de9c:	dfc00117 	ldw	ra,4(sp)
 400dea0:	df000017 	ldw	fp,0(sp)
 400dea4:	dec00204 	addi	sp,sp,8
 400dea8:	f800283a 	ret

0400deac <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400deac:	defff804 	addi	sp,sp,-32
 400deb0:	df000715 	stw	fp,28(sp)
 400deb4:	df000704 	addi	fp,sp,28
 400deb8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400debc:	e0bfff17 	ldw	r2,-4(fp)
 400dec0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 400dec4:	e0bffb17 	ldw	r2,-20(fp)
 400dec8:	10800017 	ldw	r2,0(r2)
 400decc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400ded0:	e0bffc17 	ldw	r2,-16(fp)
 400ded4:	10800104 	addi	r2,r2,4
 400ded8:	10800037 	ldwio	r2,0(r2)
 400dedc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400dee0:	e0bffd17 	ldw	r2,-12(fp)
 400dee4:	1080c00c 	andi	r2,r2,768
 400dee8:	10006d26 	beq	r2,zero,400e0a0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400deec:	e0bffd17 	ldw	r2,-12(fp)
 400def0:	1080400c 	andi	r2,r2,256
 400def4:	10003526 	beq	r2,zero,400dfcc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400def8:	00800074 	movhi	r2,1
 400defc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400df00:	e0bffb17 	ldw	r2,-20(fp)
 400df04:	10800a17 	ldw	r2,40(r2)
 400df08:	10800044 	addi	r2,r2,1
 400df0c:	1081ffcc 	andi	r2,r2,2047
 400df10:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 400df14:	e0bffb17 	ldw	r2,-20(fp)
 400df18:	10c00b17 	ldw	r3,44(r2)
 400df1c:	e0bffe17 	ldw	r2,-8(fp)
 400df20:	18801526 	beq	r3,r2,400df78 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400df24:	e0bffc17 	ldw	r2,-16(fp)
 400df28:	10800037 	ldwio	r2,0(r2)
 400df2c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400df30:	e0bff917 	ldw	r2,-28(fp)
 400df34:	10a0000c 	andi	r2,r2,32768
 400df38:	10001126 	beq	r2,zero,400df80 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400df3c:	e0bffb17 	ldw	r2,-20(fp)
 400df40:	10800a17 	ldw	r2,40(r2)
 400df44:	e0fff917 	ldw	r3,-28(fp)
 400df48:	1809883a 	mov	r4,r3
 400df4c:	e0fffb17 	ldw	r3,-20(fp)
 400df50:	1885883a 	add	r2,r3,r2
 400df54:	10800e04 	addi	r2,r2,56
 400df58:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400df5c:	e0bffb17 	ldw	r2,-20(fp)
 400df60:	10800a17 	ldw	r2,40(r2)
 400df64:	10800044 	addi	r2,r2,1
 400df68:	10c1ffcc 	andi	r3,r2,2047
 400df6c:	e0bffb17 	ldw	r2,-20(fp)
 400df70:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 400df74:	003fe206 	br	400df00 <__alt_mem_onchip_memory+0xfc005f00>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 400df78:	0001883a 	nop
 400df7c:	00000106 	br	400df84 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 400df80:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400df84:	e0bff917 	ldw	r2,-28(fp)
 400df88:	10bfffec 	andhi	r2,r2,65535
 400df8c:	10000f26 	beq	r2,zero,400dfcc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400df90:	e0bffb17 	ldw	r2,-20(fp)
 400df94:	10c00817 	ldw	r3,32(r2)
 400df98:	00bfff84 	movi	r2,-2
 400df9c:	1886703a 	and	r3,r3,r2
 400dfa0:	e0bffb17 	ldw	r2,-20(fp)
 400dfa4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400dfa8:	e0bffc17 	ldw	r2,-16(fp)
 400dfac:	10800104 	addi	r2,r2,4
 400dfb0:	1007883a 	mov	r3,r2
 400dfb4:	e0bffb17 	ldw	r2,-20(fp)
 400dfb8:	10800817 	ldw	r2,32(r2)
 400dfbc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400dfc0:	e0bffc17 	ldw	r2,-16(fp)
 400dfc4:	10800104 	addi	r2,r2,4
 400dfc8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400dfcc:	e0bffd17 	ldw	r2,-12(fp)
 400dfd0:	1080800c 	andi	r2,r2,512
 400dfd4:	103fbe26 	beq	r2,zero,400ded0 <__alt_mem_onchip_memory+0xfc005ed0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400dfd8:	e0bffd17 	ldw	r2,-12(fp)
 400dfdc:	1004d43a 	srli	r2,r2,16
 400dfe0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400dfe4:	00001406 	br	400e038 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400dfe8:	e0bffc17 	ldw	r2,-16(fp)
 400dfec:	e0fffb17 	ldw	r3,-20(fp)
 400dff0:	18c00d17 	ldw	r3,52(r3)
 400dff4:	e13ffb17 	ldw	r4,-20(fp)
 400dff8:	20c7883a 	add	r3,r4,r3
 400dffc:	18c20e04 	addi	r3,r3,2104
 400e000:	18c00003 	ldbu	r3,0(r3)
 400e004:	18c03fcc 	andi	r3,r3,255
 400e008:	18c0201c 	xori	r3,r3,128
 400e00c:	18ffe004 	addi	r3,r3,-128
 400e010:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e014:	e0bffb17 	ldw	r2,-20(fp)
 400e018:	10800d17 	ldw	r2,52(r2)
 400e01c:	10800044 	addi	r2,r2,1
 400e020:	10c1ffcc 	andi	r3,r2,2047
 400e024:	e0bffb17 	ldw	r2,-20(fp)
 400e028:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400e02c:	e0bffa17 	ldw	r2,-24(fp)
 400e030:	10bfffc4 	addi	r2,r2,-1
 400e034:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 400e038:	e0bffa17 	ldw	r2,-24(fp)
 400e03c:	10000526 	beq	r2,zero,400e054 <altera_avalon_jtag_uart_irq+0x1a8>
 400e040:	e0bffb17 	ldw	r2,-20(fp)
 400e044:	10c00d17 	ldw	r3,52(r2)
 400e048:	e0bffb17 	ldw	r2,-20(fp)
 400e04c:	10800c17 	ldw	r2,48(r2)
 400e050:	18bfe51e 	bne	r3,r2,400dfe8 <__alt_mem_onchip_memory+0xfc005fe8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 400e054:	e0bffa17 	ldw	r2,-24(fp)
 400e058:	103f9d26 	beq	r2,zero,400ded0 <__alt_mem_onchip_memory+0xfc005ed0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400e05c:	e0bffb17 	ldw	r2,-20(fp)
 400e060:	10c00817 	ldw	r3,32(r2)
 400e064:	00bfff44 	movi	r2,-3
 400e068:	1886703a 	and	r3,r3,r2
 400e06c:	e0bffb17 	ldw	r2,-20(fp)
 400e070:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e074:	e0bffb17 	ldw	r2,-20(fp)
 400e078:	10800017 	ldw	r2,0(r2)
 400e07c:	10800104 	addi	r2,r2,4
 400e080:	1007883a 	mov	r3,r2
 400e084:	e0bffb17 	ldw	r2,-20(fp)
 400e088:	10800817 	ldw	r2,32(r2)
 400e08c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400e090:	e0bffc17 	ldw	r2,-16(fp)
 400e094:	10800104 	addi	r2,r2,4
 400e098:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 400e09c:	003f8c06 	br	400ded0 <__alt_mem_onchip_memory+0xfc005ed0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 400e0a0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 400e0a4:	0001883a 	nop
 400e0a8:	e037883a 	mov	sp,fp
 400e0ac:	df000017 	ldw	fp,0(sp)
 400e0b0:	dec00104 	addi	sp,sp,4
 400e0b4:	f800283a 	ret

0400e0b8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400e0b8:	defff804 	addi	sp,sp,-32
 400e0bc:	df000715 	stw	fp,28(sp)
 400e0c0:	df000704 	addi	fp,sp,28
 400e0c4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400e0c8:	e0bffb17 	ldw	r2,-20(fp)
 400e0cc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400e0d0:	e0bff917 	ldw	r2,-28(fp)
 400e0d4:	10800017 	ldw	r2,0(r2)
 400e0d8:	10800104 	addi	r2,r2,4
 400e0dc:	10800037 	ldwio	r2,0(r2)
 400e0e0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400e0e4:	e0bffa17 	ldw	r2,-24(fp)
 400e0e8:	1081000c 	andi	r2,r2,1024
 400e0ec:	10000b26 	beq	r2,zero,400e11c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400e0f0:	e0bff917 	ldw	r2,-28(fp)
 400e0f4:	10800017 	ldw	r2,0(r2)
 400e0f8:	10800104 	addi	r2,r2,4
 400e0fc:	1007883a 	mov	r3,r2
 400e100:	e0bff917 	ldw	r2,-28(fp)
 400e104:	10800817 	ldw	r2,32(r2)
 400e108:	10810014 	ori	r2,r2,1024
 400e10c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400e110:	e0bff917 	ldw	r2,-28(fp)
 400e114:	10000915 	stw	zero,36(r2)
 400e118:	00000a06 	br	400e144 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400e11c:	e0bff917 	ldw	r2,-28(fp)
 400e120:	10c00917 	ldw	r3,36(r2)
 400e124:	00a00034 	movhi	r2,32768
 400e128:	10bfff04 	addi	r2,r2,-4
 400e12c:	10c00536 	bltu	r2,r3,400e144 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400e130:	e0bff917 	ldw	r2,-28(fp)
 400e134:	10800917 	ldw	r2,36(r2)
 400e138:	10c00044 	addi	r3,r2,1
 400e13c:	e0bff917 	ldw	r2,-28(fp)
 400e140:	10c00915 	stw	r3,36(r2)
 400e144:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400e148:	e037883a 	mov	sp,fp
 400e14c:	df000017 	ldw	fp,0(sp)
 400e150:	dec00104 	addi	sp,sp,4
 400e154:	f800283a 	ret

0400e158 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400e158:	defffd04 	addi	sp,sp,-12
 400e15c:	df000215 	stw	fp,8(sp)
 400e160:	df000204 	addi	fp,sp,8
 400e164:	e13ffe15 	stw	r4,-8(fp)
 400e168:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400e16c:	00000506 	br	400e184 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400e170:	e0bfff17 	ldw	r2,-4(fp)
 400e174:	1090000c 	andi	r2,r2,16384
 400e178:	10000226 	beq	r2,zero,400e184 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400e17c:	00bffd44 	movi	r2,-11
 400e180:	00000b06 	br	400e1b0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400e184:	e0bffe17 	ldw	r2,-8(fp)
 400e188:	10c00d17 	ldw	r3,52(r2)
 400e18c:	e0bffe17 	ldw	r2,-8(fp)
 400e190:	10800c17 	ldw	r2,48(r2)
 400e194:	18800526 	beq	r3,r2,400e1ac <altera_avalon_jtag_uart_close+0x54>
 400e198:	e0bffe17 	ldw	r2,-8(fp)
 400e19c:	10c00917 	ldw	r3,36(r2)
 400e1a0:	e0bffe17 	ldw	r2,-8(fp)
 400e1a4:	10800117 	ldw	r2,4(r2)
 400e1a8:	18bff136 	bltu	r3,r2,400e170 <__alt_mem_onchip_memory+0xfc006170>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 400e1ac:	0005883a 	mov	r2,zero
}
 400e1b0:	e037883a 	mov	sp,fp
 400e1b4:	df000017 	ldw	fp,0(sp)
 400e1b8:	dec00104 	addi	sp,sp,4
 400e1bc:	f800283a 	ret

0400e1c0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400e1c0:	defffa04 	addi	sp,sp,-24
 400e1c4:	df000515 	stw	fp,20(sp)
 400e1c8:	df000504 	addi	fp,sp,20
 400e1cc:	e13ffd15 	stw	r4,-12(fp)
 400e1d0:	e17ffe15 	stw	r5,-8(fp)
 400e1d4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 400e1d8:	00bff9c4 	movi	r2,-25
 400e1dc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 400e1e0:	e0bffe17 	ldw	r2,-8(fp)
 400e1e4:	10da8060 	cmpeqi	r3,r2,27137
 400e1e8:	1800031e 	bne	r3,zero,400e1f8 <altera_avalon_jtag_uart_ioctl+0x38>
 400e1ec:	109a80a0 	cmpeqi	r2,r2,27138
 400e1f0:	1000181e 	bne	r2,zero,400e254 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 400e1f4:	00002906 	br	400e29c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 400e1f8:	e0bffd17 	ldw	r2,-12(fp)
 400e1fc:	10c00117 	ldw	r3,4(r2)
 400e200:	00a00034 	movhi	r2,32768
 400e204:	10bfffc4 	addi	r2,r2,-1
 400e208:	18802126 	beq	r3,r2,400e290 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 400e20c:	e0bfff17 	ldw	r2,-4(fp)
 400e210:	10800017 	ldw	r2,0(r2)
 400e214:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400e218:	e0bffc17 	ldw	r2,-16(fp)
 400e21c:	10800090 	cmplti	r2,r2,2
 400e220:	1000061e 	bne	r2,zero,400e23c <altera_avalon_jtag_uart_ioctl+0x7c>
 400e224:	e0fffc17 	ldw	r3,-16(fp)
 400e228:	00a00034 	movhi	r2,32768
 400e22c:	10bfffc4 	addi	r2,r2,-1
 400e230:	18800226 	beq	r3,r2,400e23c <altera_avalon_jtag_uart_ioctl+0x7c>
 400e234:	e0bffc17 	ldw	r2,-16(fp)
 400e238:	00000206 	br	400e244 <altera_avalon_jtag_uart_ioctl+0x84>
 400e23c:	00a00034 	movhi	r2,32768
 400e240:	10bfff84 	addi	r2,r2,-2
 400e244:	e0fffd17 	ldw	r3,-12(fp)
 400e248:	18800115 	stw	r2,4(r3)
      rc = 0;
 400e24c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400e250:	00000f06 	br	400e290 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 400e254:	e0bffd17 	ldw	r2,-12(fp)
 400e258:	10c00117 	ldw	r3,4(r2)
 400e25c:	00a00034 	movhi	r2,32768
 400e260:	10bfffc4 	addi	r2,r2,-1
 400e264:	18800c26 	beq	r3,r2,400e298 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400e268:	e0bffd17 	ldw	r2,-12(fp)
 400e26c:	10c00917 	ldw	r3,36(r2)
 400e270:	e0bffd17 	ldw	r2,-12(fp)
 400e274:	10800117 	ldw	r2,4(r2)
 400e278:	1885803a 	cmpltu	r2,r3,r2
 400e27c:	10c03fcc 	andi	r3,r2,255
 400e280:	e0bfff17 	ldw	r2,-4(fp)
 400e284:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400e288:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400e28c:	00000206 	br	400e298 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 400e290:	0001883a 	nop
 400e294:	00000106 	br	400e29c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 400e298:	0001883a 	nop

  default:
    break;
  }

  return rc;
 400e29c:	e0bffb17 	ldw	r2,-20(fp)
}
 400e2a0:	e037883a 	mov	sp,fp
 400e2a4:	df000017 	ldw	fp,0(sp)
 400e2a8:	dec00104 	addi	sp,sp,4
 400e2ac:	f800283a 	ret

0400e2b0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400e2b0:	defff304 	addi	sp,sp,-52
 400e2b4:	dfc00c15 	stw	ra,48(sp)
 400e2b8:	df000b15 	stw	fp,44(sp)
 400e2bc:	df000b04 	addi	fp,sp,44
 400e2c0:	e13ffc15 	stw	r4,-16(fp)
 400e2c4:	e17ffd15 	stw	r5,-12(fp)
 400e2c8:	e1bffe15 	stw	r6,-8(fp)
 400e2cc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 400e2d0:	e0bffd17 	ldw	r2,-12(fp)
 400e2d4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400e2d8:	00004706 	br	400e3f8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400e2dc:	e0bffc17 	ldw	r2,-16(fp)
 400e2e0:	10800a17 	ldw	r2,40(r2)
 400e2e4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 400e2e8:	e0bffc17 	ldw	r2,-16(fp)
 400e2ec:	10800b17 	ldw	r2,44(r2)
 400e2f0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 400e2f4:	e0fff717 	ldw	r3,-36(fp)
 400e2f8:	e0bff817 	ldw	r2,-32(fp)
 400e2fc:	18800536 	bltu	r3,r2,400e314 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400e300:	e0fff717 	ldw	r3,-36(fp)
 400e304:	e0bff817 	ldw	r2,-32(fp)
 400e308:	1885c83a 	sub	r2,r3,r2
 400e30c:	e0bff615 	stw	r2,-40(fp)
 400e310:	00000406 	br	400e324 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400e314:	00c20004 	movi	r3,2048
 400e318:	e0bff817 	ldw	r2,-32(fp)
 400e31c:	1885c83a 	sub	r2,r3,r2
 400e320:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400e324:	e0bff617 	ldw	r2,-40(fp)
 400e328:	10001e26 	beq	r2,zero,400e3a4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400e32c:	e0fffe17 	ldw	r3,-8(fp)
 400e330:	e0bff617 	ldw	r2,-40(fp)
 400e334:	1880022e 	bgeu	r3,r2,400e340 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400e338:	e0bffe17 	ldw	r2,-8(fp)
 400e33c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400e340:	e0bffc17 	ldw	r2,-16(fp)
 400e344:	10c00e04 	addi	r3,r2,56
 400e348:	e0bff817 	ldw	r2,-32(fp)
 400e34c:	1885883a 	add	r2,r3,r2
 400e350:	e1bff617 	ldw	r6,-40(fp)
 400e354:	100b883a 	mov	r5,r2
 400e358:	e13ff517 	ldw	r4,-44(fp)
 400e35c:	4005edc0 	call	4005edc <memcpy>
      ptr   += n;
 400e360:	e0fff517 	ldw	r3,-44(fp)
 400e364:	e0bff617 	ldw	r2,-40(fp)
 400e368:	1885883a 	add	r2,r3,r2
 400e36c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 400e370:	e0fffe17 	ldw	r3,-8(fp)
 400e374:	e0bff617 	ldw	r2,-40(fp)
 400e378:	1885c83a 	sub	r2,r3,r2
 400e37c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e380:	e0fff817 	ldw	r3,-32(fp)
 400e384:	e0bff617 	ldw	r2,-40(fp)
 400e388:	1885883a 	add	r2,r3,r2
 400e38c:	10c1ffcc 	andi	r3,r2,2047
 400e390:	e0bffc17 	ldw	r2,-16(fp)
 400e394:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400e398:	e0bffe17 	ldw	r2,-8(fp)
 400e39c:	00bfcf16 	blt	zero,r2,400e2dc <__alt_mem_onchip_memory+0xfc0062dc>
 400e3a0:	00000106 	br	400e3a8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 400e3a4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 400e3a8:	e0fff517 	ldw	r3,-44(fp)
 400e3ac:	e0bffd17 	ldw	r2,-12(fp)
 400e3b0:	1880141e 	bne	r3,r2,400e404 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400e3b4:	e0bfff17 	ldw	r2,-4(fp)
 400e3b8:	1090000c 	andi	r2,r2,16384
 400e3bc:	1000131e 	bne	r2,zero,400e40c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400e3c0:	0001883a 	nop
 400e3c4:	e0bffc17 	ldw	r2,-16(fp)
 400e3c8:	10c00a17 	ldw	r3,40(r2)
 400e3cc:	e0bff717 	ldw	r2,-36(fp)
 400e3d0:	1880051e 	bne	r3,r2,400e3e8 <altera_avalon_jtag_uart_read+0x138>
 400e3d4:	e0bffc17 	ldw	r2,-16(fp)
 400e3d8:	10c00917 	ldw	r3,36(r2)
 400e3dc:	e0bffc17 	ldw	r2,-16(fp)
 400e3e0:	10800117 	ldw	r2,4(r2)
 400e3e4:	18bff736 	bltu	r3,r2,400e3c4 <__alt_mem_onchip_memory+0xfc0063c4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400e3e8:	e0bffc17 	ldw	r2,-16(fp)
 400e3ec:	10c00a17 	ldw	r3,40(r2)
 400e3f0:	e0bff717 	ldw	r2,-36(fp)
 400e3f4:	18800726 	beq	r3,r2,400e414 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400e3f8:	e0bffe17 	ldw	r2,-8(fp)
 400e3fc:	00bfb716 	blt	zero,r2,400e2dc <__alt_mem_onchip_memory+0xfc0062dc>
 400e400:	00000506 	br	400e418 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 400e404:	0001883a 	nop
 400e408:	00000306 	br	400e418 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 400e40c:	0001883a 	nop
 400e410:	00000106 	br	400e418 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 400e414:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400e418:	e0fff517 	ldw	r3,-44(fp)
 400e41c:	e0bffd17 	ldw	r2,-12(fp)
 400e420:	18801826 	beq	r3,r2,400e484 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e424:	0005303a 	rdctl	r2,status
 400e428:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e42c:	e0fffb17 	ldw	r3,-20(fp)
 400e430:	00bfff84 	movi	r2,-2
 400e434:	1884703a 	and	r2,r3,r2
 400e438:	1001703a 	wrctl	status,r2
  
  return context;
 400e43c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400e440:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400e444:	e0bffc17 	ldw	r2,-16(fp)
 400e448:	10800817 	ldw	r2,32(r2)
 400e44c:	10c00054 	ori	r3,r2,1
 400e450:	e0bffc17 	ldw	r2,-16(fp)
 400e454:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e458:	e0bffc17 	ldw	r2,-16(fp)
 400e45c:	10800017 	ldw	r2,0(r2)
 400e460:	10800104 	addi	r2,r2,4
 400e464:	1007883a 	mov	r3,r2
 400e468:	e0bffc17 	ldw	r2,-16(fp)
 400e46c:	10800817 	ldw	r2,32(r2)
 400e470:	18800035 	stwio	r2,0(r3)
 400e474:	e0bffa17 	ldw	r2,-24(fp)
 400e478:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e47c:	e0bff917 	ldw	r2,-28(fp)
 400e480:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400e484:	e0fff517 	ldw	r3,-44(fp)
 400e488:	e0bffd17 	ldw	r2,-12(fp)
 400e48c:	18800426 	beq	r3,r2,400e4a0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 400e490:	e0fff517 	ldw	r3,-44(fp)
 400e494:	e0bffd17 	ldw	r2,-12(fp)
 400e498:	1885c83a 	sub	r2,r3,r2
 400e49c:	00000606 	br	400e4b8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 400e4a0:	e0bfff17 	ldw	r2,-4(fp)
 400e4a4:	1090000c 	andi	r2,r2,16384
 400e4a8:	10000226 	beq	r2,zero,400e4b4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 400e4ac:	00bffd44 	movi	r2,-11
 400e4b0:	00000106 	br	400e4b8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 400e4b4:	00bffec4 	movi	r2,-5
}
 400e4b8:	e037883a 	mov	sp,fp
 400e4bc:	dfc00117 	ldw	ra,4(sp)
 400e4c0:	df000017 	ldw	fp,0(sp)
 400e4c4:	dec00204 	addi	sp,sp,8
 400e4c8:	f800283a 	ret

0400e4cc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400e4cc:	defff304 	addi	sp,sp,-52
 400e4d0:	dfc00c15 	stw	ra,48(sp)
 400e4d4:	df000b15 	stw	fp,44(sp)
 400e4d8:	df000b04 	addi	fp,sp,44
 400e4dc:	e13ffc15 	stw	r4,-16(fp)
 400e4e0:	e17ffd15 	stw	r5,-12(fp)
 400e4e4:	e1bffe15 	stw	r6,-8(fp)
 400e4e8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400e4ec:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400e4f0:	e0bffd17 	ldw	r2,-12(fp)
 400e4f4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400e4f8:	00003706 	br	400e5d8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400e4fc:	e0bffc17 	ldw	r2,-16(fp)
 400e500:	10800c17 	ldw	r2,48(r2)
 400e504:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 400e508:	e0bffc17 	ldw	r2,-16(fp)
 400e50c:	10800d17 	ldw	r2,52(r2)
 400e510:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 400e514:	e0fff917 	ldw	r3,-28(fp)
 400e518:	e0bff517 	ldw	r2,-44(fp)
 400e51c:	1880062e 	bgeu	r3,r2,400e538 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400e520:	e0fff517 	ldw	r3,-44(fp)
 400e524:	e0bff917 	ldw	r2,-28(fp)
 400e528:	1885c83a 	sub	r2,r3,r2
 400e52c:	10bfffc4 	addi	r2,r2,-1
 400e530:	e0bff615 	stw	r2,-40(fp)
 400e534:	00000b06 	br	400e564 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400e538:	e0bff517 	ldw	r2,-44(fp)
 400e53c:	10000526 	beq	r2,zero,400e554 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400e540:	00c20004 	movi	r3,2048
 400e544:	e0bff917 	ldw	r2,-28(fp)
 400e548:	1885c83a 	sub	r2,r3,r2
 400e54c:	e0bff615 	stw	r2,-40(fp)
 400e550:	00000406 	br	400e564 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400e554:	00c1ffc4 	movi	r3,2047
 400e558:	e0bff917 	ldw	r2,-28(fp)
 400e55c:	1885c83a 	sub	r2,r3,r2
 400e560:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400e564:	e0bff617 	ldw	r2,-40(fp)
 400e568:	10001e26 	beq	r2,zero,400e5e4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400e56c:	e0fffe17 	ldw	r3,-8(fp)
 400e570:	e0bff617 	ldw	r2,-40(fp)
 400e574:	1880022e 	bgeu	r3,r2,400e580 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400e578:	e0bffe17 	ldw	r2,-8(fp)
 400e57c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400e580:	e0bffc17 	ldw	r2,-16(fp)
 400e584:	10c20e04 	addi	r3,r2,2104
 400e588:	e0bff917 	ldw	r2,-28(fp)
 400e58c:	1885883a 	add	r2,r3,r2
 400e590:	e1bff617 	ldw	r6,-40(fp)
 400e594:	e17ffd17 	ldw	r5,-12(fp)
 400e598:	1009883a 	mov	r4,r2
 400e59c:	4005edc0 	call	4005edc <memcpy>
      ptr   += n;
 400e5a0:	e0fffd17 	ldw	r3,-12(fp)
 400e5a4:	e0bff617 	ldw	r2,-40(fp)
 400e5a8:	1885883a 	add	r2,r3,r2
 400e5ac:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 400e5b0:	e0fffe17 	ldw	r3,-8(fp)
 400e5b4:	e0bff617 	ldw	r2,-40(fp)
 400e5b8:	1885c83a 	sub	r2,r3,r2
 400e5bc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e5c0:	e0fff917 	ldw	r3,-28(fp)
 400e5c4:	e0bff617 	ldw	r2,-40(fp)
 400e5c8:	1885883a 	add	r2,r3,r2
 400e5cc:	10c1ffcc 	andi	r3,r2,2047
 400e5d0:	e0bffc17 	ldw	r2,-16(fp)
 400e5d4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400e5d8:	e0bffe17 	ldw	r2,-8(fp)
 400e5dc:	00bfc716 	blt	zero,r2,400e4fc <__alt_mem_onchip_memory+0xfc0064fc>
 400e5e0:	00000106 	br	400e5e8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 400e5e4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e5e8:	0005303a 	rdctl	r2,status
 400e5ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e5f0:	e0fffb17 	ldw	r3,-20(fp)
 400e5f4:	00bfff84 	movi	r2,-2
 400e5f8:	1884703a 	and	r2,r3,r2
 400e5fc:	1001703a 	wrctl	status,r2
  
  return context;
 400e600:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400e604:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400e608:	e0bffc17 	ldw	r2,-16(fp)
 400e60c:	10800817 	ldw	r2,32(r2)
 400e610:	10c00094 	ori	r3,r2,2
 400e614:	e0bffc17 	ldw	r2,-16(fp)
 400e618:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e61c:	e0bffc17 	ldw	r2,-16(fp)
 400e620:	10800017 	ldw	r2,0(r2)
 400e624:	10800104 	addi	r2,r2,4
 400e628:	1007883a 	mov	r3,r2
 400e62c:	e0bffc17 	ldw	r2,-16(fp)
 400e630:	10800817 	ldw	r2,32(r2)
 400e634:	18800035 	stwio	r2,0(r3)
 400e638:	e0bffa17 	ldw	r2,-24(fp)
 400e63c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e640:	e0bff817 	ldw	r2,-32(fp)
 400e644:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400e648:	e0bffe17 	ldw	r2,-8(fp)
 400e64c:	0080100e 	bge	zero,r2,400e690 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 400e650:	e0bfff17 	ldw	r2,-4(fp)
 400e654:	1090000c 	andi	r2,r2,16384
 400e658:	1000101e 	bne	r2,zero,400e69c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400e65c:	0001883a 	nop
 400e660:	e0bffc17 	ldw	r2,-16(fp)
 400e664:	10c00d17 	ldw	r3,52(r2)
 400e668:	e0bff517 	ldw	r2,-44(fp)
 400e66c:	1880051e 	bne	r3,r2,400e684 <altera_avalon_jtag_uart_write+0x1b8>
 400e670:	e0bffc17 	ldw	r2,-16(fp)
 400e674:	10c00917 	ldw	r3,36(r2)
 400e678:	e0bffc17 	ldw	r2,-16(fp)
 400e67c:	10800117 	ldw	r2,4(r2)
 400e680:	18bff736 	bltu	r3,r2,400e660 <__alt_mem_onchip_memory+0xfc006660>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400e684:	e0bffc17 	ldw	r2,-16(fp)
 400e688:	10800917 	ldw	r2,36(r2)
 400e68c:	1000051e 	bne	r2,zero,400e6a4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 400e690:	e0bffe17 	ldw	r2,-8(fp)
 400e694:	00bfd016 	blt	zero,r2,400e5d8 <__alt_mem_onchip_memory+0xfc0065d8>
 400e698:	00000306 	br	400e6a8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 400e69c:	0001883a 	nop
 400e6a0:	00000106 	br	400e6a8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 400e6a4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400e6a8:	e0fffd17 	ldw	r3,-12(fp)
 400e6ac:	e0bff717 	ldw	r2,-36(fp)
 400e6b0:	18800426 	beq	r3,r2,400e6c4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 400e6b4:	e0fffd17 	ldw	r3,-12(fp)
 400e6b8:	e0bff717 	ldw	r2,-36(fp)
 400e6bc:	1885c83a 	sub	r2,r3,r2
 400e6c0:	00000606 	br	400e6dc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 400e6c4:	e0bfff17 	ldw	r2,-4(fp)
 400e6c8:	1090000c 	andi	r2,r2,16384
 400e6cc:	10000226 	beq	r2,zero,400e6d8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 400e6d0:	00bffd44 	movi	r2,-11
 400e6d4:	00000106 	br	400e6dc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400e6d8:	00bffec4 	movi	r2,-5
}
 400e6dc:	e037883a 	mov	sp,fp
 400e6e0:	dfc00117 	ldw	ra,4(sp)
 400e6e4:	df000017 	ldw	fp,0(sp)
 400e6e8:	dec00204 	addi	sp,sp,8
 400e6ec:	f800283a 	ret

0400e6f0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400e6f0:	defff504 	addi	sp,sp,-44
 400e6f4:	df000a15 	stw	fp,40(sp)
 400e6f8:	df000a04 	addi	fp,sp,40
 400e6fc:	e13ffc15 	stw	r4,-16(fp)
 400e700:	e17ffd15 	stw	r5,-12(fp)
 400e704:	e1bffe15 	stw	r6,-8(fp)
 400e708:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400e70c:	e03ff615 	stw	zero,-40(fp)
 400e710:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
 400e714:	10003c26 	beq	r2,zero,400e808 <alt_alarm_start+0x118>
  {
    if (alarm)
 400e718:	e0bffc17 	ldw	r2,-16(fp)
 400e71c:	10003826 	beq	r2,zero,400e800 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 400e720:	e0bffc17 	ldw	r2,-16(fp)
 400e724:	e0fffe17 	ldw	r3,-8(fp)
 400e728:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400e72c:	e0bffc17 	ldw	r2,-16(fp)
 400e730:	e0ffff17 	ldw	r3,-4(fp)
 400e734:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e738:	0005303a 	rdctl	r2,status
 400e73c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e740:	e0fff917 	ldw	r3,-28(fp)
 400e744:	00bfff84 	movi	r2,-2
 400e748:	1884703a 	and	r2,r3,r2
 400e74c:	1001703a 	wrctl	status,r2
  
  return context;
 400e750:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 400e754:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400e758:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
 400e75c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400e760:	e0fffd17 	ldw	r3,-12(fp)
 400e764:	e0bff617 	ldw	r2,-40(fp)
 400e768:	1885883a 	add	r2,r3,r2
 400e76c:	10c00044 	addi	r3,r2,1
 400e770:	e0bffc17 	ldw	r2,-16(fp)
 400e774:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400e778:	e0bffc17 	ldw	r2,-16(fp)
 400e77c:	10c00217 	ldw	r3,8(r2)
 400e780:	e0bff617 	ldw	r2,-40(fp)
 400e784:	1880042e 	bgeu	r3,r2,400e798 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400e788:	e0bffc17 	ldw	r2,-16(fp)
 400e78c:	00c00044 	movi	r3,1
 400e790:	10c00405 	stb	r3,16(r2)
 400e794:	00000206 	br	400e7a0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400e798:	e0bffc17 	ldw	r2,-16(fp)
 400e79c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400e7a0:	e0bffc17 	ldw	r2,-16(fp)
 400e7a4:	d0e00e04 	addi	r3,gp,-32712
 400e7a8:	e0fffa15 	stw	r3,-24(fp)
 400e7ac:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400e7b0:	e0bffb17 	ldw	r2,-20(fp)
 400e7b4:	e0fffa17 	ldw	r3,-24(fp)
 400e7b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e7bc:	e0bffa17 	ldw	r2,-24(fp)
 400e7c0:	10c00017 	ldw	r3,0(r2)
 400e7c4:	e0bffb17 	ldw	r2,-20(fp)
 400e7c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400e7cc:	e0bffa17 	ldw	r2,-24(fp)
 400e7d0:	10800017 	ldw	r2,0(r2)
 400e7d4:	e0fffb17 	ldw	r3,-20(fp)
 400e7d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e7dc:	e0bffa17 	ldw	r2,-24(fp)
 400e7e0:	e0fffb17 	ldw	r3,-20(fp)
 400e7e4:	10c00015 	stw	r3,0(r2)
 400e7e8:	e0bff817 	ldw	r2,-32(fp)
 400e7ec:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e7f0:	e0bff717 	ldw	r2,-36(fp)
 400e7f4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 400e7f8:	0005883a 	mov	r2,zero
 400e7fc:	00000306 	br	400e80c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 400e800:	00bffa84 	movi	r2,-22
 400e804:	00000106 	br	400e80c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 400e808:	00bfde84 	movi	r2,-134
  }
}
 400e80c:	e037883a 	mov	sp,fp
 400e810:	df000017 	ldw	fp,0(sp)
 400e814:	dec00104 	addi	sp,sp,4
 400e818:	f800283a 	ret

0400e81c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400e81c:	deffff04 	addi	sp,sp,-4
 400e820:	df000015 	stw	fp,0(sp)
 400e824:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400e828:	0001883a 	nop
 400e82c:	e037883a 	mov	sp,fp
 400e830:	df000017 	ldw	fp,0(sp)
 400e834:	dec00104 	addi	sp,sp,4
 400e838:	f800283a 	ret

0400e83c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e83c:	defffe04 	addi	sp,sp,-8
 400e840:	dfc00115 	stw	ra,4(sp)
 400e844:	df000015 	stw	fp,0(sp)
 400e848:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e84c:	d0a00b17 	ldw	r2,-32724(gp)
 400e850:	10000326 	beq	r2,zero,400e860 <alt_get_errno+0x24>
 400e854:	d0a00b17 	ldw	r2,-32724(gp)
 400e858:	103ee83a 	callr	r2
 400e85c:	00000106 	br	400e864 <alt_get_errno+0x28>
 400e860:	d0a6d104 	addi	r2,gp,-25788
}
 400e864:	e037883a 	mov	sp,fp
 400e868:	dfc00117 	ldw	ra,4(sp)
 400e86c:	df000017 	ldw	fp,0(sp)
 400e870:	dec00204 	addi	sp,sp,8
 400e874:	f800283a 	ret

0400e878 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400e878:	defffa04 	addi	sp,sp,-24
 400e87c:	dfc00515 	stw	ra,20(sp)
 400e880:	df000415 	stw	fp,16(sp)
 400e884:	df000404 	addi	fp,sp,16
 400e888:	e13ffe15 	stw	r4,-8(fp)
 400e88c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400e890:	e0bffe17 	ldw	r2,-8(fp)
 400e894:	10000326 	beq	r2,zero,400e8a4 <alt_dev_llist_insert+0x2c>
 400e898:	e0bffe17 	ldw	r2,-8(fp)
 400e89c:	10800217 	ldw	r2,8(r2)
 400e8a0:	1000061e 	bne	r2,zero,400e8bc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400e8a4:	400e83c0 	call	400e83c <alt_get_errno>
 400e8a8:	1007883a 	mov	r3,r2
 400e8ac:	00800584 	movi	r2,22
 400e8b0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400e8b4:	00bffa84 	movi	r2,-22
 400e8b8:	00001306 	br	400e908 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400e8bc:	e0bffe17 	ldw	r2,-8(fp)
 400e8c0:	e0ffff17 	ldw	r3,-4(fp)
 400e8c4:	e0fffc15 	stw	r3,-16(fp)
 400e8c8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400e8cc:	e0bffd17 	ldw	r2,-12(fp)
 400e8d0:	e0fffc17 	ldw	r3,-16(fp)
 400e8d4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e8d8:	e0bffc17 	ldw	r2,-16(fp)
 400e8dc:	10c00017 	ldw	r3,0(r2)
 400e8e0:	e0bffd17 	ldw	r2,-12(fp)
 400e8e4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400e8e8:	e0bffc17 	ldw	r2,-16(fp)
 400e8ec:	10800017 	ldw	r2,0(r2)
 400e8f0:	e0fffd17 	ldw	r3,-12(fp)
 400e8f4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e8f8:	e0bffc17 	ldw	r2,-16(fp)
 400e8fc:	e0fffd17 	ldw	r3,-12(fp)
 400e900:	10c00015 	stw	r3,0(r2)

  return 0;  
 400e904:	0005883a 	mov	r2,zero
}
 400e908:	e037883a 	mov	sp,fp
 400e90c:	dfc00117 	ldw	ra,4(sp)
 400e910:	df000017 	ldw	fp,0(sp)
 400e914:	dec00204 	addi	sp,sp,8
 400e918:	f800283a 	ret

0400e91c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400e91c:	defffd04 	addi	sp,sp,-12
 400e920:	dfc00215 	stw	ra,8(sp)
 400e924:	df000115 	stw	fp,4(sp)
 400e928:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400e92c:	00810074 	movhi	r2,1025
 400e930:	10be3404 	addi	r2,r2,-1840
 400e934:	e0bfff15 	stw	r2,-4(fp)
 400e938:	00000606 	br	400e954 <_do_ctors+0x38>
        (*ctor) (); 
 400e93c:	e0bfff17 	ldw	r2,-4(fp)
 400e940:	10800017 	ldw	r2,0(r2)
 400e944:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400e948:	e0bfff17 	ldw	r2,-4(fp)
 400e94c:	10bfff04 	addi	r2,r2,-4
 400e950:	e0bfff15 	stw	r2,-4(fp)
 400e954:	e0ffff17 	ldw	r3,-4(fp)
 400e958:	00810074 	movhi	r2,1025
 400e95c:	10be3504 	addi	r2,r2,-1836
 400e960:	18bff62e 	bgeu	r3,r2,400e93c <__alt_mem_onchip_memory+0xfc00693c>
        (*ctor) (); 
}
 400e964:	0001883a 	nop
 400e968:	e037883a 	mov	sp,fp
 400e96c:	dfc00117 	ldw	ra,4(sp)
 400e970:	df000017 	ldw	fp,0(sp)
 400e974:	dec00204 	addi	sp,sp,8
 400e978:	f800283a 	ret

0400e97c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400e97c:	defffd04 	addi	sp,sp,-12
 400e980:	dfc00215 	stw	ra,8(sp)
 400e984:	df000115 	stw	fp,4(sp)
 400e988:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400e98c:	00810074 	movhi	r2,1025
 400e990:	10be3404 	addi	r2,r2,-1840
 400e994:	e0bfff15 	stw	r2,-4(fp)
 400e998:	00000606 	br	400e9b4 <_do_dtors+0x38>
        (*dtor) (); 
 400e99c:	e0bfff17 	ldw	r2,-4(fp)
 400e9a0:	10800017 	ldw	r2,0(r2)
 400e9a4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400e9a8:	e0bfff17 	ldw	r2,-4(fp)
 400e9ac:	10bfff04 	addi	r2,r2,-4
 400e9b0:	e0bfff15 	stw	r2,-4(fp)
 400e9b4:	e0ffff17 	ldw	r3,-4(fp)
 400e9b8:	00810074 	movhi	r2,1025
 400e9bc:	10be3504 	addi	r2,r2,-1836
 400e9c0:	18bff62e 	bgeu	r3,r2,400e99c <__alt_mem_onchip_memory+0xfc00699c>
        (*dtor) (); 
}
 400e9c4:	0001883a 	nop
 400e9c8:	e037883a 	mov	sp,fp
 400e9cc:	dfc00117 	ldw	ra,4(sp)
 400e9d0:	df000017 	ldw	fp,0(sp)
 400e9d4:	dec00204 	addi	sp,sp,8
 400e9d8:	f800283a 	ret

0400e9dc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400e9dc:	deffff04 	addi	sp,sp,-4
 400e9e0:	df000015 	stw	fp,0(sp)
 400e9e4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 400e9e8:	0001883a 	nop
 400e9ec:	e037883a 	mov	sp,fp
 400e9f0:	df000017 	ldw	fp,0(sp)
 400e9f4:	dec00104 	addi	sp,sp,4
 400e9f8:	f800283a 	ret

0400e9fc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400e9fc:	defff904 	addi	sp,sp,-28
 400ea00:	dfc00615 	stw	ra,24(sp)
 400ea04:	df000515 	stw	fp,20(sp)
 400ea08:	df000504 	addi	fp,sp,20
 400ea0c:	e13ffc15 	stw	r4,-16(fp)
 400ea10:	e17ffd15 	stw	r5,-12(fp)
 400ea14:	e1bffe15 	stw	r6,-8(fp)
 400ea18:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 400ea1c:	e0800217 	ldw	r2,8(fp)
 400ea20:	d8800015 	stw	r2,0(sp)
 400ea24:	e1ffff17 	ldw	r7,-4(fp)
 400ea28:	e1bffe17 	ldw	r6,-8(fp)
 400ea2c:	e17ffd17 	ldw	r5,-12(fp)
 400ea30:	e13ffc17 	ldw	r4,-16(fp)
 400ea34:	400ebac0 	call	400ebac <alt_iic_isr_register>
}  
 400ea38:	e037883a 	mov	sp,fp
 400ea3c:	dfc00117 	ldw	ra,4(sp)
 400ea40:	df000017 	ldw	fp,0(sp)
 400ea44:	dec00204 	addi	sp,sp,8
 400ea48:	f800283a 	ret

0400ea4c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 400ea4c:	defff904 	addi	sp,sp,-28
 400ea50:	df000615 	stw	fp,24(sp)
 400ea54:	df000604 	addi	fp,sp,24
 400ea58:	e13ffe15 	stw	r4,-8(fp)
 400ea5c:	e17fff15 	stw	r5,-4(fp)
 400ea60:	e0bfff17 	ldw	r2,-4(fp)
 400ea64:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ea68:	0005303a 	rdctl	r2,status
 400ea6c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ea70:	e0fffb17 	ldw	r3,-20(fp)
 400ea74:	00bfff84 	movi	r2,-2
 400ea78:	1884703a 	and	r2,r3,r2
 400ea7c:	1001703a 	wrctl	status,r2
  
  return context;
 400ea80:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400ea84:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 400ea88:	00c00044 	movi	r3,1
 400ea8c:	e0bffa17 	ldw	r2,-24(fp)
 400ea90:	1884983a 	sll	r2,r3,r2
 400ea94:	1007883a 	mov	r3,r2
 400ea98:	d0a6d717 	ldw	r2,-25764(gp)
 400ea9c:	1884b03a 	or	r2,r3,r2
 400eaa0:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400eaa4:	d0a6d717 	ldw	r2,-25764(gp)
 400eaa8:	100170fa 	wrctl	ienable,r2
 400eaac:	e0bffc17 	ldw	r2,-16(fp)
 400eab0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400eab4:	e0bffd17 	ldw	r2,-12(fp)
 400eab8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400eabc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 400eac0:	0001883a 	nop
}
 400eac4:	e037883a 	mov	sp,fp
 400eac8:	df000017 	ldw	fp,0(sp)
 400eacc:	dec00104 	addi	sp,sp,4
 400ead0:	f800283a 	ret

0400ead4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 400ead4:	defff904 	addi	sp,sp,-28
 400ead8:	df000615 	stw	fp,24(sp)
 400eadc:	df000604 	addi	fp,sp,24
 400eae0:	e13ffe15 	stw	r4,-8(fp)
 400eae4:	e17fff15 	stw	r5,-4(fp)
 400eae8:	e0bfff17 	ldw	r2,-4(fp)
 400eaec:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400eaf0:	0005303a 	rdctl	r2,status
 400eaf4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400eaf8:	e0fffb17 	ldw	r3,-20(fp)
 400eafc:	00bfff84 	movi	r2,-2
 400eb00:	1884703a 	and	r2,r3,r2
 400eb04:	1001703a 	wrctl	status,r2
  
  return context;
 400eb08:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400eb0c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 400eb10:	00c00044 	movi	r3,1
 400eb14:	e0bffa17 	ldw	r2,-24(fp)
 400eb18:	1884983a 	sll	r2,r3,r2
 400eb1c:	0084303a 	nor	r2,zero,r2
 400eb20:	1007883a 	mov	r3,r2
 400eb24:	d0a6d717 	ldw	r2,-25764(gp)
 400eb28:	1884703a 	and	r2,r3,r2
 400eb2c:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400eb30:	d0a6d717 	ldw	r2,-25764(gp)
 400eb34:	100170fa 	wrctl	ienable,r2
 400eb38:	e0bffc17 	ldw	r2,-16(fp)
 400eb3c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400eb40:	e0bffd17 	ldw	r2,-12(fp)
 400eb44:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400eb48:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 400eb4c:	0001883a 	nop
}
 400eb50:	e037883a 	mov	sp,fp
 400eb54:	df000017 	ldw	fp,0(sp)
 400eb58:	dec00104 	addi	sp,sp,4
 400eb5c:	f800283a 	ret

0400eb60 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 400eb60:	defffc04 	addi	sp,sp,-16
 400eb64:	df000315 	stw	fp,12(sp)
 400eb68:	df000304 	addi	fp,sp,12
 400eb6c:	e13ffe15 	stw	r4,-8(fp)
 400eb70:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 400eb74:	000530fa 	rdctl	r2,ienable
 400eb78:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 400eb7c:	00c00044 	movi	r3,1
 400eb80:	e0bfff17 	ldw	r2,-4(fp)
 400eb84:	1884983a 	sll	r2,r3,r2
 400eb88:	1007883a 	mov	r3,r2
 400eb8c:	e0bffd17 	ldw	r2,-12(fp)
 400eb90:	1884703a 	and	r2,r3,r2
 400eb94:	1004c03a 	cmpne	r2,r2,zero
 400eb98:	10803fcc 	andi	r2,r2,255
}
 400eb9c:	e037883a 	mov	sp,fp
 400eba0:	df000017 	ldw	fp,0(sp)
 400eba4:	dec00104 	addi	sp,sp,4
 400eba8:	f800283a 	ret

0400ebac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400ebac:	defff504 	addi	sp,sp,-44
 400ebb0:	dfc00a15 	stw	ra,40(sp)
 400ebb4:	df000915 	stw	fp,36(sp)
 400ebb8:	df000904 	addi	fp,sp,36
 400ebbc:	e13ffc15 	stw	r4,-16(fp)
 400ebc0:	e17ffd15 	stw	r5,-12(fp)
 400ebc4:	e1bffe15 	stw	r6,-8(fp)
 400ebc8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 400ebcc:	00bffa84 	movi	r2,-22
 400ebd0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 400ebd4:	e0bffd17 	ldw	r2,-12(fp)
 400ebd8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400ebdc:	e0bff817 	ldw	r2,-32(fp)
 400ebe0:	10800808 	cmpgei	r2,r2,32
 400ebe4:	1000271e 	bne	r2,zero,400ec84 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ebe8:	0005303a 	rdctl	r2,status
 400ebec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ebf0:	e0fffb17 	ldw	r3,-20(fp)
 400ebf4:	00bfff84 	movi	r2,-2
 400ebf8:	1884703a 	and	r2,r3,r2
 400ebfc:	1001703a 	wrctl	status,r2
  
  return context;
 400ec00:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 400ec04:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 400ec08:	00810074 	movhi	r2,1025
 400ec0c:	108c9d04 	addi	r2,r2,12916
 400ec10:	e0fff817 	ldw	r3,-32(fp)
 400ec14:	180690fa 	slli	r3,r3,3
 400ec18:	10c5883a 	add	r2,r2,r3
 400ec1c:	e0fffe17 	ldw	r3,-8(fp)
 400ec20:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 400ec24:	00810074 	movhi	r2,1025
 400ec28:	108c9d04 	addi	r2,r2,12916
 400ec2c:	e0fff817 	ldw	r3,-32(fp)
 400ec30:	180690fa 	slli	r3,r3,3
 400ec34:	10c5883a 	add	r2,r2,r3
 400ec38:	10800104 	addi	r2,r2,4
 400ec3c:	e0ffff17 	ldw	r3,-4(fp)
 400ec40:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 400ec44:	e0bffe17 	ldw	r2,-8(fp)
 400ec48:	10000526 	beq	r2,zero,400ec60 <alt_iic_isr_register+0xb4>
 400ec4c:	e0bff817 	ldw	r2,-32(fp)
 400ec50:	100b883a 	mov	r5,r2
 400ec54:	e13ffc17 	ldw	r4,-16(fp)
 400ec58:	400ea4c0 	call	400ea4c <alt_ic_irq_enable>
 400ec5c:	00000406 	br	400ec70 <alt_iic_isr_register+0xc4>
 400ec60:	e0bff817 	ldw	r2,-32(fp)
 400ec64:	100b883a 	mov	r5,r2
 400ec68:	e13ffc17 	ldw	r4,-16(fp)
 400ec6c:	400ead40 	call	400ead4 <alt_ic_irq_disable>
 400ec70:	e0bff715 	stw	r2,-36(fp)
 400ec74:	e0bffa17 	ldw	r2,-24(fp)
 400ec78:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400ec7c:	e0bff917 	ldw	r2,-28(fp)
 400ec80:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 400ec84:	e0bff717 	ldw	r2,-36(fp)
}
 400ec88:	e037883a 	mov	sp,fp
 400ec8c:	dfc00117 	ldw	ra,4(sp)
 400ec90:	df000017 	ldw	fp,0(sp)
 400ec94:	dec00204 	addi	sp,sp,8
 400ec98:	f800283a 	ret

0400ec9c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400ec9c:	defff804 	addi	sp,sp,-32
 400eca0:	dfc00715 	stw	ra,28(sp)
 400eca4:	df000615 	stw	fp,24(sp)
 400eca8:	dc000515 	stw	r16,20(sp)
 400ecac:	df000604 	addi	fp,sp,24
 400ecb0:	e13ffb15 	stw	r4,-20(fp)
 400ecb4:	e17ffc15 	stw	r5,-16(fp)
 400ecb8:	e1bffd15 	stw	r6,-12(fp)
 400ecbc:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 400ecc0:	e1bffe17 	ldw	r6,-8(fp)
 400ecc4:	e17ffd17 	ldw	r5,-12(fp)
 400ecc8:	e13ffc17 	ldw	r4,-16(fp)
 400eccc:	400ef240 	call	400ef24 <open>
 400ecd0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 400ecd4:	e0bffa17 	ldw	r2,-24(fp)
 400ecd8:	10002216 	blt	r2,zero,400ed64 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 400ecdc:	04010074 	movhi	r16,1025
 400ece0:	84014004 	addi	r16,r16,1280
 400ece4:	e0bffa17 	ldw	r2,-24(fp)
 400ece8:	01400304 	movi	r5,12
 400ecec:	1009883a 	mov	r4,r2
 400ecf0:	400a95c0 	call	400a95c <__mulsi3>
 400ecf4:	8085883a 	add	r2,r16,r2
 400ecf8:	10c00017 	ldw	r3,0(r2)
 400ecfc:	e0bffb17 	ldw	r2,-20(fp)
 400ed00:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400ed04:	04010074 	movhi	r16,1025
 400ed08:	84014004 	addi	r16,r16,1280
 400ed0c:	e0bffa17 	ldw	r2,-24(fp)
 400ed10:	01400304 	movi	r5,12
 400ed14:	1009883a 	mov	r4,r2
 400ed18:	400a95c0 	call	400a95c <__mulsi3>
 400ed1c:	8085883a 	add	r2,r16,r2
 400ed20:	10800104 	addi	r2,r2,4
 400ed24:	10c00017 	ldw	r3,0(r2)
 400ed28:	e0bffb17 	ldw	r2,-20(fp)
 400ed2c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400ed30:	04010074 	movhi	r16,1025
 400ed34:	84014004 	addi	r16,r16,1280
 400ed38:	e0bffa17 	ldw	r2,-24(fp)
 400ed3c:	01400304 	movi	r5,12
 400ed40:	1009883a 	mov	r4,r2
 400ed44:	400a95c0 	call	400a95c <__mulsi3>
 400ed48:	8085883a 	add	r2,r16,r2
 400ed4c:	10800204 	addi	r2,r2,8
 400ed50:	10c00017 	ldw	r3,0(r2)
 400ed54:	e0bffb17 	ldw	r2,-20(fp)
 400ed58:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400ed5c:	e13ffa17 	ldw	r4,-24(fp)
 400ed60:	400d94c0 	call	400d94c <alt_release_fd>
  }
} 
 400ed64:	0001883a 	nop
 400ed68:	e6ffff04 	addi	sp,fp,-4
 400ed6c:	dfc00217 	ldw	ra,8(sp)
 400ed70:	df000117 	ldw	fp,4(sp)
 400ed74:	dc000017 	ldw	r16,0(sp)
 400ed78:	dec00304 	addi	sp,sp,12
 400ed7c:	f800283a 	ret

0400ed80 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400ed80:	defffb04 	addi	sp,sp,-20
 400ed84:	dfc00415 	stw	ra,16(sp)
 400ed88:	df000315 	stw	fp,12(sp)
 400ed8c:	df000304 	addi	fp,sp,12
 400ed90:	e13ffd15 	stw	r4,-12(fp)
 400ed94:	e17ffe15 	stw	r5,-8(fp)
 400ed98:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400ed9c:	01c07fc4 	movi	r7,511
 400eda0:	01800044 	movi	r6,1
 400eda4:	e17ffd17 	ldw	r5,-12(fp)
 400eda8:	01010074 	movhi	r4,1025
 400edac:	21014304 	addi	r4,r4,1292
 400edb0:	400ec9c0 	call	400ec9c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400edb4:	01c07fc4 	movi	r7,511
 400edb8:	000d883a 	mov	r6,zero
 400edbc:	e17ffe17 	ldw	r5,-8(fp)
 400edc0:	01010074 	movhi	r4,1025
 400edc4:	21014004 	addi	r4,r4,1280
 400edc8:	400ec9c0 	call	400ec9c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400edcc:	01c07fc4 	movi	r7,511
 400edd0:	01800044 	movi	r6,1
 400edd4:	e17fff17 	ldw	r5,-4(fp)
 400edd8:	01010074 	movhi	r4,1025
 400eddc:	21014604 	addi	r4,r4,1304
 400ede0:	400ec9c0 	call	400ec9c <alt_open_fd>
}  
 400ede4:	0001883a 	nop
 400ede8:	e037883a 	mov	sp,fp
 400edec:	dfc00117 	ldw	ra,4(sp)
 400edf0:	df000017 	ldw	fp,0(sp)
 400edf4:	dec00204 	addi	sp,sp,8
 400edf8:	f800283a 	ret

0400edfc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400edfc:	defffe04 	addi	sp,sp,-8
 400ee00:	dfc00115 	stw	ra,4(sp)
 400ee04:	df000015 	stw	fp,0(sp)
 400ee08:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400ee0c:	d0a00b17 	ldw	r2,-32724(gp)
 400ee10:	10000326 	beq	r2,zero,400ee20 <alt_get_errno+0x24>
 400ee14:	d0a00b17 	ldw	r2,-32724(gp)
 400ee18:	103ee83a 	callr	r2
 400ee1c:	00000106 	br	400ee24 <alt_get_errno+0x28>
 400ee20:	d0a6d104 	addi	r2,gp,-25788
}
 400ee24:	e037883a 	mov	sp,fp
 400ee28:	dfc00117 	ldw	ra,4(sp)
 400ee2c:	df000017 	ldw	fp,0(sp)
 400ee30:	dec00204 	addi	sp,sp,8
 400ee34:	f800283a 	ret

0400ee38 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400ee38:	defffb04 	addi	sp,sp,-20
 400ee3c:	dfc00415 	stw	ra,16(sp)
 400ee40:	df000315 	stw	fp,12(sp)
 400ee44:	dc000215 	stw	r16,8(sp)
 400ee48:	df000304 	addi	fp,sp,12
 400ee4c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400ee50:	e0bffe17 	ldw	r2,-8(fp)
 400ee54:	10800217 	ldw	r2,8(r2)
 400ee58:	10d00034 	orhi	r3,r2,16384
 400ee5c:	e0bffe17 	ldw	r2,-8(fp)
 400ee60:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400ee64:	e03ffd15 	stw	zero,-12(fp)
 400ee68:	00002306 	br	400eef8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400ee6c:	04010074 	movhi	r16,1025
 400ee70:	84014004 	addi	r16,r16,1280
 400ee74:	e0bffd17 	ldw	r2,-12(fp)
 400ee78:	01400304 	movi	r5,12
 400ee7c:	1009883a 	mov	r4,r2
 400ee80:	400a95c0 	call	400a95c <__mulsi3>
 400ee84:	8085883a 	add	r2,r16,r2
 400ee88:	10c00017 	ldw	r3,0(r2)
 400ee8c:	e0bffe17 	ldw	r2,-8(fp)
 400ee90:	10800017 	ldw	r2,0(r2)
 400ee94:	1880151e 	bne	r3,r2,400eeec <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400ee98:	04010074 	movhi	r16,1025
 400ee9c:	84014004 	addi	r16,r16,1280
 400eea0:	e0bffd17 	ldw	r2,-12(fp)
 400eea4:	01400304 	movi	r5,12
 400eea8:	1009883a 	mov	r4,r2
 400eeac:	400a95c0 	call	400a95c <__mulsi3>
 400eeb0:	8085883a 	add	r2,r16,r2
 400eeb4:	10800204 	addi	r2,r2,8
 400eeb8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400eebc:	10000b0e 	bge	r2,zero,400eeec <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 400eec0:	01400304 	movi	r5,12
 400eec4:	e13ffd17 	ldw	r4,-12(fp)
 400eec8:	400a95c0 	call	400a95c <__mulsi3>
 400eecc:	1007883a 	mov	r3,r2
 400eed0:	00810074 	movhi	r2,1025
 400eed4:	10814004 	addi	r2,r2,1280
 400eed8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400eedc:	e0bffe17 	ldw	r2,-8(fp)
 400eee0:	18800226 	beq	r3,r2,400eeec <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 400eee4:	00bffcc4 	movi	r2,-13
 400eee8:	00000806 	br	400ef0c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400eeec:	e0bffd17 	ldw	r2,-12(fp)
 400eef0:	10800044 	addi	r2,r2,1
 400eef4:	e0bffd15 	stw	r2,-12(fp)
 400eef8:	d0a00a17 	ldw	r2,-32728(gp)
 400eefc:	1007883a 	mov	r3,r2
 400ef00:	e0bffd17 	ldw	r2,-12(fp)
 400ef04:	18bfd92e 	bgeu	r3,r2,400ee6c <__alt_mem_onchip_memory+0xfc006e6c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400ef08:	0005883a 	mov	r2,zero
}
 400ef0c:	e6ffff04 	addi	sp,fp,-4
 400ef10:	dfc00217 	ldw	ra,8(sp)
 400ef14:	df000117 	ldw	fp,4(sp)
 400ef18:	dc000017 	ldw	r16,0(sp)
 400ef1c:	dec00304 	addi	sp,sp,12
 400ef20:	f800283a 	ret

0400ef24 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400ef24:	defff604 	addi	sp,sp,-40
 400ef28:	dfc00915 	stw	ra,36(sp)
 400ef2c:	df000815 	stw	fp,32(sp)
 400ef30:	df000804 	addi	fp,sp,32
 400ef34:	e13ffd15 	stw	r4,-12(fp)
 400ef38:	e17ffe15 	stw	r5,-8(fp)
 400ef3c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400ef40:	00bfffc4 	movi	r2,-1
 400ef44:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 400ef48:	00bffb44 	movi	r2,-19
 400ef4c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 400ef50:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400ef54:	d1600804 	addi	r5,gp,-32736
 400ef58:	e13ffd17 	ldw	r4,-12(fp)
 400ef5c:	400f2480 	call	400f248 <alt_find_dev>
 400ef60:	e0bff815 	stw	r2,-32(fp)
 400ef64:	e0bff817 	ldw	r2,-32(fp)
 400ef68:	1000051e 	bne	r2,zero,400ef80 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400ef6c:	e13ffd17 	ldw	r4,-12(fp)
 400ef70:	400f2d80 	call	400f2d8 <alt_find_file>
 400ef74:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 400ef78:	00800044 	movi	r2,1
 400ef7c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400ef80:	e0bff817 	ldw	r2,-32(fp)
 400ef84:	10002b26 	beq	r2,zero,400f034 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400ef88:	e13ff817 	ldw	r4,-32(fp)
 400ef8c:	400f3e00 	call	400f3e0 <alt_get_fd>
 400ef90:	e0bff915 	stw	r2,-28(fp)
 400ef94:	e0bff917 	ldw	r2,-28(fp)
 400ef98:	1000030e 	bge	r2,zero,400efa8 <open+0x84>
    {
      status = index;
 400ef9c:	e0bff917 	ldw	r2,-28(fp)
 400efa0:	e0bffa15 	stw	r2,-24(fp)
 400efa4:	00002506 	br	400f03c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 400efa8:	01400304 	movi	r5,12
 400efac:	e13ff917 	ldw	r4,-28(fp)
 400efb0:	400a95c0 	call	400a95c <__mulsi3>
 400efb4:	1007883a 	mov	r3,r2
 400efb8:	00810074 	movhi	r2,1025
 400efbc:	10814004 	addi	r2,r2,1280
 400efc0:	1885883a 	add	r2,r3,r2
 400efc4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400efc8:	e0fffe17 	ldw	r3,-8(fp)
 400efcc:	00900034 	movhi	r2,16384
 400efd0:	10bfffc4 	addi	r2,r2,-1
 400efd4:	1886703a 	and	r3,r3,r2
 400efd8:	e0bffc17 	ldw	r2,-16(fp)
 400efdc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400efe0:	e0bffb17 	ldw	r2,-20(fp)
 400efe4:	1000051e 	bne	r2,zero,400effc <open+0xd8>
 400efe8:	e13ffc17 	ldw	r4,-16(fp)
 400efec:	400ee380 	call	400ee38 <alt_file_locked>
 400eff0:	e0bffa15 	stw	r2,-24(fp)
 400eff4:	e0bffa17 	ldw	r2,-24(fp)
 400eff8:	10001016 	blt	r2,zero,400f03c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400effc:	e0bff817 	ldw	r2,-32(fp)
 400f000:	10800317 	ldw	r2,12(r2)
 400f004:	10000826 	beq	r2,zero,400f028 <open+0x104>
 400f008:	e0bff817 	ldw	r2,-32(fp)
 400f00c:	10800317 	ldw	r2,12(r2)
 400f010:	e1ffff17 	ldw	r7,-4(fp)
 400f014:	e1bffe17 	ldw	r6,-8(fp)
 400f018:	e17ffd17 	ldw	r5,-12(fp)
 400f01c:	e13ffc17 	ldw	r4,-16(fp)
 400f020:	103ee83a 	callr	r2
 400f024:	00000106 	br	400f02c <open+0x108>
 400f028:	0005883a 	mov	r2,zero
 400f02c:	e0bffa15 	stw	r2,-24(fp)
 400f030:	00000206 	br	400f03c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400f034:	00bffb44 	movi	r2,-19
 400f038:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400f03c:	e0bffa17 	ldw	r2,-24(fp)
 400f040:	1000090e 	bge	r2,zero,400f068 <open+0x144>
  {
    alt_release_fd (index);  
 400f044:	e13ff917 	ldw	r4,-28(fp)
 400f048:	400d94c0 	call	400d94c <alt_release_fd>
    ALT_ERRNO = -status;
 400f04c:	400edfc0 	call	400edfc <alt_get_errno>
 400f050:	1007883a 	mov	r3,r2
 400f054:	e0bffa17 	ldw	r2,-24(fp)
 400f058:	0085c83a 	sub	r2,zero,r2
 400f05c:	18800015 	stw	r2,0(r3)
    return -1;
 400f060:	00bfffc4 	movi	r2,-1
 400f064:	00000106 	br	400f06c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 400f068:	e0bff917 	ldw	r2,-28(fp)
}
 400f06c:	e037883a 	mov	sp,fp
 400f070:	dfc00117 	ldw	ra,4(sp)
 400f074:	df000017 	ldw	fp,0(sp)
 400f078:	dec00204 	addi	sp,sp,8
 400f07c:	f800283a 	ret

0400f080 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400f080:	defffa04 	addi	sp,sp,-24
 400f084:	df000515 	stw	fp,20(sp)
 400f088:	df000504 	addi	fp,sp,20
 400f08c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f090:	0005303a 	rdctl	r2,status
 400f094:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f098:	e0fffc17 	ldw	r3,-16(fp)
 400f09c:	00bfff84 	movi	r2,-2
 400f0a0:	1884703a 	and	r2,r3,r2
 400f0a4:	1001703a 	wrctl	status,r2
  
  return context;
 400f0a8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400f0ac:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 400f0b0:	e0bfff17 	ldw	r2,-4(fp)
 400f0b4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400f0b8:	e0bffd17 	ldw	r2,-12(fp)
 400f0bc:	10800017 	ldw	r2,0(r2)
 400f0c0:	e0fffd17 	ldw	r3,-12(fp)
 400f0c4:	18c00117 	ldw	r3,4(r3)
 400f0c8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400f0cc:	e0bffd17 	ldw	r2,-12(fp)
 400f0d0:	10800117 	ldw	r2,4(r2)
 400f0d4:	e0fffd17 	ldw	r3,-12(fp)
 400f0d8:	18c00017 	ldw	r3,0(r3)
 400f0dc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400f0e0:	e0bffd17 	ldw	r2,-12(fp)
 400f0e4:	e0fffd17 	ldw	r3,-12(fp)
 400f0e8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400f0ec:	e0bffd17 	ldw	r2,-12(fp)
 400f0f0:	e0fffd17 	ldw	r3,-12(fp)
 400f0f4:	10c00015 	stw	r3,0(r2)
 400f0f8:	e0bffb17 	ldw	r2,-20(fp)
 400f0fc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f100:	e0bffe17 	ldw	r2,-8(fp)
 400f104:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 400f108:	0001883a 	nop
 400f10c:	e037883a 	mov	sp,fp
 400f110:	df000017 	ldw	fp,0(sp)
 400f114:	dec00104 	addi	sp,sp,4
 400f118:	f800283a 	ret

0400f11c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400f11c:	defffb04 	addi	sp,sp,-20
 400f120:	dfc00415 	stw	ra,16(sp)
 400f124:	df000315 	stw	fp,12(sp)
 400f128:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400f12c:	d0a00e17 	ldw	r2,-32712(gp)
 400f130:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400f134:	d0a6d917 	ldw	r2,-25756(gp)
 400f138:	10800044 	addi	r2,r2,1
 400f13c:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f140:	00002e06 	br	400f1fc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400f144:	e0bffd17 	ldw	r2,-12(fp)
 400f148:	10800017 	ldw	r2,0(r2)
 400f14c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400f150:	e0bffd17 	ldw	r2,-12(fp)
 400f154:	10800403 	ldbu	r2,16(r2)
 400f158:	10803fcc 	andi	r2,r2,255
 400f15c:	10000426 	beq	r2,zero,400f170 <alt_tick+0x54>
 400f160:	d0a6d917 	ldw	r2,-25756(gp)
 400f164:	1000021e 	bne	r2,zero,400f170 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400f168:	e0bffd17 	ldw	r2,-12(fp)
 400f16c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400f170:	e0bffd17 	ldw	r2,-12(fp)
 400f174:	10800217 	ldw	r2,8(r2)
 400f178:	d0e6d917 	ldw	r3,-25756(gp)
 400f17c:	18801d36 	bltu	r3,r2,400f1f4 <alt_tick+0xd8>
 400f180:	e0bffd17 	ldw	r2,-12(fp)
 400f184:	10800403 	ldbu	r2,16(r2)
 400f188:	10803fcc 	andi	r2,r2,255
 400f18c:	1000191e 	bne	r2,zero,400f1f4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 400f190:	e0bffd17 	ldw	r2,-12(fp)
 400f194:	10800317 	ldw	r2,12(r2)
 400f198:	e0fffd17 	ldw	r3,-12(fp)
 400f19c:	18c00517 	ldw	r3,20(r3)
 400f1a0:	1809883a 	mov	r4,r3
 400f1a4:	103ee83a 	callr	r2
 400f1a8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 400f1ac:	e0bfff17 	ldw	r2,-4(fp)
 400f1b0:	1000031e 	bne	r2,zero,400f1c0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 400f1b4:	e13ffd17 	ldw	r4,-12(fp)
 400f1b8:	400f0800 	call	400f080 <alt_alarm_stop>
 400f1bc:	00000d06 	br	400f1f4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 400f1c0:	e0bffd17 	ldw	r2,-12(fp)
 400f1c4:	10c00217 	ldw	r3,8(r2)
 400f1c8:	e0bfff17 	ldw	r2,-4(fp)
 400f1cc:	1887883a 	add	r3,r3,r2
 400f1d0:	e0bffd17 	ldw	r2,-12(fp)
 400f1d4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 400f1d8:	e0bffd17 	ldw	r2,-12(fp)
 400f1dc:	10c00217 	ldw	r3,8(r2)
 400f1e0:	d0a6d917 	ldw	r2,-25756(gp)
 400f1e4:	1880032e 	bgeu	r3,r2,400f1f4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 400f1e8:	e0bffd17 	ldw	r2,-12(fp)
 400f1ec:	00c00044 	movi	r3,1
 400f1f0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 400f1f4:	e0bffe17 	ldw	r2,-8(fp)
 400f1f8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f1fc:	e0fffd17 	ldw	r3,-12(fp)
 400f200:	d0a00e04 	addi	r2,gp,-32712
 400f204:	18bfcf1e 	bne	r3,r2,400f144 <__alt_mem_onchip_memory+0xfc007144>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 400f208:	0001883a 	nop
}
 400f20c:	0001883a 	nop
 400f210:	e037883a 	mov	sp,fp
 400f214:	dfc00117 	ldw	ra,4(sp)
 400f218:	df000017 	ldw	fp,0(sp)
 400f21c:	dec00204 	addi	sp,sp,8
 400f220:	f800283a 	ret

0400f224 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 400f224:	deffff04 	addi	sp,sp,-4
 400f228:	df000015 	stw	fp,0(sp)
 400f22c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 400f230:	000170fa 	wrctl	ienable,zero
}
 400f234:	0001883a 	nop
 400f238:	e037883a 	mov	sp,fp
 400f23c:	df000017 	ldw	fp,0(sp)
 400f240:	dec00104 	addi	sp,sp,4
 400f244:	f800283a 	ret

0400f248 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 400f248:	defffa04 	addi	sp,sp,-24
 400f24c:	dfc00515 	stw	ra,20(sp)
 400f250:	df000415 	stw	fp,16(sp)
 400f254:	df000404 	addi	fp,sp,16
 400f258:	e13ffe15 	stw	r4,-8(fp)
 400f25c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 400f260:	e0bfff17 	ldw	r2,-4(fp)
 400f264:	10800017 	ldw	r2,0(r2)
 400f268:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 400f26c:	e13ffe17 	ldw	r4,-8(fp)
 400f270:	40004280 	call	4000428 <strlen>
 400f274:	10800044 	addi	r2,r2,1
 400f278:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400f27c:	00000d06 	br	400f2b4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 400f280:	e0bffc17 	ldw	r2,-16(fp)
 400f284:	10800217 	ldw	r2,8(r2)
 400f288:	e0fffd17 	ldw	r3,-12(fp)
 400f28c:	180d883a 	mov	r6,r3
 400f290:	e17ffe17 	ldw	r5,-8(fp)
 400f294:	1009883a 	mov	r4,r2
 400f298:	400f58c0 	call	400f58c <memcmp>
 400f29c:	1000021e 	bne	r2,zero,400f2a8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 400f2a0:	e0bffc17 	ldw	r2,-16(fp)
 400f2a4:	00000706 	br	400f2c4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 400f2a8:	e0bffc17 	ldw	r2,-16(fp)
 400f2ac:	10800017 	ldw	r2,0(r2)
 400f2b0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400f2b4:	e0fffc17 	ldw	r3,-16(fp)
 400f2b8:	e0bfff17 	ldw	r2,-4(fp)
 400f2bc:	18bff01e 	bne	r3,r2,400f280 <__alt_mem_onchip_memory+0xfc007280>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 400f2c0:	0005883a 	mov	r2,zero
}
 400f2c4:	e037883a 	mov	sp,fp
 400f2c8:	dfc00117 	ldw	ra,4(sp)
 400f2cc:	df000017 	ldw	fp,0(sp)
 400f2d0:	dec00204 	addi	sp,sp,8
 400f2d4:	f800283a 	ret

0400f2d8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 400f2d8:	defffb04 	addi	sp,sp,-20
 400f2dc:	dfc00415 	stw	ra,16(sp)
 400f2e0:	df000315 	stw	fp,12(sp)
 400f2e4:	df000304 	addi	fp,sp,12
 400f2e8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 400f2ec:	d0a00617 	ldw	r2,-32744(gp)
 400f2f0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400f2f4:	00003106 	br	400f3bc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 400f2f8:	e0bffd17 	ldw	r2,-12(fp)
 400f2fc:	10800217 	ldw	r2,8(r2)
 400f300:	1009883a 	mov	r4,r2
 400f304:	40004280 	call	4000428 <strlen>
 400f308:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 400f30c:	e0bffd17 	ldw	r2,-12(fp)
 400f310:	10c00217 	ldw	r3,8(r2)
 400f314:	e0bffe17 	ldw	r2,-8(fp)
 400f318:	10bfffc4 	addi	r2,r2,-1
 400f31c:	1885883a 	add	r2,r3,r2
 400f320:	10800003 	ldbu	r2,0(r2)
 400f324:	10803fcc 	andi	r2,r2,255
 400f328:	1080201c 	xori	r2,r2,128
 400f32c:	10bfe004 	addi	r2,r2,-128
 400f330:	10800bd8 	cmpnei	r2,r2,47
 400f334:	1000031e 	bne	r2,zero,400f344 <alt_find_file+0x6c>
    {
      len -= 1;
 400f338:	e0bffe17 	ldw	r2,-8(fp)
 400f33c:	10bfffc4 	addi	r2,r2,-1
 400f340:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f344:	e0bffe17 	ldw	r2,-8(fp)
 400f348:	e0ffff17 	ldw	r3,-4(fp)
 400f34c:	1885883a 	add	r2,r3,r2
 400f350:	10800003 	ldbu	r2,0(r2)
 400f354:	10803fcc 	andi	r2,r2,255
 400f358:	1080201c 	xori	r2,r2,128
 400f35c:	10bfe004 	addi	r2,r2,-128
 400f360:	10800be0 	cmpeqi	r2,r2,47
 400f364:	1000081e 	bne	r2,zero,400f388 <alt_find_file+0xb0>
 400f368:	e0bffe17 	ldw	r2,-8(fp)
 400f36c:	e0ffff17 	ldw	r3,-4(fp)
 400f370:	1885883a 	add	r2,r3,r2
 400f374:	10800003 	ldbu	r2,0(r2)
 400f378:	10803fcc 	andi	r2,r2,255
 400f37c:	1080201c 	xori	r2,r2,128
 400f380:	10bfe004 	addi	r2,r2,-128
 400f384:	10000a1e 	bne	r2,zero,400f3b0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 400f388:	e0bffd17 	ldw	r2,-12(fp)
 400f38c:	10800217 	ldw	r2,8(r2)
 400f390:	e0fffe17 	ldw	r3,-8(fp)
 400f394:	180d883a 	mov	r6,r3
 400f398:	e17fff17 	ldw	r5,-4(fp)
 400f39c:	1009883a 	mov	r4,r2
 400f3a0:	400f58c0 	call	400f58c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f3a4:	1000021e 	bne	r2,zero,400f3b0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 400f3a8:	e0bffd17 	ldw	r2,-12(fp)
 400f3ac:	00000706 	br	400f3cc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 400f3b0:	e0bffd17 	ldw	r2,-12(fp)
 400f3b4:	10800017 	ldw	r2,0(r2)
 400f3b8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400f3bc:	e0fffd17 	ldw	r3,-12(fp)
 400f3c0:	d0a00604 	addi	r2,gp,-32744
 400f3c4:	18bfcc1e 	bne	r3,r2,400f2f8 <__alt_mem_onchip_memory+0xfc0072f8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 400f3c8:	0005883a 	mov	r2,zero
}
 400f3cc:	e037883a 	mov	sp,fp
 400f3d0:	dfc00117 	ldw	ra,4(sp)
 400f3d4:	df000017 	ldw	fp,0(sp)
 400f3d8:	dec00204 	addi	sp,sp,8
 400f3dc:	f800283a 	ret

0400f3e0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 400f3e0:	defffa04 	addi	sp,sp,-24
 400f3e4:	dfc00515 	stw	ra,20(sp)
 400f3e8:	df000415 	stw	fp,16(sp)
 400f3ec:	dc000315 	stw	r16,12(sp)
 400f3f0:	df000404 	addi	fp,sp,16
 400f3f4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 400f3f8:	00bffa04 	movi	r2,-24
 400f3fc:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400f400:	e03ffc15 	stw	zero,-16(fp)
 400f404:	00001d06 	br	400f47c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 400f408:	04010074 	movhi	r16,1025
 400f40c:	84014004 	addi	r16,r16,1280
 400f410:	e0bffc17 	ldw	r2,-16(fp)
 400f414:	01400304 	movi	r5,12
 400f418:	1009883a 	mov	r4,r2
 400f41c:	400a95c0 	call	400a95c <__mulsi3>
 400f420:	8085883a 	add	r2,r16,r2
 400f424:	10800017 	ldw	r2,0(r2)
 400f428:	1000111e 	bne	r2,zero,400f470 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 400f42c:	04010074 	movhi	r16,1025
 400f430:	84014004 	addi	r16,r16,1280
 400f434:	e0bffc17 	ldw	r2,-16(fp)
 400f438:	01400304 	movi	r5,12
 400f43c:	1009883a 	mov	r4,r2
 400f440:	400a95c0 	call	400a95c <__mulsi3>
 400f444:	8085883a 	add	r2,r16,r2
 400f448:	e0fffe17 	ldw	r3,-8(fp)
 400f44c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 400f450:	d0e00a17 	ldw	r3,-32728(gp)
 400f454:	e0bffc17 	ldw	r2,-16(fp)
 400f458:	1880020e 	bge	r3,r2,400f464 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 400f45c:	e0bffc17 	ldw	r2,-16(fp)
 400f460:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 400f464:	e0bffc17 	ldw	r2,-16(fp)
 400f468:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 400f46c:	00000606 	br	400f488 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400f470:	e0bffc17 	ldw	r2,-16(fp)
 400f474:	10800044 	addi	r2,r2,1
 400f478:	e0bffc15 	stw	r2,-16(fp)
 400f47c:	e0bffc17 	ldw	r2,-16(fp)
 400f480:	10800810 	cmplti	r2,r2,32
 400f484:	103fe01e 	bne	r2,zero,400f408 <__alt_mem_onchip_memory+0xfc007408>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 400f488:	e0bffd17 	ldw	r2,-12(fp)
}
 400f48c:	e6ffff04 	addi	sp,fp,-4
 400f490:	dfc00217 	ldw	ra,8(sp)
 400f494:	df000117 	ldw	fp,4(sp)
 400f498:	dc000017 	ldw	r16,0(sp)
 400f49c:	dec00304 	addi	sp,sp,12
 400f4a0:	f800283a 	ret

0400f4a4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 400f4a4:	defffe04 	addi	sp,sp,-8
 400f4a8:	df000115 	stw	fp,4(sp)
 400f4ac:	df000104 	addi	fp,sp,4
 400f4b0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 400f4b4:	e0bfff17 	ldw	r2,-4(fp)
 400f4b8:	10bffe84 	addi	r2,r2,-6
 400f4bc:	10c00428 	cmpgeui	r3,r2,16
 400f4c0:	18001a1e 	bne	r3,zero,400f52c <alt_exception_cause_generated_bad_addr+0x88>
 400f4c4:	100690ba 	slli	r3,r2,2
 400f4c8:	00810074 	movhi	r2,1025
 400f4cc:	10bd3704 	addi	r2,r2,-2852
 400f4d0:	1885883a 	add	r2,r3,r2
 400f4d4:	10800017 	ldw	r2,0(r2)
 400f4d8:	1000683a 	jmp	r2
 400f4dc:	0400f51c 	xori	r16,zero,980
 400f4e0:	0400f51c 	xori	r16,zero,980
 400f4e4:	0400f52c 	andhi	r16,zero,980
 400f4e8:	0400f52c 	andhi	r16,zero,980
 400f4ec:	0400f52c 	andhi	r16,zero,980
 400f4f0:	0400f51c 	xori	r16,zero,980
 400f4f4:	0400f524 	muli	r16,zero,980
 400f4f8:	0400f52c 	andhi	r16,zero,980
 400f4fc:	0400f51c 	xori	r16,zero,980
 400f500:	0400f51c 	xori	r16,zero,980
 400f504:	0400f52c 	andhi	r16,zero,980
 400f508:	0400f51c 	xori	r16,zero,980
 400f50c:	0400f524 	muli	r16,zero,980
 400f510:	0400f52c 	andhi	r16,zero,980
 400f514:	0400f52c 	andhi	r16,zero,980
 400f518:	0400f51c 	xori	r16,zero,980
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 400f51c:	00800044 	movi	r2,1
 400f520:	00000306 	br	400f530 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 400f524:	0005883a 	mov	r2,zero
 400f528:	00000106 	br	400f530 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 400f52c:	0005883a 	mov	r2,zero
  }
}
 400f530:	e037883a 	mov	sp,fp
 400f534:	df000017 	ldw	fp,0(sp)
 400f538:	dec00104 	addi	sp,sp,4
 400f53c:	f800283a 	ret

0400f540 <atexit>:
 400f540:	200b883a 	mov	r5,r4
 400f544:	000f883a 	mov	r7,zero
 400f548:	000d883a 	mov	r6,zero
 400f54c:	0009883a 	mov	r4,zero
 400f550:	400f6081 	jmpi	400f608 <__register_exitproc>

0400f554 <exit>:
 400f554:	defffe04 	addi	sp,sp,-8
 400f558:	000b883a 	mov	r5,zero
 400f55c:	dc000015 	stw	r16,0(sp)
 400f560:	dfc00115 	stw	ra,4(sp)
 400f564:	2021883a 	mov	r16,r4
 400f568:	400f7200 	call	400f720 <__call_exitprocs>
 400f56c:	00810074 	movhi	r2,1025
 400f570:	1085b804 	addi	r2,r2,5856
 400f574:	11000017 	ldw	r4,0(r2)
 400f578:	20800f17 	ldw	r2,60(r4)
 400f57c:	10000126 	beq	r2,zero,400f584 <exit+0x30>
 400f580:	103ee83a 	callr	r2
 400f584:	8009883a 	mov	r4,r16
 400f588:	400f8a00 	call	400f8a0 <_exit>

0400f58c <memcmp>:
 400f58c:	01c000c4 	movi	r7,3
 400f590:	3980192e 	bgeu	r7,r6,400f5f8 <memcmp+0x6c>
 400f594:	2144b03a 	or	r2,r4,r5
 400f598:	11c4703a 	and	r2,r2,r7
 400f59c:	10000f26 	beq	r2,zero,400f5dc <memcmp+0x50>
 400f5a0:	20800003 	ldbu	r2,0(r4)
 400f5a4:	28c00003 	ldbu	r3,0(r5)
 400f5a8:	10c0151e 	bne	r2,r3,400f600 <memcmp+0x74>
 400f5ac:	31bfff84 	addi	r6,r6,-2
 400f5b0:	01ffffc4 	movi	r7,-1
 400f5b4:	00000406 	br	400f5c8 <memcmp+0x3c>
 400f5b8:	20800003 	ldbu	r2,0(r4)
 400f5bc:	28c00003 	ldbu	r3,0(r5)
 400f5c0:	31bfffc4 	addi	r6,r6,-1
 400f5c4:	10c00e1e 	bne	r2,r3,400f600 <memcmp+0x74>
 400f5c8:	21000044 	addi	r4,r4,1
 400f5cc:	29400044 	addi	r5,r5,1
 400f5d0:	31fff91e 	bne	r6,r7,400f5b8 <__alt_mem_onchip_memory+0xfc0075b8>
 400f5d4:	0005883a 	mov	r2,zero
 400f5d8:	f800283a 	ret
 400f5dc:	20c00017 	ldw	r3,0(r4)
 400f5e0:	28800017 	ldw	r2,0(r5)
 400f5e4:	18bfee1e 	bne	r3,r2,400f5a0 <__alt_mem_onchip_memory+0xfc0075a0>
 400f5e8:	31bfff04 	addi	r6,r6,-4
 400f5ec:	21000104 	addi	r4,r4,4
 400f5f0:	29400104 	addi	r5,r5,4
 400f5f4:	39bff936 	bltu	r7,r6,400f5dc <__alt_mem_onchip_memory+0xfc0075dc>
 400f5f8:	303fe91e 	bne	r6,zero,400f5a0 <__alt_mem_onchip_memory+0xfc0075a0>
 400f5fc:	003ff506 	br	400f5d4 <__alt_mem_onchip_memory+0xfc0075d4>
 400f600:	10c5c83a 	sub	r2,r2,r3
 400f604:	f800283a 	ret

0400f608 <__register_exitproc>:
 400f608:	defffa04 	addi	sp,sp,-24
 400f60c:	dc000315 	stw	r16,12(sp)
 400f610:	04010074 	movhi	r16,1025
 400f614:	8405b804 	addi	r16,r16,5856
 400f618:	80c00017 	ldw	r3,0(r16)
 400f61c:	dc400415 	stw	r17,16(sp)
 400f620:	dfc00515 	stw	ra,20(sp)
 400f624:	18805217 	ldw	r2,328(r3)
 400f628:	2023883a 	mov	r17,r4
 400f62c:	10003726 	beq	r2,zero,400f70c <__register_exitproc+0x104>
 400f630:	10c00117 	ldw	r3,4(r2)
 400f634:	010007c4 	movi	r4,31
 400f638:	20c00e16 	blt	r4,r3,400f674 <__register_exitproc+0x6c>
 400f63c:	1a000044 	addi	r8,r3,1
 400f640:	8800221e 	bne	r17,zero,400f6cc <__register_exitproc+0xc4>
 400f644:	18c00084 	addi	r3,r3,2
 400f648:	18c7883a 	add	r3,r3,r3
 400f64c:	18c7883a 	add	r3,r3,r3
 400f650:	12000115 	stw	r8,4(r2)
 400f654:	10c7883a 	add	r3,r2,r3
 400f658:	19400015 	stw	r5,0(r3)
 400f65c:	0005883a 	mov	r2,zero
 400f660:	dfc00517 	ldw	ra,20(sp)
 400f664:	dc400417 	ldw	r17,16(sp)
 400f668:	dc000317 	ldw	r16,12(sp)
 400f66c:	dec00604 	addi	sp,sp,24
 400f670:	f800283a 	ret
 400f674:	00800034 	movhi	r2,0
 400f678:	10800004 	addi	r2,r2,0
 400f67c:	10002626 	beq	r2,zero,400f718 <__register_exitproc+0x110>
 400f680:	01006404 	movi	r4,400
 400f684:	d9400015 	stw	r5,0(sp)
 400f688:	d9800115 	stw	r6,4(sp)
 400f68c:	d9c00215 	stw	r7,8(sp)
 400f690:	00000000 	call	0 <__alt_mem_sdram-0x4000000>
 400f694:	d9400017 	ldw	r5,0(sp)
 400f698:	d9800117 	ldw	r6,4(sp)
 400f69c:	d9c00217 	ldw	r7,8(sp)
 400f6a0:	10001d26 	beq	r2,zero,400f718 <__register_exitproc+0x110>
 400f6a4:	81000017 	ldw	r4,0(r16)
 400f6a8:	10000115 	stw	zero,4(r2)
 400f6ac:	02000044 	movi	r8,1
 400f6b0:	22405217 	ldw	r9,328(r4)
 400f6b4:	0007883a 	mov	r3,zero
 400f6b8:	12400015 	stw	r9,0(r2)
 400f6bc:	20805215 	stw	r2,328(r4)
 400f6c0:	10006215 	stw	zero,392(r2)
 400f6c4:	10006315 	stw	zero,396(r2)
 400f6c8:	883fde26 	beq	r17,zero,400f644 <__alt_mem_onchip_memory+0xfc007644>
 400f6cc:	18c9883a 	add	r4,r3,r3
 400f6d0:	2109883a 	add	r4,r4,r4
 400f6d4:	1109883a 	add	r4,r2,r4
 400f6d8:	21802215 	stw	r6,136(r4)
 400f6dc:	01800044 	movi	r6,1
 400f6e0:	12406217 	ldw	r9,392(r2)
 400f6e4:	30cc983a 	sll	r6,r6,r3
 400f6e8:	4992b03a 	or	r9,r9,r6
 400f6ec:	12406215 	stw	r9,392(r2)
 400f6f0:	21c04215 	stw	r7,264(r4)
 400f6f4:	01000084 	movi	r4,2
 400f6f8:	893fd21e 	bne	r17,r4,400f644 <__alt_mem_onchip_memory+0xfc007644>
 400f6fc:	11006317 	ldw	r4,396(r2)
 400f700:	218cb03a 	or	r6,r4,r6
 400f704:	11806315 	stw	r6,396(r2)
 400f708:	003fce06 	br	400f644 <__alt_mem_onchip_memory+0xfc007644>
 400f70c:	18805304 	addi	r2,r3,332
 400f710:	18805215 	stw	r2,328(r3)
 400f714:	003fc606 	br	400f630 <__alt_mem_onchip_memory+0xfc007630>
 400f718:	00bfffc4 	movi	r2,-1
 400f71c:	003fd006 	br	400f660 <__alt_mem_onchip_memory+0xfc007660>

0400f720 <__call_exitprocs>:
 400f720:	defff504 	addi	sp,sp,-44
 400f724:	df000915 	stw	fp,36(sp)
 400f728:	dd400615 	stw	r21,24(sp)
 400f72c:	dc800315 	stw	r18,12(sp)
 400f730:	dfc00a15 	stw	ra,40(sp)
 400f734:	ddc00815 	stw	r23,32(sp)
 400f738:	dd800715 	stw	r22,28(sp)
 400f73c:	dd000515 	stw	r20,20(sp)
 400f740:	dcc00415 	stw	r19,16(sp)
 400f744:	dc400215 	stw	r17,8(sp)
 400f748:	dc000115 	stw	r16,4(sp)
 400f74c:	d9000015 	stw	r4,0(sp)
 400f750:	2839883a 	mov	fp,r5
 400f754:	04800044 	movi	r18,1
 400f758:	057fffc4 	movi	r21,-1
 400f75c:	00810074 	movhi	r2,1025
 400f760:	1085b804 	addi	r2,r2,5856
 400f764:	12000017 	ldw	r8,0(r2)
 400f768:	45005217 	ldw	r20,328(r8)
 400f76c:	44c05204 	addi	r19,r8,328
 400f770:	a0001c26 	beq	r20,zero,400f7e4 <__call_exitprocs+0xc4>
 400f774:	a0800117 	ldw	r2,4(r20)
 400f778:	15ffffc4 	addi	r23,r2,-1
 400f77c:	b8000d16 	blt	r23,zero,400f7b4 <__call_exitprocs+0x94>
 400f780:	14000044 	addi	r16,r2,1
 400f784:	8421883a 	add	r16,r16,r16
 400f788:	8421883a 	add	r16,r16,r16
 400f78c:	84402004 	addi	r17,r16,128
 400f790:	a463883a 	add	r17,r20,r17
 400f794:	a421883a 	add	r16,r20,r16
 400f798:	e0001e26 	beq	fp,zero,400f814 <__call_exitprocs+0xf4>
 400f79c:	80804017 	ldw	r2,256(r16)
 400f7a0:	e0801c26 	beq	fp,r2,400f814 <__call_exitprocs+0xf4>
 400f7a4:	bdffffc4 	addi	r23,r23,-1
 400f7a8:	843fff04 	addi	r16,r16,-4
 400f7ac:	8c7fff04 	addi	r17,r17,-4
 400f7b0:	bd7ff91e 	bne	r23,r21,400f798 <__alt_mem_onchip_memory+0xfc007798>
 400f7b4:	00800034 	movhi	r2,0
 400f7b8:	10800004 	addi	r2,r2,0
 400f7bc:	10000926 	beq	r2,zero,400f7e4 <__call_exitprocs+0xc4>
 400f7c0:	a0800117 	ldw	r2,4(r20)
 400f7c4:	1000301e 	bne	r2,zero,400f888 <__call_exitprocs+0x168>
 400f7c8:	a0800017 	ldw	r2,0(r20)
 400f7cc:	10003226 	beq	r2,zero,400f898 <__call_exitprocs+0x178>
 400f7d0:	a009883a 	mov	r4,r20
 400f7d4:	98800015 	stw	r2,0(r19)
 400f7d8:	00000000 	call	0 <__alt_mem_sdram-0x4000000>
 400f7dc:	9d000017 	ldw	r20,0(r19)
 400f7e0:	a03fe41e 	bne	r20,zero,400f774 <__alt_mem_onchip_memory+0xfc007774>
 400f7e4:	dfc00a17 	ldw	ra,40(sp)
 400f7e8:	df000917 	ldw	fp,36(sp)
 400f7ec:	ddc00817 	ldw	r23,32(sp)
 400f7f0:	dd800717 	ldw	r22,28(sp)
 400f7f4:	dd400617 	ldw	r21,24(sp)
 400f7f8:	dd000517 	ldw	r20,20(sp)
 400f7fc:	dcc00417 	ldw	r19,16(sp)
 400f800:	dc800317 	ldw	r18,12(sp)
 400f804:	dc400217 	ldw	r17,8(sp)
 400f808:	dc000117 	ldw	r16,4(sp)
 400f80c:	dec00b04 	addi	sp,sp,44
 400f810:	f800283a 	ret
 400f814:	a0800117 	ldw	r2,4(r20)
 400f818:	80c00017 	ldw	r3,0(r16)
 400f81c:	10bfffc4 	addi	r2,r2,-1
 400f820:	15c01426 	beq	r2,r23,400f874 <__call_exitprocs+0x154>
 400f824:	80000015 	stw	zero,0(r16)
 400f828:	183fde26 	beq	r3,zero,400f7a4 <__alt_mem_onchip_memory+0xfc0077a4>
 400f82c:	95c8983a 	sll	r4,r18,r23
 400f830:	a0806217 	ldw	r2,392(r20)
 400f834:	a5800117 	ldw	r22,4(r20)
 400f838:	2084703a 	and	r2,r4,r2
 400f83c:	10000b26 	beq	r2,zero,400f86c <__call_exitprocs+0x14c>
 400f840:	a0806317 	ldw	r2,396(r20)
 400f844:	2088703a 	and	r4,r4,r2
 400f848:	20000c1e 	bne	r4,zero,400f87c <__call_exitprocs+0x15c>
 400f84c:	89400017 	ldw	r5,0(r17)
 400f850:	d9000017 	ldw	r4,0(sp)
 400f854:	183ee83a 	callr	r3
 400f858:	a0800117 	ldw	r2,4(r20)
 400f85c:	15bfbf1e 	bne	r2,r22,400f75c <__alt_mem_onchip_memory+0xfc00775c>
 400f860:	98800017 	ldw	r2,0(r19)
 400f864:	153fcf26 	beq	r2,r20,400f7a4 <__alt_mem_onchip_memory+0xfc0077a4>
 400f868:	003fbc06 	br	400f75c <__alt_mem_onchip_memory+0xfc00775c>
 400f86c:	183ee83a 	callr	r3
 400f870:	003ff906 	br	400f858 <__alt_mem_onchip_memory+0xfc007858>
 400f874:	a5c00115 	stw	r23,4(r20)
 400f878:	003feb06 	br	400f828 <__alt_mem_onchip_memory+0xfc007828>
 400f87c:	89000017 	ldw	r4,0(r17)
 400f880:	183ee83a 	callr	r3
 400f884:	003ff406 	br	400f858 <__alt_mem_onchip_memory+0xfc007858>
 400f888:	a0800017 	ldw	r2,0(r20)
 400f88c:	a027883a 	mov	r19,r20
 400f890:	1029883a 	mov	r20,r2
 400f894:	003fb606 	br	400f770 <__alt_mem_onchip_memory+0xfc007770>
 400f898:	0005883a 	mov	r2,zero
 400f89c:	003ffb06 	br	400f88c <__alt_mem_onchip_memory+0xfc00788c>

0400f8a0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 400f8a0:	defffd04 	addi	sp,sp,-12
 400f8a4:	df000215 	stw	fp,8(sp)
 400f8a8:	df000204 	addi	fp,sp,8
 400f8ac:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 400f8b0:	0001883a 	nop
 400f8b4:	e0bfff17 	ldw	r2,-4(fp)
 400f8b8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 400f8bc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 400f8c0:	10000226 	beq	r2,zero,400f8cc <_exit+0x2c>
    ALT_SIM_FAIL();
 400f8c4:	002af070 	cmpltui	zero,zero,43969
 400f8c8:	00000106 	br	400f8d0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 400f8cc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 400f8d0:	003fff06 	br	400f8d0 <__alt_mem_onchip_memory+0xfc0078d0>
